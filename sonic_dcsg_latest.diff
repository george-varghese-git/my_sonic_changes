diff --git a/dockers/docker-orchagent/orchagent.sh b/dockers/docker-orchagent/orchagent.sh
index b0d19823f..3a5459eb1 100755
--- a/dockers/docker-orchagent/orchagent.sh
+++ b/dockers/docker-orchagent/orchagent.sh
@@ -66,6 +66,8 @@ elif [ "$platform" == "barefoot" ]; then
     ORCHAGENT_ARGS+="-m $MAC_ADDRESS"
 elif [ "$platform" == "vs" ]; then
     ORCHAGENT_ARGS+="-m $MAC_ADDRESS"
+elif [ "$platform" == "dcsg" ]; then
+    ORCHAGENT_ARGS+="-m $MAC_ADDRESS"
 elif [ "$platform" == "mellanox" ]; then
     ORCHAGENT_ARGS+=""
 elif [ "$platform" == "marvell-teralynx" ]; then
diff --git a/dockers/docker-pde/syncd_init_common.sh b/dockers/docker-pde/syncd_init_common.sh
index 762242b65..90a6d4d5d 100755
--- a/dockers/docker-pde/syncd_init_common.sh
+++ b/dockers/docker-pde/syncd_init_common.sh
@@ -195,6 +195,11 @@ config_syncd_vs()
     CMD_ARGS+=" -p $HWSKU_DIR/sai.profile"
 }
 
+config_syncd_dcsg()
+{
+    CMD_ARGS+=" -p $HWSKU_DIR/sai.profile"
+}
+
 config_syncd_marvell_teralynx()
 {
     CMD_ARGS+=" -p $HWSKU_DIR/sai.profile"
@@ -222,6 +227,8 @@ config_syncd()
         config_syncd_nephos
     elif [ "$SONIC_ASIC_TYPE" == "vs" ]; then
         config_syncd_vs
+    elif [ "$SONIC_ASIC_TYPE" == "dcsg" ]; then
+        config_syncd_dcsg
     elif [ "$SONIC_ASIC_TYPE" == "marvell-teralynx" ]; then
         config_syncd_marvell_teralynx
     else
diff --git a/files/build/versions/build/build-sonic-slave-bookworm/versions-deb-bookworm b/files/build/versions/build/build-sonic-slave-bookworm/versions-deb-bookworm
index 5e2e7ffd9..c42a453bf 100644
--- a/files/build/versions/build/build-sonic-slave-bookworm/versions-deb-bookworm
+++ b/files/build/versions/build/build-sonic-slave-bookworm/versions-deb-bookworm
@@ -24,6 +24,7 @@ libsairedis==1.0.0
 libsairedis-dev==1.0.0
 libsaithrift-dev==0.9.4
 libsaivs==1.0.0
+libsaidcsg==1.0.0
 libswsscommon==1.0.0
 libswsscommon-dev==1.0.0
 libtac-dev==1.4.1-1
diff --git a/files/build/versions/build/build-sonic-slave-buster/versions-deb-buster b/files/build/versions/build/build-sonic-slave-buster/versions-deb-buster
index fa47ae8c6..1801e4a6c 100644
--- a/files/build/versions/build/build-sonic-slave-buster/versions-deb-buster
+++ b/files/build/versions/build/build-sonic-slave-buster/versions-deb-buster
@@ -13,6 +13,8 @@ libsaimetadata-dev==1.0.0
 libsairedis==1.0.0
 libsaivs==1.0.0
 libsaivs-dev==1.0.0
+libsaidcsg==1.0.0
+libsaidcsg-dev==1.0.0
 libswsscommon==1.0.0
 libswsscommon-dev==1.0.0
 libthrift-0.11.0==0.11.0-4
diff --git a/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-deb-bookworm b/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-deb-bookworm
new file mode 100644
index 000000000..6bc04eaf4
--- /dev/null
+++ b/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-deb-bookworm
@@ -0,0 +1,305 @@
+autoconf==2.71-3
+automake==1:1.16.5-1.3
+autotools-dev==20220109.1
+binutils==2.40-2
+binutils-x86-64-linux-gnu==2.40-2
+clang==1:14.0-55.7~deb12u1
+clang-14==1:14.0.6-12
+cpp==4:12.2.0-3
+cpp-12==12.2.0-14
+file==1:5.44-3
+flex==2.6.4-8.2
+gcc==4:12.2.0-3
+gcc-12==12.2.0-14
+gdb==13.1-3
+gdbserver==13.1-3
+gfortran-12==12.2.0-14
+ibverbs-providers==44.0-2
+icu-devtools==72.1-3
+libabsl-dev==20220623.1-1
+libabsl20220623==20220623.1-1
+libasan8==12.2.0-14
+libbabeltrace1==1.5.11-1+b2
+libbinutils==2.40-2
+libboost-all-dev==1.74.0.3
+libboost-atomic-dev==1.74.0.3
+libboost-atomic1.74-dev==1.74.0+ds1-21
+libboost-atomic1.74.0==1.74.0+ds1-21
+libboost-chrono-dev==1.74.0.3
+libboost-chrono1.74-dev==1.74.0+ds1-21
+libboost-chrono1.74.0==1.74.0+ds1-21
+libboost-container-dev==1.74.0.3
+libboost-container1.74-dev==1.74.0+ds1-21
+libboost-container1.74.0==1.74.0+ds1-21
+libboost-context-dev==1.74.0.3
+libboost-context1.74-dev==1.74.0+ds1-21
+libboost-context1.74.0==1.74.0+ds1-21
+libboost-coroutine-dev==1.74.0.3
+libboost-coroutine1.74-dev==1.74.0+ds1-21
+libboost-coroutine1.74.0==1.74.0+ds1-21
+libboost-date-time-dev==1.74.0.3
+libboost-date-time1.74-dev==1.74.0+ds1-21
+libboost-date-time1.74.0==1.74.0+ds1-21
+libboost-dev==1.74.0.3
+libboost-exception-dev==1.74.0.3
+libboost-exception1.74-dev==1.74.0+ds1-21
+libboost-fiber-dev==1.74.0.3
+libboost-fiber1.74-dev==1.74.0+ds1-21
+libboost-fiber1.74.0==1.74.0+ds1-21
+libboost-filesystem-dev==1.74.0.3
+libboost-filesystem1.74-dev==1.74.0+ds1-21
+libboost-filesystem1.74.0==1.74.0+ds1-21
+libboost-graph-dev==1.74.0.3
+libboost-graph-parallel-dev==1.74.0.3
+libboost-graph-parallel1.74-dev==1.74.0+ds1-21
+libboost-graph-parallel1.74.0==1.74.0+ds1-21
+libboost-graph1.74-dev==1.74.0+ds1-21
+libboost-graph1.74.0==1.74.0+ds1-21
+libboost-iostreams-dev==1.74.0.3
+libboost-iostreams1.74-dev==1.74.0+ds1-21
+libboost-iostreams1.74.0==1.74.0+ds1-21
+libboost-locale-dev==1.74.0.3
+libboost-locale1.74-dev==1.74.0+ds1-21
+libboost-locale1.74.0==1.74.0+ds1-21
+libboost-log-dev==1.74.0.3
+libboost-log1.74-dev==1.74.0+ds1-21
+libboost-log1.74.0==1.74.0+ds1-21
+libboost-math-dev==1.74.0.3
+libboost-math1.74-dev==1.74.0+ds1-21
+libboost-math1.74.0==1.74.0+ds1-21
+libboost-mpi-dev==1.74.0.3
+libboost-mpi-python-dev==1.74.0.3
+libboost-mpi-python1.74-dev==1.74.0+ds1-21
+libboost-mpi-python1.74.0==1.74.0+ds1-21
+libboost-mpi1.74-dev==1.74.0+ds1-21
+libboost-mpi1.74.0==1.74.0+ds1-21
+libboost-nowide-dev==1.74.0.3
+libboost-nowide1.74-dev==1.74.0+ds1-21
+libboost-nowide1.74.0==1.74.0+ds1-21
+libboost-numpy-dev==1.74.0.3
+libboost-numpy1.74-dev==1.74.0+ds1-21
+libboost-numpy1.74.0==1.74.0+ds1-21
+libboost-program-options-dev==1.74.0.3
+libboost-program-options1.74-dev==1.74.0+ds1-21
+libboost-program-options1.74.0==1.74.0+ds1-21
+libboost-python-dev==1.74.0.3
+libboost-python1.74-dev==1.74.0+ds1-21
+libboost-python1.74.0==1.74.0+ds1-21
+libboost-random-dev==1.74.0.3
+libboost-random1.74-dev==1.74.0+ds1-21
+libboost-random1.74.0==1.74.0+ds1-21
+libboost-regex-dev==1.74.0.3
+libboost-regex1.74-dev==1.74.0+ds1-21
+libboost-regex1.74.0==1.74.0+ds1-21
+libboost-serialization-dev==1.74.0.3
+libboost-serialization1.74-dev==1.74.0+ds1-21
+libboost-stacktrace-dev==1.74.0.3
+libboost-stacktrace1.74-dev==1.74.0+ds1-21
+libboost-stacktrace1.74.0==1.74.0+ds1-21
+libboost-system-dev==1.74.0.3
+libboost-system1.74-dev==1.74.0+ds1-21
+libboost-system1.74.0==1.74.0+ds1-21
+libboost-test-dev==1.74.0.3
+libboost-test1.74-dev==1.74.0+ds1-21
+libboost-test1.74.0==1.74.0+ds1-21
+libboost-thread-dev==1.74.0.3
+libboost-thread1.74-dev==1.74.0+ds1-21
+libboost-thread1.74.0==1.74.0+ds1-21
+libboost-timer-dev==1.74.0.3
+libboost-timer1.74-dev==1.74.0+ds1-21
+libboost-timer1.74.0==1.74.0+ds1-21
+libboost-tools-dev==1.74.0.3
+libboost-type-erasure-dev==1.74.0.3
+libboost-type-erasure1.74-dev==1.74.0+ds1-21
+libboost-type-erasure1.74.0==1.74.0+ds1-21
+libboost-wave-dev==1.74.0.3
+libboost-wave1.74-dev==1.74.0+ds1-21
+libboost-wave1.74.0==1.74.0+ds1-21
+libboost1.74-dev==1.74.0+ds1-21
+libboost1.74-tools-dev==1.74.0+ds1-21
+libbpf-dev==1:1.1.0-1
+libc-ares-dev==1.18.1-3
+libc-ares2==1.18.1-3
+libc-dev-bin==2.36-9+deb12u9
+libc6-dev==2.36-9+deb12u9
+libcbor0.8==0.8.0-2+b1
+libcc1-0==12.2.0-14
+libclang-common-14-dev==1:14.0.6-12
+libclang-cpp14==1:14.0.6-12
+libclang1-14==1:14.0.6-12
+libctf-nobfd0==2.40-2
+libctf0==2.40-2
+libcurl3-gnutls==7.88.1-10+deb12u8
+libcurl3-nss==7.88.1-10+deb12u8
+libdbus-1-dev==1.14.10-1~deb12u1
+libdebuginfod-common==0.188-2.1
+libdebuginfod1==0.188-2.1
+libdouble-conversion3==3.2.1-1
+libdw1==0.188-2.1
+libedit2==3.1-20221030-2
+libelf-dev==0.188-2.1
+libevent-2.1-7==2.1.12-stable-8
+libevent-core-2.1-7==2.1.12-stable-8
+libevent-dev==2.1.12-stable-8
+libevent-extra-2.1-7==2.1.12-stable-8
+libevent-openssl-2.1-7==2.1.12-stable-8
+libevent-pthreads-2.1-7==2.1.12-stable-8
+libexpat1-dev==2.5.0-1+deb12u1
+libfabric1==1.17.0-3
+libfido2-1==1.12.0-2+b1
+libfl-dev==2.6.4-8.2
+libfl2==2.6.4-8.2
+libgc-dev==1:8.2.2-3
+libgc1==1:8.2.2-3
+libgcc-12-dev==12.2.0-14
+libgfortran-12-dev==12.2.0-14
+libgfortran5==12.2.0-14
+libglib2.0-0==2.74.6-2+deb12u5
+libgmp-dev==2:6.2.1+dfsg1-1.1
+libgmpxx4ldbl==2:6.2.1+dfsg1-1.1
+libgomp1==12.2.0-14
+libgpm2==1.20.7-10+b1
+libgprofng0==2.40-2
+libgrpc++-dev==1.51.1-3+b1
+libgrpc++1.51==1.51.1-3+b1
+libgrpc-dev==1.51.1-3+b1
+libgrpc29==1.51.1-3+b1
+libhwloc-dev==2.9.0-1
+libhwloc-plugins==2.9.0-1
+libhwloc15==2.9.0-1
+libibverbs-dev==44.0-2
+libibverbs1==44.0-2
+libicu-dev==72.1-3
+libicu72==72.1-3
+libipt2==2.0.5-1
+libisl23==0.25-1.1
+libitm1==12.2.0-14
+libjs-jquery-ui==1.13.2+dfsg-1
+libjs-sphinxdoc==5.3.0-4
+libjs-underscore==1.13.4~dfsg+~1.11.4-3
+libllvm14==1:14.0.6-12
+liblsan0==12.2.0-14
+libltdl-dev==2.4.7-7~deb12u1
+libltdl7==2.4.7-7~deb12u1
+libmagic-mgc==1:5.44-3
+libmagic1==1:5.44-3
+libmpc3==1.3.1-1
+libmpfr6==4.2.0-1
+libmunge2==0.5.15-2
+libnanomsg-dev==1.1.5+dfsg-1.1+b1
+libnanomsg5==1.1.5+dfsg-1.1+b1
+libnl-3-dev==3.7.0-0.2+b1sonic1
+libnl-route-3-dev==3.7.0-0.2+b1sonic1
+libnsl-dev==1.3.0-2
+libnspr4==2:4.35-1
+libnss3==2:3.87.1-1+deb12u1
+libnuma-dev==2.0.16-1
+libnuma1==2.0.16-1
+libobjc-12-dev==12.2.0-14
+libobjc4==12.2.0-14
+libopenmpi-dev==4.1.4-3+b1
+libopenmpi3==4.1.4-3+b1
+libpcap-dev==1.10.3-1
+libpcap0.8==1.10.3-1
+libpcap0.8-dev==1.10.3-1
+libpciaccess0==0.17-2
+libpcre2-16-0==10.42-1
+libpfm4==4.13.0-1
+libpkgconf3==1.8.1-1
+libpmix-dev==4.2.2-1+deb12u1
+libpmix2==4.2.2-1+deb12u1
+libprotobuf-dev==3.21.12-3
+libprotobuf-lite32==3.21.12-3
+libprotobuf32==3.21.12-3
+libprotoc-dev==3.21.12-3
+libprotoc32==3.21.12-3
+libpsm-infinipath1==3.3+20.604758e7-6.2
+libpsm2-2==11.2.185-2
+libpython3-dev==3.11.2-1+b1
+libpython3.11-dev==3.11.2-6+deb12u5
+libqt5core5a==5.15.8+dfsg-11+deb12u2
+libqt5dbus5==5.15.8+dfsg-11+deb12u2
+libqt5network5==5.15.8+dfsg-11+deb12u2
+libquadmath0==12.2.0-14
+librdmacm1==44.0-2
+libre2-9==20220601+dfsg-1+b1
+libre2-dev==20220601+dfsg-1+b1
+libsai==1.0.0
+libsaimetadata==1.0.0
+libsaimetadata-dbgsym==1.0.0
+libsairedis==1.0.0
+libsairedis-dbgsym==1.0.0
+libsaidcsg==1.0.0
+libsaidcsg-dbgsym==1.0.0
+libsource-highlight-common==3.1.9-4.2
+libsource-highlight4v5==3.1.9-4.2+b3
+libssl-dev==3.0.15-1~deb12u1
+libssl3==3.0.15-1~deb12u1
+libstdc++-12-dev==12.2.0-14
+libswsscommon-dbgsym==1.0.0
+libthrift-0.17.0==0.17.0-2+b2
+libthrift-dev==0.17.0-2+b2
+libtirpc-dev==1.3.3+ds-1
+libtool==2.4.7-7~deb12u1
+libtsan2==12.2.0-14
+libubsan1==12.2.0-14
+libucx0==1.13.1-1
+libunwind8==1.6.2-3
+libx11-6==2:1.8.4-2+deb12u2
+libx11-data==2:1.8.4-2+deb12u2
+libxau6==1:1.0.9-1
+libxcb1==1.15-1
+libxdmcp6==1:1.1.2-3
+libxext6==2:1.3.4-1+b1
+libxml2==2.9.14+dfsg-1.3~deb12u1
+libxnvctrl0==525.85.05-3~deb12u1
+libz3-4==4.8.12-3.1
+linux-libc-dev==6.1.124-1
+llvm==1:14.0-55.7~deb12u1
+llvm-14==1:14.0.6-12
+llvm-14-linker-tools==1:14.0.6-12
+llvm-14-runtime==1:14.0.6-12
+llvm-runtime==1:14.0-55.7~deb12u1
+m4==1.4.19-3
+mpi-default-bin==1.14
+mpi-default-dev==1.14
+netbase==6.4
+nss-plugin-pem==1.0.8+1-1
+ocl-icd-libopencl1==2.3.1-1
+openmpi-bin==4.1.4-3+b1
+openmpi-common==4.1.4-3
+openssh-client==1:9.2p1-2+deb12u4
+openssl==3.0.15-1~deb12u1
+p4lang-bmv2==1.15.0-7
+p4lang-p4c==1.2.4.2-2
+p4lang-pi==0.1.0-15
+pkg-config==1.8.1-1
+pkgconf==1.8.1-1
+pkgconf-bin==1.8.1-1
+protobuf-compiler==3.21.12-3
+protobuf-compiler-grpc==1.51.1-3+b1
+python3-dev==3.11.2-1+b1
+python3-grpcio==1.51.1-3+b1
+python3-ply==3.11-5
+python3-protobuf==3.21.12-3
+python3-psutil==5.9.4-1+b1
+python3-pyroute2==0.7.2-2
+python3-scapy==2.5.0+dfsg-2
+python3-six==1.16.0-4
+python3-thrift==0.17.0-2+b2
+python3.11-dev==3.11.2-6+deb12u5
+rpcsvc-proto==1.4.3-1
+sensible-utils==0.0.17+nmu1
+sgml-base==1.31
+shared-mime-info==2.2-1
+sshpass==1.09-1+b1
+strace==6.1-0.1
+syncd-dcsg==1.0.0
+syncd-dcsg-dbgsym==1.0.0
+tcpdump==4.99.3-1
+thrift-compiler==0.17.0-2+b2
+ucf==3.0043+nmu1+deb12u1
+vim==2:9.0.1378-2
+vim-runtime==2:9.0.1378-2
+xml-core==0.18+nmu1
+zlib1g-dev==1:1.2.13.dfsg-1
diff --git a/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-deb-bullseye b/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-deb-bullseye
new file mode 100644
index 000000000..d3534e2be
--- /dev/null
+++ b/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-deb-bullseye
@@ -0,0 +1,38 @@
+gdb==10.1-1.7
+gdbserver==10.1-1.7
+libbabeltrace1==1.5.8-1+b3
+libboost-regex1.74.0==1.74.0-9
+libcbor0==0.5.0+dfsg-2
+libcurl3-gnutls==7.74.0-1.3+deb11u11
+libdebuginfod1==0.183-1
+libdw1==0.183-1
+libedit2==3.1-20191231-2+b1
+libfido2-1==1.6.0-2
+libglib2.0-0==2.66.8-1+deb11u1
+libgpm2==1.20.7-8
+libhiredis0.14-dbgsym==0.14.1-1
+libicu67==67.1-7
+libipt2==2.0.3-1
+libmpfr6==4.1.0-3
+libsaimetadata==1.0.0
+libsaimetadata-dbg==1.0.0
+libsaimetadata-dbgsym==1.0.0
+libsairedis==1.0.0
+libsairedis-dbg==1.0.0
+libsairedis-dbgsym==1.0.0
+libsaidcsg==1.0.0
+libsaidcsg-dbg==1.0.0
+libsaidcsg-dbgsym==1.0.0
+libsource-highlight-common==3.1.9-3
+libsource-highlight4v5==3.1.9-3+b1
+libswsscommon-dbg==1.0.0
+libswsscommon-dbgsym==1.0.0
+libunwind8==1.3.2-2
+openssh-client==1:8.4p1-5+deb11u3
+sshpass==1.09-1+b1
+strace==5.10-1
+syncd-dcsg==1.0.0
+syncd-dcsg-dbg==1.0.0
+syncd-dcsg-dbgsym==1.0.0
+vim==2:8.2.2434-3+deb11u1
+vim-runtime==2:8.2.2434-3+deb11u1
diff --git a/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-py3 b/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-py3
new file mode 100644
index 000000000..ed1879443
--- /dev/null
+++ b/files/build/versions/dockers/docker-gbsyncd-dcsg/versions-py3
@@ -0,0 +1,7 @@
+grpcio==1.51.1
+ply==3.11
+protobuf==4.21.12
+psutil==5.9.4
+pyroute2==0.7.2
+scapy==2.5.0
+thrift==0.17.0
diff --git a/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-bookworm b/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-bookworm
new file mode 100644
index 000000000..d4a5fc305
--- /dev/null
+++ b/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-bookworm
@@ -0,0 +1,115 @@
+arping==2.23-1
+bash-completion==1:2.11-6
+bridge-utils==1.7.1-1
+comerr-dev==2.1-1.47.0-2
+conntrack==1:1.4.7-1+b2
+cron==3.0pl1-162
+cron-daemon-common==3.0pl1-162
+dbus==1.14.10-1~deb12u1
+dbus-bin==1.14.10-1~deb12u1
+dbus-daemon==1.14.10-1~deb12u1
+dbus-session-bus-common==1.14.10-1~deb12u1
+dbus-system-bus-common==1.14.10-1~deb12u1
+dirmngr==2.2.40-1.1
+ethtool==1:6.1-1
+fontconfig-config==2.14.1-4
+fonts-dejavu-core==2.37-6
+frr==10.0.1-sonic-0
+gir1.2-glib-2.0==1.74.0-3
+gnupg==2.2.40-1.1
+gnupg-l10n==2.2.40-1.1
+gnupg-utils==2.2.40-1.1
+gpg==2.2.40-1.1
+gpg-agent==2.2.40-1.1
+gpg-wks-client==2.2.40-1.1
+gpg-wks-server==2.2.40-1.1
+gpgconf==2.2.40-1.1
+gpgsm==2.2.40-1.1
+icu-devtools==72.1-3
+ifupdown==0.8.41
+iptables==1.8.9-2
+krb5-multidev==1.20.1-2+deb12u1+fips
+libapparmor1==3.0.8-3
+libassuan0==2.5.5-5
+libbsd-dev==0.11.7-2
+libc-ares2==1.18.1-3
+libc-dev-bin==2.36-9+deb12u9
+libc6-dev==2.36-9+deb12u9
+libcbor0.8==0.8.0-2+b1
+libedit2==3.1-20221030-2
+libfido2-1==1.12.0-2+b1
+libgirepository-1.0-1==1.74.0-3
+libglib2.0-0==2.74.6-2+deb12u5
+libglib2.0-data==2.74.6-2+deb12u5
+libgssapi-krb5-2==1.20.1-2+deb12u1+fips
+libgssrpc4==1.20.1-2+deb12u1+fips
+libicu-dev==72.1-3
+libicu72==72.1-3
+libip4tc2==1.8.9-2
+libip6tc2==1.8.9-2
+libjson-c5==0.16-2
+libjudydebian1==1.0.5-5+b2
+libk5crypto3==1.20.1-2+deb12u1+fips
+libkadm5clnt-mit12==1.20.1-2+deb12u1+fips
+libkadm5srv-mit12==1.20.1-2+deb12u1+fips
+libkdb5-10==1.20.1-2+deb12u2
+libkrb5-3==1.20.1-2+deb12u1+fips
+libkrb5-dev==1.20.1-2+deb12u1+fips
+libkrb5support0==1.20.1-2+deb12u1+fips
+libksba8==1.6.3-2
+libmagic1==1:5.44-3
+libmd-dev==1.0.4-2
+libnet1==1.1.6+dfsg-3.2
+libnetfilter-conntrack3==1.0.9-3
+libnfnetlink0==1.0.2-2
+libnftnl11==1.2.4-2
+libnorm-dev==1.5.9+dfsg-2
+libnpth0==1.6-3
+libnsl-dev==1.3.0-2
+libpcap0.8==1.10.3-1
+libpgm-dev==5.3.128~dfsg-2
+libpopt0==1.19+dfsg-1
+libprotobuf-c-dev==1.4.1-1+b1
+libprotobuf-c1==1.4.1-1+b1
+libprotoc32==3.21.12-3
+libqt5core5a==5.15.8+dfsg-11+deb12u2
+libsai==1.0.0
+libsaidcsg==1.0.0
+libsodium-dev==1.0.18-1
+libssl3==3.0.15-1~deb12u1
+libteam-utils==1.31-1
+libtirpc-dev==1.3.3+ds-1
+libunwind8==1.6.2-3
+libxml2==2.9.14+dfsg-1.3~deb12u1
+libxml2-dev==2.9.14+dfsg-1.3~deb12u1
+libyang2t64==2.1.148-0.2
+libzmq3-dev==4.3.4-6
+linux-libc-dev==6.1.124-1
+logrotate==3.21.0-1
+lsof==4.95.0-1
+ndisc6==1.0.5-1+b2
+netbase==6.4
+openssh-client==1:9.2p1-2+deb12u4
+openssh-server==1:9.2p1-2+deb12u4
+openssh-sftp-server==1:9.2p1-2+deb12u4
+openssl==3.0.15-1~deb12u1
+pinentry-curses==1.2.1-1
+pkgconf==1.8.1-1
+protobuf-c-compiler==1.4.1-1+b1
+psmisc==23.6-1
+python3-scapy==2.5.0+dfsg-2
+redis-server==5:7.0.15-1~deb12u3
+rpcsvc-proto==1.4.3-1
+runit-helper==2.15.2
+sensible-utils==0.0.17+nmu1
+sgml-base==1.31
+shared-mime-info==2.2-1
+sonic-device-data==1.0-1
+sonic-host-services-data==1.0-1
+sonic-utilities-data==1.0-1
+syncd-dcsg==1.0.0
+tcpdump==4.99.3-1
+ucf==3.0043+nmu1+deb12u1
+uuid-dev==2.38.1-5+deb12u3
+x11-common==1:7.7+23
+xml-core==0.18+nmu1
diff --git a/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-bullseye b/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-bullseye
new file mode 100644
index 000000000..bef686826
--- /dev/null
+++ b/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-bullseye
@@ -0,0 +1,139 @@
+arping==2.21-2
+bash-completion==1:2.11-2
+bridge-utils==1.7-1
+bzip2==1.0.8-4
+comerr-dev==2.1-1.46.2-2
+conntrack==1:1.4.6-2
+cron==3.0pl1-137
+dbus==1.12.28-0+deb11u1
+dirmngr==2.2.27-2+deb11u2
+dmsetup==2:1.02.175-2.1
+ethtool==1:5.9-1
+fontconfig-config==2.13.1-4.2
+fonts-dejavu-core==2.37-2
+fonts-font-awesome==5.0.10+really4.7.0~dfsg-4.1
+fonts-lato==2.0-2.1
+frr==8.5.4-sonic-0
+gettext-base==0.21-4
+gir1.2-glib-2.0==1.66.1-1+b1
+gnupg==2.2.27-2+deb11u2
+gnupg-l10n==2.2.27-2+deb11u2
+gnupg-utils==2.2.27-2+deb11u2
+gpg==2.2.27-2+deb11u2
+gpg-agent==2.2.27-2+deb11u2
+gpg-wks-client==2.2.27-2+deb11u2
+gpg-wks-server==2.2.27-2+deb11u2
+gpgconf==2.2.27-2+deb11u2
+gpgsm==2.2.27-2+deb11u2
+grub-common==2.06-3~deb11u6
+grub2-common==2.06-3~deb11u6
+icu-devtools==67.1-7
+ifupdown==0.8.36
+iproute2==6.1.0-3~bpo11+1
+iptables==1.8.7-1
+krb5-multidev==1.18.3-6+deb11u5+fips
+libapparmor1==2.13.6-10
+libassuan0==2.5.3-7.1
+libblkid-dev==2.36.1-8+deb11u2
+libblkid1==2.36.1-8+deb11u2
+libbsd-dev==0.11.3-1+deb11u1
+libc-ares2==1.17.1-1+deb11u3
+libc-dev-bin==2.31-13+deb11u10
+libc6-dev==2.31-13+deb11u10
+libcbor0==0.5.0+dfsg-2
+libcrypt-dev==1:4.4.18-4
+libdevmapper1.02.1==2:1.02.175-2.1
+libdouble-conversion3==3.1.5-6.1
+libedit2==3.1-20191231-2+b1
+libefiboot1==37-6
+libefivar1==37-6
+libfido2-1==1.6.0-2
+libfreetype6==2.10.4+dfsg-1+deb11u1
+libfreetype6-dev==2.10.4+dfsg-1+deb11u1
+libfuse2==2.9.9-5
+libgirepository-1.0-1==1.66.1-1+b1
+libglib2.0-0==2.66.8-1+deb11u4
+libglib2.0-data==2.66.8-1+deb11u4
+libgssapi-krb5-2==1.18.3-6+deb11u5+fips
+libgssrpc4==1.18.3-6+deb11u5+fips
+libicu-dev==67.1-7
+libicu67==67.1-7
+libip4tc2==1.8.7-1
+libip6tc2==1.8.7-1
+libjs-sphinxdoc==3.4.3-2
+libjs-underscore==1.9.1~dfsg-3
+libjson-c5==0.15-2+deb11u1
+libjudydebian1==1.0.5-5+b2
+libk5crypto3==1.18.3-6+deb11u4
+libkadm5clnt-mit12==1.18.3-6+deb11u5+fips
+libkadm5srv-mit12==1.18.3-6+deb11u5+fips
+libkdb5-10==1.18.3-6+deb11u5
+libkrb5-3==1.18.3-6+deb11u5+fips
+libkrb5-dev==1.18.3-6+deb11u5+fips
+libkrb5support0==1.18.3-6+deb11u5+fips
+libksba8==1.5.0-3+deb11u2
+libmd-dev==1.0.3-3
+libmount1==2.36.1-8+deb11u2
+libnet1==1.1.6+dfsg-3.1
+libnetfilter-conntrack3==1.0.8-3
+libnfnetlink0==1.0.1-3+b1
+libnftnl11==1.1.9-1
+libnorm-dev==1.5.9+dfsg-2
+libnpth0==1.6-3
+libnsl-dev==1.3.0-2
+libpcap0.8==1.10.0-2
+libpcre2-16-0==10.36-2+deb11u1
+libpgm-dev==5.3.128~dfsg-2
+libpng16-16==1.6.37-3
+libpopt0==1.18-2
+libpython2-stdlib==2.7.18-3
+libpython2.7-minimal==2.7.18-8+deb11u1
+libpython2.7-stdlib==2.7.18-8+deb11u1
+libqt5core5a==5.15.2+dfsg-9+deb11u1
+libqt5dbus5==5.15.2+dfsg-9+deb11u1
+libqt5network5==5.15.2+dfsg-9+deb11u1
+libsaidcsg==1.0.0
+libsodium-dev==1.0.18-1
+libssl1.1==1.1.1w-0+deb11u1
+libsystemd0==247.3-7+deb11u2
+libteam-utils==1.31-1
+libtirpc-dev==1.3.1-1+deb11u1
+libunwind8==1.3.2-2
+libuuid1==2.36.1-8+deb11u2
+libxml2==2.9.10+dfsg-6.7+deb11u4
+libxml2-dev==2.9.10+dfsg-6.7+deb11u4
+libyang2==2.0.112-6
+libzmq3-dev==4.3.4-1+deb11u1
+linux-libc-dev==5.10.221-1
+logrotate==3.18.0-2+deb11u2
+lsof==4.93.2+dfsg-1.1
+mailcap==3.69
+mime-support==3.66
+ndisc6==1.0.4-2
+netbase==6.3
+openssh-client==1:8.4p1-5+deb11u3
+openssh-server==1:8.4p1-5+deb11u3
+openssh-sftp-server==1:8.4p1-5+deb11u3
+openssl==1.1.1w-0+deb11u1
+pinentry-curses==1.1.0-4
+psmisc==23.4-2
+python-ply==3.11-4
+python2==2.7.18-3
+python2-minimal==2.7.18-3
+python2.7==2.7.18-8+deb11u1
+python2.7-minimal==2.7.18-8+deb11u1
+python3-scapy==2.4.4-4
+redis-server==5:6.0.16-1+deb11u2
+runit-helper==2.10.3
+sensible-utils==0.0.14
+shared-mime-info==2.0-1
+sonic-device-data==1.0-1
+sonic-host-services-data==1.0-1
+sonic-utilities-data==1.0-1
+sphinx-rtd-theme-common==0.5.1+dfsg-1
+syncd-dcsg==1.0.0
+tcpdump==4.99.0-2+deb11u1
+ucf==3.0043
+uuid-dev==2.36.1-8+deb11u2
+x11-common==1:7.7+22
+xz-utils==5.2.5-2.1~deb11u1
diff --git a/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-buster b/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-buster
new file mode 100644
index 000000000..3acb1216f
--- /dev/null
+++ b/files/build/versions/dockers/docker-sonic-dcsg/versions-deb-buster
@@ -0,0 +1,123 @@
+arping==2.19-6
+bash-completion==1:2.8-6
+bridge-utils==1.6-2
+comerr-dev==2.1-1.44.5-1+deb10u3
+conntrack==1:1.4.5-2
+cron==3.0pl1-134+deb10u1
+dbus==1.12.24-0+deb10u1
+dirmngr==2.2.12-1+deb10u2
+dmsetup==2:1.02.155-3
+ethtool==1:4.19-1
+fontconfig-config==2.13.1-2
+fonts-dejavu-core==2.37-1
+frr==8.2.2-sonic-0
+gettext-base==0.19.8.1-9
+gir1.2-glib-2.0==1.58.3-2
+gnupg==2.2.12-1+deb10u2
+gnupg-l10n==2.2.12-1+deb10u2
+gnupg-utils==2.2.12-1+deb10u2
+gpg==2.2.12-1+deb10u2
+gpg-agent==2.2.12-1+deb10u2
+gpg-wks-client==2.2.12-1+deb10u2
+gpg-wks-server==2.2.12-1+deb10u2
+gpgconf==2.2.12-1+deb10u2
+gpgsm==2.2.12-1+deb10u2
+grub-common==2.06-3~deb10u3
+grub2-common==2.06-3~deb10u3
+ifupdown==0.8.35
+iproute2==5.10.0-4~bpo10+1
+iptables==1.8.2-4
+krb5-multidev==1.17-3+deb10u5
+libapparmor1==2.13.2-10
+libassuan0==2.5.2-1
+libblkid-dev==2.33.1-0.1
+libboost-atomic1.71.0==1.71.0-6~bpo10+1
+libboost-program-options1.71.0==1.71.0-6~bpo10+1
+libboost-system1.71.0==1.71.0-6~bpo10+1
+libboost-thread1.71.0==1.71.0-6~bpo10+1
+libbpf0==1:0.3-2~bpo10+1
+libbsd0==0.9.1-2+deb10u1
+libc-ares2==1.14.0-1+deb10u2
+libc-dev-bin==2.28-10+deb10u2
+libc6-dev==2.28-10+deb10u2
+libdevmapper1.02.1==2:1.02.155-3
+libdouble-conversion1==3.1.0-3
+libedit2==3.1-20181209-1
+libefiboot1==37-2+deb10u1
+libefivar1==37-2+deb10u1
+libfreetype6==2.9.1-3+deb10u3
+libfreetype6-dev==2.9.1-3+deb10u3
+libfuse2==2.9.9-1+deb10u1
+libgirepository-1.0-1==1.58.3-2
+libglib2.0-0==2.58.3-2+deb10u4
+libglib2.0-data==2.58.3-2+deb10u4
+libgssrpc4==1.17-3+deb10u5
+libicu63==63.1-6+deb10u3
+libip4tc0==1.8.2-4
+libip6tc0==1.8.2-4
+libiptc0==1.8.2-4
+libjson-c3==0.12.1+ds-2+deb10u1
+libjudydebian1==1.0.5-5
+libkadm5clnt-mit11==1.17-3+deb10u5
+libkadm5srv-mit11==1.17-3+deb10u5
+libkdb5-9==1.17-3+deb10u5
+libkrb5-dev==1.17-3+deb10u5
+libksba8==1.3.5-2+deb10u2
+libnet1==1.1.6+dfsg-3.1
+libnetfilter-conntrack3==1.0.7-1
+libnfnetlink0==1.0.1-3+b1
+libnftnl11==1.1.2-2
+libnorm-dev==1.5.8+dfsg2-1
+libnpth0==1.6-1
+libpcap0.8==1.8.1-6+deb10u1
+libpcre2-16-0==10.32-5+deb10u1
+libpcre2-8-0==10.32-5+deb10u1
+libpgm-dev==5.2.122~dfsg-3
+libpng16-16==1.6.36-6
+libpython-stdlib==2.7.16-1
+libpython2-stdlib==2.7.16-1
+libpython2.7==2.7.16-2+deb10u1
+libpython2.7-minimal==2.7.16-2+deb10u1
+libpython2.7-stdlib==2.7.16-2+deb10u1
+libqt5core5a==5.11.3+dfsg1-1+deb10u5
+libqt5dbus5==5.11.3+dfsg1-1+deb10u5
+libqt5network5==5.11.3+dfsg1-1+deb10u5
+libsaimetadata==1.0.0
+libsairedis==1.0.0
+libsaidcsg==1.0.0
+libsodium-dev==1.0.17-1
+libteam-utils==1.30-1
+libteam5==1.30-1
+libteamdctl0==1.30-1
+libunwind8==1.2.1-10~deb10u1
+libyang2==2.0.112-6
+libzmq3-dev==4.3.1-4+deb10u2
+linux-libc-dev==4.19.269-1
+logrotate==3.14.0-4
+lsof==4.91+dfsg-1
+ndisc6==1.0.4-1
+openssh-client==1:7.9p1-10+deb10u2
+openssh-server==1:7.9p1-10+deb10u2
+openssh-sftp-server==1:7.9p1-10+deb10u2
+pinentry-curses==1.1.0-2
+psmisc==23.2-1+deb10u1
+python==2.7.16-1
+python-minimal==2.7.16-1
+python-ply==3.11-3
+python-scapy==2.4.0-2
+python-swsscommon==1.0.0
+python2==2.7.16-1
+python2-minimal==2.7.16-1
+python2.7==2.7.16-2+deb10u1
+python2.7-minimal==2.7.16-2+deb10u1
+redis-server==5:6.0.6-1~bpo10+1
+sensible-utils==0.0.12
+sonic-device-data==1.0-1
+sonic-host-services-data==1.0-1
+sonic-utilities-data==1.0-1
+swss==1.0.0
+syncd-dcsg==1.0.0
+tcpdump==4.9.3-1~deb10u2
+ucf==3.0038+nmu1
+uuid-dev==2.33.1-0.1
+x11-common==1:7.7+19
diff --git a/files/build/versions/dockers/docker-sonic-dcsg/versions-py2 b/files/build/versions/dockers/docker-sonic-dcsg/versions-py2
new file mode 100644
index 000000000..442d16622
--- /dev/null
+++ b/files/build/versions/dockers/docker-sonic-dcsg/versions-py2
@@ -0,0 +1,16 @@
+certifi==2021.10.8
+chardet==4.0.0
+crontab==1.0.0
+idna==2.10
+monotonic==1.5
+netifaces==0.10.7
+pip==20.3.4
+ply==3.11
+py2-ipaddress==3.4.2
+pyroute2==0.5.3
+requests==2.27.1
+scapy==2.4.0
+setuptools==40.8.0
+six==1.16.0
+urllib3==1.26.15
+wheel==0.33.6
diff --git a/files/build/versions/dockers/docker-sonic-dcsg/versions-py3 b/files/build/versions/dockers/docker-sonic-dcsg/versions-py3
new file mode 100644
index 000000000..1d4c27ac2
--- /dev/null
+++ b/files/build/versions/dockers/docker-sonic-dcsg/versions-py3
@@ -0,0 +1,50 @@
+async-timeout==4.0.2
+bcrypt==3.2.2
+blessed==1.20.0
+certifi==2025.1.31
+cffi==1.17.1
+charset-normalizer==3.4.1
+click==7.0
+click-log==0.4.0
+colorful==0.5.6
+cryptography==44.0.0
+dbus-python==1.3.2
+docker==7.1.0
+docker-image-py==0.1.13
+enlighten==1.13.0
+filelock==3.17.0
+idna==3.10
+importlib-metadata==6.1.0
+jsonpatch==1.33
+jsonpointer==3.0.0
+lazy-object-proxy==1.10.0
+m2crypto==0.43.0
+netifaces==0.11.0
+packaging==24.0
+paramiko==2.11.0
+pexpect==4.9.0
+prefixed==0.9.0
+prettyprinter==0.18.0
+psutil==6.1.1
+ptyprocess==0.7.0
+pyangbind==0.8.1
+pycairo==1.26.1
+pycparser==2.22
+pygments==2.19.1
+pygobject==3.50.0
+pynacl==1.5.0
+pyroute2==0.7.12
+redis==4.5.2
+requests==2.31.0
+scapy==2.5.0
+scp==0.14.5
+semantic-version==2.10.0
+six==1.16.0
+systemd-python==235
+toposort==1.6
+typing_extensions==4.7.1
+urllib3==2.3.0
+wcwidth==0.2.13
+websocket-client==1.6.3
+www-authenticate==0.9.2
+zipp==3.15.0
diff --git a/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-bookworm b/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-bookworm
new file mode 100644
index 000000000..6bc04eaf4
--- /dev/null
+++ b/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-bookworm
@@ -0,0 +1,305 @@
+autoconf==2.71-3
+automake==1:1.16.5-1.3
+autotools-dev==20220109.1
+binutils==2.40-2
+binutils-x86-64-linux-gnu==2.40-2
+clang==1:14.0-55.7~deb12u1
+clang-14==1:14.0.6-12
+cpp==4:12.2.0-3
+cpp-12==12.2.0-14
+file==1:5.44-3
+flex==2.6.4-8.2
+gcc==4:12.2.0-3
+gcc-12==12.2.0-14
+gdb==13.1-3
+gdbserver==13.1-3
+gfortran-12==12.2.0-14
+ibverbs-providers==44.0-2
+icu-devtools==72.1-3
+libabsl-dev==20220623.1-1
+libabsl20220623==20220623.1-1
+libasan8==12.2.0-14
+libbabeltrace1==1.5.11-1+b2
+libbinutils==2.40-2
+libboost-all-dev==1.74.0.3
+libboost-atomic-dev==1.74.0.3
+libboost-atomic1.74-dev==1.74.0+ds1-21
+libboost-atomic1.74.0==1.74.0+ds1-21
+libboost-chrono-dev==1.74.0.3
+libboost-chrono1.74-dev==1.74.0+ds1-21
+libboost-chrono1.74.0==1.74.0+ds1-21
+libboost-container-dev==1.74.0.3
+libboost-container1.74-dev==1.74.0+ds1-21
+libboost-container1.74.0==1.74.0+ds1-21
+libboost-context-dev==1.74.0.3
+libboost-context1.74-dev==1.74.0+ds1-21
+libboost-context1.74.0==1.74.0+ds1-21
+libboost-coroutine-dev==1.74.0.3
+libboost-coroutine1.74-dev==1.74.0+ds1-21
+libboost-coroutine1.74.0==1.74.0+ds1-21
+libboost-date-time-dev==1.74.0.3
+libboost-date-time1.74-dev==1.74.0+ds1-21
+libboost-date-time1.74.0==1.74.0+ds1-21
+libboost-dev==1.74.0.3
+libboost-exception-dev==1.74.0.3
+libboost-exception1.74-dev==1.74.0+ds1-21
+libboost-fiber-dev==1.74.0.3
+libboost-fiber1.74-dev==1.74.0+ds1-21
+libboost-fiber1.74.0==1.74.0+ds1-21
+libboost-filesystem-dev==1.74.0.3
+libboost-filesystem1.74-dev==1.74.0+ds1-21
+libboost-filesystem1.74.0==1.74.0+ds1-21
+libboost-graph-dev==1.74.0.3
+libboost-graph-parallel-dev==1.74.0.3
+libboost-graph-parallel1.74-dev==1.74.0+ds1-21
+libboost-graph-parallel1.74.0==1.74.0+ds1-21
+libboost-graph1.74-dev==1.74.0+ds1-21
+libboost-graph1.74.0==1.74.0+ds1-21
+libboost-iostreams-dev==1.74.0.3
+libboost-iostreams1.74-dev==1.74.0+ds1-21
+libboost-iostreams1.74.0==1.74.0+ds1-21
+libboost-locale-dev==1.74.0.3
+libboost-locale1.74-dev==1.74.0+ds1-21
+libboost-locale1.74.0==1.74.0+ds1-21
+libboost-log-dev==1.74.0.3
+libboost-log1.74-dev==1.74.0+ds1-21
+libboost-log1.74.0==1.74.0+ds1-21
+libboost-math-dev==1.74.0.3
+libboost-math1.74-dev==1.74.0+ds1-21
+libboost-math1.74.0==1.74.0+ds1-21
+libboost-mpi-dev==1.74.0.3
+libboost-mpi-python-dev==1.74.0.3
+libboost-mpi-python1.74-dev==1.74.0+ds1-21
+libboost-mpi-python1.74.0==1.74.0+ds1-21
+libboost-mpi1.74-dev==1.74.0+ds1-21
+libboost-mpi1.74.0==1.74.0+ds1-21
+libboost-nowide-dev==1.74.0.3
+libboost-nowide1.74-dev==1.74.0+ds1-21
+libboost-nowide1.74.0==1.74.0+ds1-21
+libboost-numpy-dev==1.74.0.3
+libboost-numpy1.74-dev==1.74.0+ds1-21
+libboost-numpy1.74.0==1.74.0+ds1-21
+libboost-program-options-dev==1.74.0.3
+libboost-program-options1.74-dev==1.74.0+ds1-21
+libboost-program-options1.74.0==1.74.0+ds1-21
+libboost-python-dev==1.74.0.3
+libboost-python1.74-dev==1.74.0+ds1-21
+libboost-python1.74.0==1.74.0+ds1-21
+libboost-random-dev==1.74.0.3
+libboost-random1.74-dev==1.74.0+ds1-21
+libboost-random1.74.0==1.74.0+ds1-21
+libboost-regex-dev==1.74.0.3
+libboost-regex1.74-dev==1.74.0+ds1-21
+libboost-regex1.74.0==1.74.0+ds1-21
+libboost-serialization-dev==1.74.0.3
+libboost-serialization1.74-dev==1.74.0+ds1-21
+libboost-stacktrace-dev==1.74.0.3
+libboost-stacktrace1.74-dev==1.74.0+ds1-21
+libboost-stacktrace1.74.0==1.74.0+ds1-21
+libboost-system-dev==1.74.0.3
+libboost-system1.74-dev==1.74.0+ds1-21
+libboost-system1.74.0==1.74.0+ds1-21
+libboost-test-dev==1.74.0.3
+libboost-test1.74-dev==1.74.0+ds1-21
+libboost-test1.74.0==1.74.0+ds1-21
+libboost-thread-dev==1.74.0.3
+libboost-thread1.74-dev==1.74.0+ds1-21
+libboost-thread1.74.0==1.74.0+ds1-21
+libboost-timer-dev==1.74.0.3
+libboost-timer1.74-dev==1.74.0+ds1-21
+libboost-timer1.74.0==1.74.0+ds1-21
+libboost-tools-dev==1.74.0.3
+libboost-type-erasure-dev==1.74.0.3
+libboost-type-erasure1.74-dev==1.74.0+ds1-21
+libboost-type-erasure1.74.0==1.74.0+ds1-21
+libboost-wave-dev==1.74.0.3
+libboost-wave1.74-dev==1.74.0+ds1-21
+libboost-wave1.74.0==1.74.0+ds1-21
+libboost1.74-dev==1.74.0+ds1-21
+libboost1.74-tools-dev==1.74.0+ds1-21
+libbpf-dev==1:1.1.0-1
+libc-ares-dev==1.18.1-3
+libc-ares2==1.18.1-3
+libc-dev-bin==2.36-9+deb12u9
+libc6-dev==2.36-9+deb12u9
+libcbor0.8==0.8.0-2+b1
+libcc1-0==12.2.0-14
+libclang-common-14-dev==1:14.0.6-12
+libclang-cpp14==1:14.0.6-12
+libclang1-14==1:14.0.6-12
+libctf-nobfd0==2.40-2
+libctf0==2.40-2
+libcurl3-gnutls==7.88.1-10+deb12u8
+libcurl3-nss==7.88.1-10+deb12u8
+libdbus-1-dev==1.14.10-1~deb12u1
+libdebuginfod-common==0.188-2.1
+libdebuginfod1==0.188-2.1
+libdouble-conversion3==3.2.1-1
+libdw1==0.188-2.1
+libedit2==3.1-20221030-2
+libelf-dev==0.188-2.1
+libevent-2.1-7==2.1.12-stable-8
+libevent-core-2.1-7==2.1.12-stable-8
+libevent-dev==2.1.12-stable-8
+libevent-extra-2.1-7==2.1.12-stable-8
+libevent-openssl-2.1-7==2.1.12-stable-8
+libevent-pthreads-2.1-7==2.1.12-stable-8
+libexpat1-dev==2.5.0-1+deb12u1
+libfabric1==1.17.0-3
+libfido2-1==1.12.0-2+b1
+libfl-dev==2.6.4-8.2
+libfl2==2.6.4-8.2
+libgc-dev==1:8.2.2-3
+libgc1==1:8.2.2-3
+libgcc-12-dev==12.2.0-14
+libgfortran-12-dev==12.2.0-14
+libgfortran5==12.2.0-14
+libglib2.0-0==2.74.6-2+deb12u5
+libgmp-dev==2:6.2.1+dfsg1-1.1
+libgmpxx4ldbl==2:6.2.1+dfsg1-1.1
+libgomp1==12.2.0-14
+libgpm2==1.20.7-10+b1
+libgprofng0==2.40-2
+libgrpc++-dev==1.51.1-3+b1
+libgrpc++1.51==1.51.1-3+b1
+libgrpc-dev==1.51.1-3+b1
+libgrpc29==1.51.1-3+b1
+libhwloc-dev==2.9.0-1
+libhwloc-plugins==2.9.0-1
+libhwloc15==2.9.0-1
+libibverbs-dev==44.0-2
+libibverbs1==44.0-2
+libicu-dev==72.1-3
+libicu72==72.1-3
+libipt2==2.0.5-1
+libisl23==0.25-1.1
+libitm1==12.2.0-14
+libjs-jquery-ui==1.13.2+dfsg-1
+libjs-sphinxdoc==5.3.0-4
+libjs-underscore==1.13.4~dfsg+~1.11.4-3
+libllvm14==1:14.0.6-12
+liblsan0==12.2.0-14
+libltdl-dev==2.4.7-7~deb12u1
+libltdl7==2.4.7-7~deb12u1
+libmagic-mgc==1:5.44-3
+libmagic1==1:5.44-3
+libmpc3==1.3.1-1
+libmpfr6==4.2.0-1
+libmunge2==0.5.15-2
+libnanomsg-dev==1.1.5+dfsg-1.1+b1
+libnanomsg5==1.1.5+dfsg-1.1+b1
+libnl-3-dev==3.7.0-0.2+b1sonic1
+libnl-route-3-dev==3.7.0-0.2+b1sonic1
+libnsl-dev==1.3.0-2
+libnspr4==2:4.35-1
+libnss3==2:3.87.1-1+deb12u1
+libnuma-dev==2.0.16-1
+libnuma1==2.0.16-1
+libobjc-12-dev==12.2.0-14
+libobjc4==12.2.0-14
+libopenmpi-dev==4.1.4-3+b1
+libopenmpi3==4.1.4-3+b1
+libpcap-dev==1.10.3-1
+libpcap0.8==1.10.3-1
+libpcap0.8-dev==1.10.3-1
+libpciaccess0==0.17-2
+libpcre2-16-0==10.42-1
+libpfm4==4.13.0-1
+libpkgconf3==1.8.1-1
+libpmix-dev==4.2.2-1+deb12u1
+libpmix2==4.2.2-1+deb12u1
+libprotobuf-dev==3.21.12-3
+libprotobuf-lite32==3.21.12-3
+libprotobuf32==3.21.12-3
+libprotoc-dev==3.21.12-3
+libprotoc32==3.21.12-3
+libpsm-infinipath1==3.3+20.604758e7-6.2
+libpsm2-2==11.2.185-2
+libpython3-dev==3.11.2-1+b1
+libpython3.11-dev==3.11.2-6+deb12u5
+libqt5core5a==5.15.8+dfsg-11+deb12u2
+libqt5dbus5==5.15.8+dfsg-11+deb12u2
+libqt5network5==5.15.8+dfsg-11+deb12u2
+libquadmath0==12.2.0-14
+librdmacm1==44.0-2
+libre2-9==20220601+dfsg-1+b1
+libre2-dev==20220601+dfsg-1+b1
+libsai==1.0.0
+libsaimetadata==1.0.0
+libsaimetadata-dbgsym==1.0.0
+libsairedis==1.0.0
+libsairedis-dbgsym==1.0.0
+libsaidcsg==1.0.0
+libsaidcsg-dbgsym==1.0.0
+libsource-highlight-common==3.1.9-4.2
+libsource-highlight4v5==3.1.9-4.2+b3
+libssl-dev==3.0.15-1~deb12u1
+libssl3==3.0.15-1~deb12u1
+libstdc++-12-dev==12.2.0-14
+libswsscommon-dbgsym==1.0.0
+libthrift-0.17.0==0.17.0-2+b2
+libthrift-dev==0.17.0-2+b2
+libtirpc-dev==1.3.3+ds-1
+libtool==2.4.7-7~deb12u1
+libtsan2==12.2.0-14
+libubsan1==12.2.0-14
+libucx0==1.13.1-1
+libunwind8==1.6.2-3
+libx11-6==2:1.8.4-2+deb12u2
+libx11-data==2:1.8.4-2+deb12u2
+libxau6==1:1.0.9-1
+libxcb1==1.15-1
+libxdmcp6==1:1.1.2-3
+libxext6==2:1.3.4-1+b1
+libxml2==2.9.14+dfsg-1.3~deb12u1
+libxnvctrl0==525.85.05-3~deb12u1
+libz3-4==4.8.12-3.1
+linux-libc-dev==6.1.124-1
+llvm==1:14.0-55.7~deb12u1
+llvm-14==1:14.0.6-12
+llvm-14-linker-tools==1:14.0.6-12
+llvm-14-runtime==1:14.0.6-12
+llvm-runtime==1:14.0-55.7~deb12u1
+m4==1.4.19-3
+mpi-default-bin==1.14
+mpi-default-dev==1.14
+netbase==6.4
+nss-plugin-pem==1.0.8+1-1
+ocl-icd-libopencl1==2.3.1-1
+openmpi-bin==4.1.4-3+b1
+openmpi-common==4.1.4-3
+openssh-client==1:9.2p1-2+deb12u4
+openssl==3.0.15-1~deb12u1
+p4lang-bmv2==1.15.0-7
+p4lang-p4c==1.2.4.2-2
+p4lang-pi==0.1.0-15
+pkg-config==1.8.1-1
+pkgconf==1.8.1-1
+pkgconf-bin==1.8.1-1
+protobuf-compiler==3.21.12-3
+protobuf-compiler-grpc==1.51.1-3+b1
+python3-dev==3.11.2-1+b1
+python3-grpcio==1.51.1-3+b1
+python3-ply==3.11-5
+python3-protobuf==3.21.12-3
+python3-psutil==5.9.4-1+b1
+python3-pyroute2==0.7.2-2
+python3-scapy==2.5.0+dfsg-2
+python3-six==1.16.0-4
+python3-thrift==0.17.0-2+b2
+python3.11-dev==3.11.2-6+deb12u5
+rpcsvc-proto==1.4.3-1
+sensible-utils==0.0.17+nmu1
+sgml-base==1.31
+shared-mime-info==2.2-1
+sshpass==1.09-1+b1
+strace==6.1-0.1
+syncd-dcsg==1.0.0
+syncd-dcsg-dbgsym==1.0.0
+tcpdump==4.99.3-1
+thrift-compiler==0.17.0-2+b2
+ucf==3.0043+nmu1+deb12u1
+vim==2:9.0.1378-2
+vim-runtime==2:9.0.1378-2
+xml-core==0.18+nmu1
+zlib1g-dev==1:1.2.13.dfsg-1
diff --git a/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-bullseye b/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-bullseye
new file mode 100644
index 000000000..87bbc9a8a
--- /dev/null
+++ b/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-bullseye
@@ -0,0 +1,38 @@
+gdb==10.1-1.7
+gdbserver==10.1-1.7
+iproute2==5.10.0-4sonic1
+libbabeltrace1==1.5.8-1+b3
+libboost-regex1.74.0==1.74.0-9
+libcbor0==0.5.0+dfsg-2
+libcurl3-gnutls==7.74.0-1.3+deb11u11
+libdebuginfod1==0.183-1
+libdw1==0.183-1
+libedit2==3.1-20191231-2+b1
+libfido2-1==1.6.0-2
+libglib2.0-0==2.66.8-1+deb11u1
+libgpm2==1.20.7-8
+libhiredis0.14-dbgsym==0.14.1-1
+libicu67==67.1-7
+libipt2==2.0.3-1
+libmpfr6==4.1.0-3
+libsaimetadata==1.0.0
+libsaimetadata-dbg==1.0.0
+libsaimetadata-dbgsym==1.0.0
+libsairedis==1.0.0
+libsairedis-dbg==1.0.0
+libsairedis-dbgsym==1.0.0
+libsaidcsg==1.0.0
+libsaidcsg-dbg==1.0.0
+libsaidcsg-dbgsym==1.0.0
+libsource-highlight-common==3.1.9-3
+libsource-highlight4v5==3.1.9-3+b1
+libswsscommon-dbgsym==1.0.0
+libunwind8==1.3.2-2
+openssh-client==1:8.4p1-5+deb11u3
+sshpass==1.09-1+b1
+strace==5.10-1
+syncd-dcsg==1.0.0
+syncd-dcsg-dbg==1.0.0
+syncd-dcsg-dbgsym==1.0.0
+vim==2:8.2.2434-3+deb11u1
+vim-runtime==2:8.2.2434-3+deb11u1
diff --git a/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-buster b/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-buster
new file mode 100644
index 000000000..56df5c749
--- /dev/null
+++ b/files/build/versions/dockers/docker-syncd-dcsg/versions-deb-buster
@@ -0,0 +1,28 @@
+gdb==8.2.1-2+b3
+gdbserver==8.2.1-2+b3
+iproute2==5.10.0-4~bpo10+1
+libbabeltrace1==1.5.6-2+deb10u1
+libbpf0==1:0.3-2~bpo10+1
+libbsd0==0.9.1-2+deb10u1
+libdw1==0.176-1.1
+libedit2==3.1-20181209-1
+libglib2.0-0==2.58.3-2+deb10u4
+libgpm2==1.20.7-5
+libhiredis0.14-dbgsym==0.14.0-3~bpo9+1
+libipt2==2.0-2
+libsaimetadata==1.0.0
+libsaimetadata-dbg==1.0.0
+libsairedis==1.0.0
+libsairedis-dbg==1.0.0
+libsaidcsg==1.0.0
+libsaidcsg-dbg==1.0.0
+libswsscommon-dbg==1.0.0
+libswsscommon-dbgsym==1.0.0
+libunwind8==1.2.1-10~deb10u1
+openssh-client==1:7.9p1-10+deb10u2
+sshpass==1.06-1
+strace==4.26-0.2
+syncd-dcsg==1.0.0
+syncd-dcsg-dbg==1.0.0
+vim==2:8.1.0875-5+deb10u4
+vim-runtime==2:8.1.0875-5+deb10u4
diff --git a/files/build/versions/dockers/docker-syncd-dcsg/versions-py3 b/files/build/versions/dockers/docker-syncd-dcsg/versions-py3
new file mode 100644
index 000000000..ed1879443
--- /dev/null
+++ b/files/build/versions/dockers/docker-syncd-dcsg/versions-py3
@@ -0,0 +1,7 @@
+grpcio==1.51.1
+ply==3.11
+protobuf==4.21.12
+psutil==5.9.4
+pyroute2==0.7.2
+scapy==2.5.0
+thrift==0.17.0
diff --git a/files/build_templates/docker_image_ctl.j2 b/files/build_templates/docker_image_ctl.j2
index 8377b5346..dda6dba63 100644
--- a/files/build_templates/docker_image_ctl.j2
+++ b/files/build_templates/docker_image_ctl.j2
@@ -215,7 +215,7 @@ function postStartAction()
        fi
     fi
     # Setup ebtables configuration
-{%- if sonic_asic_platform != "vs" %}
+{%- if sonic_asic_platform != "vs" and sonic_asic_platform != "dcsg" %}
     ebtables_config
 {%- endif %}
     # chassisdb starts before database starts, bypass the PING check since other
@@ -404,7 +404,11 @@ start() {
 
     {%- if docker_container_name == "gbsyncd" %}
     GBSYNCD_CONF=/usr/share/sonic/device/$PLATFORM/gbsyncd.ini
-    GBSYNCD_PLATFORM=gbsyncd-vs
+    {%- if sonic_asic_platform == "vs" %}
+        GBSYNCD_PLATFORM=gbsyncd-vs
+    {%- else %}
+        GBSYNCD_PLATFORM=gbsyncd-dcsg
+    {%- endif %}
     if [ -f "$GBSYNCD_CONF" ]; then
         while IFS="=" read -r key value; do
             case "$key" in
diff --git a/files/build_templates/init_cfg.json.j2 b/files/build_templates/init_cfg.json.j2
index 1d1c1817b..f3f4e4fb6 100644
--- a/files/build_templates/init_cfg.json.j2
+++ b/files/build_templates/init_cfg.json.j2
@@ -73,6 +73,7 @@
 {% do features.append(("dhcp_relay", "{% if not (DEVICE_METADATA is defined and DEVICE_METADATA['localhost'] is defined and DEVICE_METADATA['localhost']['type'] is defined and DEVICE_METADATA['localhost']['type'] is not in ['ToRRouter', 'EPMS', 'MgmtTsToR', 'MgmtToRRouter', 'BmcMgmtToRRouter']) %}enabled{% else %}disabled{% endif %}", false, "enabled")) %}
 {%- if include_dhcp_server == "y" %}{% do features.append(("dhcp_server", "disabled", false, "enabled")) %}{% endif %}
 {%- if sonic_asic_platform == "vs" %}{% do features.append(("gbsyncd", "enabled", false, "enabled")) %}{% endif %}
+{%- if sonic_asic_platform == "dcsg" %}{% do features.append(("gbsyncd", "enabled", false, "enabled")) %}{% endif %}
 {%- if include_iccpd == "y" %}{% do features.append(("iccpd", "disabled", false, "enabled")) %}{% endif %}
 {%- if include_mgmt_framework == "y" %}{% do features.append(("mgmt-framework", "enabled", true, "enabled")) %}{% endif %}
 {%- if include_mux == "y" %}{% do features.append(("mux", "{% if 'subtype' in DEVICE_METADATA['localhost'] and DEVICE_METADATA['localhost']['subtype'] == 'DualToR' %}enabled{% else %}always_disabled{% endif %}", false, "enabled")) %}{% endif %}
diff --git a/files/build_templates/per_namespace/swss.service.j2 b/files/build_templates/per_namespace/swss.service.j2
index b0560aabc..10933c87d 100644
--- a/files/build_templates/per_namespace/swss.service.j2
+++ b/files/build_templates/per_namespace/swss.service.j2
@@ -6,6 +6,10 @@ After=database{% if multi_instance == 'true' %}@%i{% endif %}.service
 Requires=topology.service
 After=topology.service
 {% endif %}
+{% if multi_instance == 'true' and sonic_asic_platform == 'dcsg' %}
+Requires=topology.service
+After=topology.service
+{% endif %}
 {% if sonic_asic_platform == 'broadcom' %}
 Requires=opennsl-modules.service
 {% endif %}
diff --git a/files/build_templates/per_namespace/syncd.service.j2 b/files/build_templates/per_namespace/syncd.service.j2
index 842eaebc7..55512c793 100644
--- a/files/build_templates/per_namespace/syncd.service.j2
+++ b/files/build_templates/per_namespace/syncd.service.j2
@@ -7,6 +7,10 @@ After=swss{% if multi_instance == 'true' %}@%i{% endif %}.service
 Requires=topology.service
 After=topology.service
 {% endif %}
+{% if multi_instance == 'true' and sonic_asic_platform == 'dcsg' %}
+Requires=topology.service
+After=topology.service
+{% endif %}
 {% if sonic_asic_platform == 'broadcom' %}
 Requires=opennsl-modules.service
 After=opennsl-modules.service
diff --git a/files/build_templates/per_namespace/teamd.service.j2 b/files/build_templates/per_namespace/teamd.service.j2
index ddf6691ea..a8b7928bd 100644
--- a/files/build_templates/per_namespace/teamd.service.j2
+++ b/files/build_templates/per_namespace/teamd.service.j2
@@ -5,6 +5,10 @@ After=swss{% if multi_instance == 'true' %}@%i{% endif %}.service
 Requires=topology.service
 After=topology.service
 {% endif %}
+{% if multi_instance == 'true' and sonic_asic_platform == 'dcsg' %}
+Requires=topology.service
+After=topology.service
+{% endif %}
 Requires=config-setup.service
 After=config-setup.service
 BindsTo=sonic.target
diff --git a/files/build_templates/sonic_debian_extension.j2 b/files/build_templates/sonic_debian_extension.j2
index e959fb24f..f95dc56a6 100644
--- a/files/build_templates/sonic_debian_extension.j2
+++ b/files/build_templates/sonic_debian_extension.j2
@@ -606,7 +606,7 @@ sudo cp $BUILD_TEMPLATES/buffers_config.j2 $FILESYSTEM_ROOT_USR_SHARE_SONIC_TEMP
 sudo cp $BUILD_TEMPLATES/qos_config.j2 $FILESYSTEM_ROOT_USR_SHARE_SONIC_TEMPLATES/
 
 # Copy the templates for dynamically buffer calculation
-{% if sonic_asic_platform == "mellanox" or sonic_asic_platform == "vs" or sonic_asic_platform == "barefoot" %}
+{% if sonic_asic_platform == "mellanox" or sonic_asic_platform == "vs" or sonic_asic_platform == "dcsg" or sonic_asic_platform == "barefoot" %}
 if [ -f platform/{{ sonic_asic_platform }}/asic_table.j2 ]
 then
     sudo cp platform/{{ sonic_asic_platform }}/asic_table.j2 $FILESYSTEM_ROOT/usr/share/sonic/templates/asic_table.j2
@@ -650,6 +650,16 @@ sudo LANG=C chroot $FILESYSTEM_ROOT systemctl disable dash-engine
 
 {%- endif %}
 
+{%- if sonic_asic_platform == "dcsg" %}
+sudo cp $IMAGE_CONFIGS/topology/topology.service $FILESYSTEM_ROOT_USR_LIB_SYSTEMD_SYSTEM
+echo "topology.service" | sudo tee -a $GENERATED_SERVICE_FILE
+sudo cp $IMAGE_CONFIGS/topology/topology.sh $FILESYSTEM_ROOT/usr/bin
+
+sudo cp platform/dcsg/dash-engine.service $FILESYSTEM_ROOT_USR_LIB_SYSTEMD_SYSTEM
+sudo LANG=C chroot $FILESYSTEM_ROOT systemctl disable dash-engine
+
+{%- endif %}
+
 # Copy platform topology configuration scripts
 sudo cp $IMAGE_CONFIGS/config-topology/config-topology.service $FILESYSTEM_ROOT_USR_LIB_SYSTEMD_SYSTEM
 echo "config-topology.service" | sudo tee -a $GENERATED_SERVICE_FILE
@@ -827,7 +837,7 @@ sudo cp $IMAGE_CONFIGS/platform/rc.local $FILESYSTEM_ROOT/etc/
 sudo cp $IMAGE_CONFIGS/platform/linux_kernel_bde.conf $FILESYSTEM_ROOT/etc/modprobe.d/
 
 # Enable psample drivers to support sFlow on vs
-{% if sonic_asic_platform == "vs" %}
+{% if sonic_asic_platform == "vs" or sonic_asic_platform == "dcsg" %}
 sudo tee -a $FILESYSTEM_ROOT/etc/modules-load.d/modules.conf > /dev/null <<EOF
 psample
 act_sample
diff --git a/files/scripts/gbsyncd-platform.sh b/files/scripts/gbsyncd-platform.sh
index c0db897d6..8c0a58992 100755
--- a/files/scripts/gbsyncd-platform.sh
+++ b/files/scripts/gbsyncd-platform.sh
@@ -9,6 +9,7 @@ CONFIGFILE="${DEVPATH}/${PLATFORM}/gbsyncd.ini"
 
 # Skip checking the service for vs
 [ "$sonic_asic_platform" = vs ] && exit 0
+[ "$sonic_asic_platform" = dcsg ] && exit 0
 
 if [ ! -f "$CONFIGFILE" ]; then
     exit 1
diff --git a/platform/dcsg/README.dcsgdocker.md b/platform/dcsg/README.dcsgdocker.md
new file mode 100644
index 000000000..1c2aed820
--- /dev/null
+++ b/platform/dcsg/README.dcsgdocker.md
@@ -0,0 +1,47 @@
+HOWTO Use Virtual Switch (Docker)
+
+
+1. Create a docker with two front panel ports
+
+```
+$ docker run -id --name sw debian bash
+$ sudo ./create_vnet.sh -n 2 sw
+$ ip netns list
+sw-srv1 (id: 6)
+sw-srv0 (id: 5)
+```
+
+2. Start sonic virtual switch docker
+
+```
+$ docker run --privileged --network container:sw --name dcsg -d docker-sonic-dcsg
+```
+
+3. Setup IP in the virtual switch docker
+
+```
+$ docker exec -it dcsg bash
+root@2e9b5c2dc2a2:/# config interface ip add Ethernet0 10.0.0.0/31
+root@2e9b5c2dc2a2:/# config interface ip add Ethernet4 10.0.0.2/31
+root@2e9b5c2dc2a2:/# config interface startup Ethernet0
+root@2e9b5c2dc2a2:/# config interface startup Ethernet4
+```
+
+4. Setup IP in the server network namespace
+
+```
+$ sudo ip netns exec sw-srv0 ifconfig eth0 10.0.0.1/31
+$ sudo ip netns exec sw-srv0 ip route add default via 10.0.0.0
+$ sudo ip netns exec sw-srv1 ifconfig eth0 10.0.0.3/31
+$ sudo ip netns exec sw-srv1 ip route add default via 10.0.0.2
+```
+
+5. Ping from sw-srv0 to sw-srv1
+
+```
+$ sudo ip netns exec sw-srv0 ping  10.0.0.3
+PING 10.0.0.3 (10.0.0.3) 56(84) bytes of data.
+64 bytes from 10.0.0.3: icmp_seq=1 ttl=63 time=0.137 ms
+64 bytes from 10.0.0.3: icmp_seq=2 ttl=63 time=0.148 ms
+64 bytes from 10.0.0.3: icmp_seq=3 ttl=63 time=0.149 ms
+```
diff --git a/platform/dcsg/README.dcsgvm.md b/platform/dcsg/README.dcsgvm.md
new file mode 100644
index 000000000..705d40f8e
--- /dev/null
+++ b/platform/dcsg/README.dcsgvm.md
@@ -0,0 +1,116 @@
+HOWTO Use Virtual Switch (VM)
+
+1. Install libvirt, kvm, qemu
+
+```
+sudo apt-get install libvirt-clients qemu-kvm libvirt-bin
+```
+
+2. Create SONiC VM for single ASIC HWSKU
+
+```
+$ sudo virsh
+Welcome to virsh, the virtualization interactive terminal.
+
+Type:  'help' for help with commands
+       'quit' to quit
+
+virsh # 
+virsh # create sonic.xml
+Domain sonic created from sonic.xml
+
+virsh # 
+```
+
+2. Create SONiC VM for multi-ASIC HWSKU
+
+- Based on the number of asics of hwsku, update device/x86_64-kvm_x86_64-r0/asic.conf 
+```
+NUM_ASIC=<n>
+DEV_ID_ASIC_0=0
+DEV_ID_ASIC_1=1
+DEV_ID_ASIC_2=2
+DEV_ID_ASIC_3=3
+..
+DEV_ID_ASIC_<n-1>=<n-1>
+```
+For example, a four asic DCSG asic.conf will be:
+```
+NUM_ASIC=4
+DEV_ID_ASIC_0=0
+DEV_ID_ASIC_1=1
+DEV_ID_ASIC_2=2
+DEV_ID_ASIC_3=3
+```
+- Create a topology.sh script which will create the internal asic topology for
+the specific hwsku.
+For example, for msft_multi_asic_dcsg:
+https://github.com/Azure/sonic-buildimage/blob/master/device/virtual/x86_64-kvm_x86_64-r0/msft_multi_asic_dcsg/topology.sh
+
+- With the updated asic.conf and topology.sh, build sonic-dcsg.img which can be used to 
+bring up multi-asic virtual switch.
+
+- Update platform/dcsg/sonic_multiasic.xml with higher memory and vcpu as required.
+  - For 4-asic dcsg platform msft_four_asic_dcsg hwsku, 8GB memory and 10vCPUs.
+  - For 7-ASIC dcsg platform msft_multi_asic_dcsg hwsku, 8GB and 16vCPUs.
+- Update the number of front-panel interfaces in sonic_multliasic.xml
+    - For 4-ASIC dcsg platform, 8 front panel interfaces.
+    - For 6-ASIC dcsg platform, 64 front panel interfaces.
+
+- With multi-asic sonic_dcsg.img and sonic_multiasic.xml file, bring up multi-asic
+dcsg as:
+
+```
+$ sudo virsh
+Welcome to virsh, the virtualization interactive terminal.
+
+Type:  'help' for help with commands
+       'quit' to quit
+
+virsh #
+virsh # create sonic_multiasic.xml 
+Domain sonic created from sonic.xml
+
+virsh #
+```
+
+- Steps to convert a prebuilt single asic sonic-dcsg.img:
+  - Use the updated sonic_multiasic.xml file and bring up virtual switch.
+  - Update /usr/share/sonic/device/x86_64-kvm_x86_64-r0/asic.conf as above.
+  - Add topology.sh in /usr/share/sonic/device/x86_64-kvm_x86_64-r0/<HWSKU>
+  - stop database service and remove database docker, so that when dcsg is 
+rebooted, database_global.json is created with the right namespaces.
+    - systemctl stop database
+    - docker rm database
+  - sudo reboot
+  - Once rebooted, DCSG should be multi-asic DCSG.
+
+- Start topology service.
+```
+sudo systemctl start topology.
+```
+
+- Load configuration using minigraph or config_dbs.
+
+3. Access virtual switch:
+
+    1. Connect SONiC VM via console
+    ```
+    $ telnet 127.0.0.1 7000
+    ```
+    
+    OR
+
+    2. Connect SONiC VM via SSH
+        
+        1. Connect via console (see 3.1 above)
+
+        2. Request a new DHCP address
+        ```
+        sudo dhclient -v
+        ```
+        
+        3. Connect via SSH
+        ```
+        $ ssh -p 3040 admin@127.0.0.1
+        ```
diff --git a/platform/dcsg/README.gns3.md b/platform/dcsg/README.gns3.md
new file mode 100644
index 000000000..4968d975e
--- /dev/null
+++ b/platform/dcsg/README.gns3.md
@@ -0,0 +1,17 @@
+HOWTO Create a GNS3 Appliance File (.gns3a)
+
+
+Execute the command sonic-gns3.sh
+
+
+For instance: 
+
+./sonic-gns3a.sh -h
+
+sonic-gns3a.sh [ -r <ReleaseNumber> ] -b <SONiC DSSG image: sonic-dcsg.image>
+e.g.: sonic-gns3a.sh -r 1.1 -b <store_path>/sonic-dcsg.img
+
+For more information about GNS3, please refer to:
+
+https://gns3.com/
+
diff --git a/platform/dcsg/create_vnet.sh b/platform/dcsg/create_vnet.sh
new file mode 100755
index 000000000..2217bbbd0
--- /dev/null
+++ b/platform/dcsg/create_vnet.sh
@@ -0,0 +1,58 @@
+#!/bin/bash -e
+
+usage() {
+	echo "Usage: $0 [-n <int>] swname" 1>&2
+    exit 1
+}
+
+SERVERS=2
+
+while getopts ":n:" opt; do
+    case $opt in
+        n)
+            SERVERS=$((OPTARG))
+            ;;
+        *)
+            usage
+			;;
+    esac
+done
+
+shift $((OPTIND-1))
+
+SWNAME=$1
+
+pid=$(docker inspect --format '{{.State.Pid}}' $SWNAME)
+
+echo Seting up servers
+
+
+for srv in `seq 0 $((SERVERS-1))`; do
+
+    SRV="$SWNAME-srv$srv"
+
+    NSS="ip netns exec $SRV"
+
+    ip netns add $SRV
+
+    $NSS ip addr add 127.0.0.1/8 dev lo
+    $NSS ip addr add ::1/128 dev lo
+    $NSS ip link set dev lo up
+
+    # add virtual link between neighbor and the virtual switch docker
+
+    IF="eth$((srv+1))"
+
+    ip link add ${SRV}eth0 type veth peer name $SWNAME-$IF
+    ip link set ${SRV}eth0 netns $SRV
+    ip link set $SWNAME-$IF netns ${pid}
+    nsenter -t $pid -n ip link set dev $SWNAME-$IF name $IF
+
+    echo "Bring ${SRV}eth0 up"
+    $NSS ip link set dev ${SRV}eth0 name eth0
+    $NSS ip link set dev eth0 up
+
+    echo "Bring $IF up in the virtual switch docker"
+    nsenter -t $pid -n ip link set dev $IF up
+
+done
diff --git a/platform/dcsg/dash-engine.service b/platform/dcsg/dash-engine.service
new file mode 100644
index 000000000..342cca06a
--- /dev/null
+++ b/platform/dcsg/dash-engine.service
@@ -0,0 +1,16 @@
+[Unit]
+Description=Dash engine service
+Before=syncd.service
+StartLimitIntervalSec=1200
+StartLimitBurst=3
+
+[Service]
+User=root
+ExecStartPre=/usr/bin/dash_engine.sh start
+ExecStart=/usr/bin/dash_engine.sh wait
+ExecStop=/usr/bin/dash_engine.sh stop
+Restart=always
+RestartSec=30
+
+[Install]
+WantedBy=multi-user.target
diff --git a/platform/dcsg/docker-dash-engine.dep b/platform/dcsg/docker-dash-engine.dep
new file mode 100644
index 000000000..4ed9feb89
--- /dev/null
+++ b/platform/dcsg/docker-dash-engine.dep
@@ -0,0 +1,8 @@
+DPATH       := $($(DOCKER_DASH_ENGINE)_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/dcsg/docker-dash-engine.mk platform/dcsg/docker-dash-engine.dep   
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+DEP_FILES   += $(shell git ls-files $(DPATH))
+
+$(DOCKER_DASH_ENGINE)_CACHE_MODE  := GIT_CONTENT_SHA 
+$(DOCKER_DASH_ENGINE)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(DOCKER_DASH_ENGINE)_DEP_FILES   := $(DEP_FILES)
diff --git a/platform/dcsg/docker-dash-engine.mk b/platform/dcsg/docker-dash-engine.mk
new file mode 100644
index 000000000..d3b4a8747
--- /dev/null
+++ b/platform/dcsg/docker-dash-engine.mk
@@ -0,0 +1,15 @@
+# docker image for dcsg gbsyncd
+
+DOCKER_DASH_ENGINE = docker-dash-engine.gz
+$(DOCKER_DASH_ENGINE)_VERSION = 1.0.0
+$(DOCKER_DASH_ENGINE)_PACKAGE_NAME = dash-engine
+$(DOCKER_DASH_ENGINE)_PATH = $(PLATFORM_PATH)/docker-dash-engine
+
+SONIC_DOCKER_IMAGES += $(DOCKER_DASH_ENGINE)
+SONIC_INSTALL_DOCKER_IMAGES += $(DOCKER_DASH_ENGINE)
+
+$(DOCKER_DASH_ENGINE)_LOAD_DOCKERS += $(DOCKER_CONFIG_ENGINE_BOOKWORM)
+
+$(DOCKER_DASH_ENGINE)_CONTAINER_NAME = dash_engine
+$(DOCKER_DASH_ENGINE)_CONTAINER_PRIVILEGED = true
+$(DOCKER_DASH_ENGINE)_RUN_OPT += --privileged -t
diff --git a/platform/dcsg/docker-dash-engine/Dockerfile.j2 b/platform/dcsg/docker-dash-engine/Dockerfile.j2
new file mode 100644
index 000000000..e1f6ff946
--- /dev/null
+++ b/platform/dcsg/docker-dash-engine/Dockerfile.j2
@@ -0,0 +1,23 @@
+FROM p4lang/behavioral-model@sha256:ce45720e28a96a50f275c1b511cd84c2558b62f2cf7a7e506765183bc3fb2e32
+## FROM docker-config-engine-bookworm-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}
+
+## Make apt-get non-interactive
+ENV DEBIAN_FRONTEND=noninteractive
+
+RUN apt-get update
+
+RUN apt-get install -f -y net-tools supervisor rsyslog  python3-pip
+RUN pip3 install supervisord-dependent-startup
+
+COPY ["start.sh", "/usr/bin/"]
+
+## COPY ["supervisord.conf", "/etc/supervisor/conf.d/"]
+## COPY ["files/supervisor-proc-exit-listener", "/usr/bin"]
+## COPY ["critical_processes", "/etc/supervisor/"]
+
+## Clean up
+RUN apt-get clean -y; apt-get autoclean -y; apt-get autoremove -y
+RUN rm -rf /debs
+
+## ENTRYPOINT ["/usr/bin/supervisord"]
+ENTRYPOINT ["/usr/bin/start.sh"]
diff --git a/platform/dcsg/docker-dash-engine/critical_processes b/platform/dcsg/docker-dash-engine/critical_processes
new file mode 100644
index 000000000..41d8adfbc
--- /dev/null
+++ b/platform/dcsg/docker-dash-engine/critical_processes
@@ -0,0 +1 @@
+program:simple_switch_grpc
diff --git a/platform/dcsg/docker-dash-engine/start.sh b/platform/dcsg/docker-dash-engine/start.sh
new file mode 100755
index 000000000..54bb6d3dc
--- /dev/null
+++ b/platform/dcsg/docker-dash-engine/start.sh
@@ -0,0 +1,9 @@
+#!/usr/bin/env bash
+
+PORT1=eth1
+PORT2=eth2
+
+[[ $(cat /sys/class/net/$PORT1/operstate) != up ]] && ifconfig $PORT1 up
+[[ $(cat /sys/class/net/$PORT2/operstate) != up ]] && ifconfig $PORT2 up
+
+simple_switch_grpc --interface 0@$PORT1 --interface 1@$PORT2 --log-console --no-p4
diff --git a/platform/dcsg/docker-dash-engine/supervisord.conf b/platform/dcsg/docker-dash-engine/supervisord.conf
new file mode 100644
index 000000000..f5df597a2
--- /dev/null
+++ b/platform/dcsg/docker-dash-engine/supervisord.conf
@@ -0,0 +1,37 @@
+[supervisord]
+logfile_maxbytes=1MB
+logfile_backups=2
+nodaemon=true
+
+[eventlistener:dependent-startup]
+command=python3 -m supervisord_dependent_startup
+autostart=true
+autorestart=unexpected
+startretries=0
+exitcodes=0,3
+events=PROCESS_STATE
+buffer_size=1024
+
+[program:rsyslogd]
+command=/usr/sbin/rsyslogd -n -iNONE
+priority=1
+autostart=true
+autorestart=unexpected
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+dependent_startup=true
+
+[program:start]
+command=/usr/bin/start.sh
+priority=2
+autostart=false
+autorestart=false
+startsecs=0
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+dependent_startup=true
+dependent_startup_wait_for=rsyslogd:running
diff --git a/platform/dcsg/docker-gbsyncd-dcsg.dep b/platform/dcsg/docker-gbsyncd-dcsg.dep
new file mode 100644
index 000000000..d882f8cd1
--- /dev/null
+++ b/platform/dcsg/docker-gbsyncd-dcsg.dep
@@ -0,0 +1,11 @@
+#DPKG FRK
+DPATH       := $($(DOCKER_GBSYNCD_BASE)_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/dcsg/docker-gbsyncd-dcsg.mk platform/dcsg/docker-gbsyncd-dcsg.dep   
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+DEP_FILES   += $(shell git ls-files $(DPATH))
+
+$(DOCKER_GBSYNCD_BASE)_CACHE_MODE  := GIT_CONTENT_SHA 
+$(DOCKER_GBSYNCD_BASE)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(DOCKER_GBSYNCD_BASE)_DEP_FILES   := $(DEP_FILES)
+
+$(eval $(call add_dbg_docker,$(DOCKER_GBSYNCD_BASE),$(DOCKER_GBSYNCD_BASE_DBG)))
diff --git a/platform/dcsg/docker-gbsyncd-dcsg.mk b/platform/dcsg/docker-gbsyncd-dcsg.mk
new file mode 100644
index 000000000..adaf06479
--- /dev/null
+++ b/platform/dcsg/docker-gbsyncd-dcsg.mk
@@ -0,0 +1,19 @@
+# docker image for dcsg gbsyncd
+
+DOCKER_GBSYNCD_PLATFORM_CODE = dcsg
+include $(PLATFORM_PATH)/../template/docker-gbsyncd-bookworm.mk
+
+$(DOCKER_GBSYNCD_BASE)_DEPENDS += $(SYNCD_DCSG) \
+                              $(LIBNL3_DEV) \
+                              $(LIBNL3)
+
+$(DOCKER_GBSYNCD_BASE)_DBG_DEPENDS += $(SYNCD_DCSG_DBG) \
+                                $(LIBSWSSCOMMON_DBG) \
+                                $(LIBSAIMETADATA_DBG) \
+                                $(LIBSAIREDIS_DBG) \
+                                $(LIBSAIDCSG_DBG)
+
+$(DOCKER_GBSYNCD_BASE)_VERSION = 1.0.0
+$(DOCKER_GBSYNCD_BASE)_PACKAGE_NAME = gbsyncd
+
+$(DOCKER_GBSYNCD_BASE)_RUN_OPT += -v /host/warmboot:/var/warmboot
diff --git a/platform/dcsg/docker-gbsyncd-dcsg/Dockerfile.j2 b/platform/dcsg/docker-gbsyncd-dcsg/Dockerfile.j2
new file mode 100644
index 000000000..77db91f81
--- /dev/null
+++ b/platform/dcsg/docker-gbsyncd-dcsg/Dockerfile.j2
@@ -0,0 +1,40 @@
+FROM docker-config-engine-bookworm-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}
+
+ARG docker_container_name
+
+## Make apt-get non-interactive
+ENV DEBIAN_FRONTEND=noninteractive
+
+RUN apt-get update
+
+RUN apt-get install -f -y iproute2 libcap2-bin
+
+# For DASH engine
+
+COPY debs/libnl-3-dev_{{ LIBNL3_VERSION_SONIC }}_{{ CONFIGURED_ARCH }}.deb debs/libnl-route-3-dev_{{ LIBNL3_VERSION_SONIC }}_{{ CONFIGURED_ARCH }}.deb debs/
+RUN dpkg -i debs/libnl-3-dev_{{ LIBNL3_VERSION_SONIC }}_{{ CONFIGURED_ARCH }}.deb debs/libnl-route-3-dev_{{ LIBNL3_VERSION_SONIC }}_{{ CONFIGURED_ARCH }}.deb
+
+RUN apt-get install -f -y libabsl20220623 libc-ares2 python3-six libboost-thread1.74.0 libboost-dev libboost-system-dev libboost-thread-dev libboost-filesystem1.74.0 libboost-program-options1.74.0 libboost-thread1.74.0 libnanomsg5 libpcap0.8 libthrift-0.17.0 libboost-dev libboost-filesystem-dev libboost-program-options-dev libgmp-dev libnanomsg-dev libpcap-dev libtool pkg-config libthrift-dev python3-thrift thrift-compiler libboost-iostreams1.74.0 libgc1 cpp libboost-dev libboost-all-dev libboost-graph-dev libboost-iostreams-dev libfl-dev libgc-dev libgmp-dev libbpf-dev tcpdump libelf-dev llvm clang python3-pyroute2 python3-ply python3-scapy python3-setuptools python3-thrift libthrift-0.17.0 libgrpc++1.51 libgrpc29 libprotobuf32 libboost-dev libboost-system-dev libboost-thread-dev libprotoc-dev protobuf-compiler python3-protobuf libgrpc++-dev libgrpc-dev protobuf-compiler-grpc python3-grpcio 
+
+COPY \
+{% for deb in docker_gbsyncd_dcsg_debs.split(' ') -%}
+debs/{{ deb }}{{' '}}
+{%- endfor -%}
+debs/
+
+RUN dpkg -i \
+{% for deb in docker_gbsyncd_dcsg_debs.split(' ') -%}
+debs/{{ deb }}{{' '}}
+{%- endfor %}
+
+COPY ["start.sh", "/usr/bin/"]
+
+COPY ["supervisord.conf", "/etc/supervisor/conf.d/"]
+COPY ["files/supervisor-proc-exit-listener", "/usr/bin"]
+COPY ["critical_processes", "/etc/supervisor/"]
+
+## Clean up
+RUN apt-get clean -y; apt-get autoclean -y; apt-get autoremove -y
+RUN rm -rf /debs
+
+ENTRYPOINT ["/usr/local/bin/supervisord"]
diff --git a/platform/dcsg/docker-gbsyncd-dcsg/critical_processes b/platform/dcsg/docker-gbsyncd-dcsg/critical_processes
new file mode 100644
index 000000000..4775a3e8a
--- /dev/null
+++ b/platform/dcsg/docker-gbsyncd-dcsg/critical_processes
@@ -0,0 +1 @@
+program:gbsyncdmgrd
diff --git a/platform/dcsg/docker-gbsyncd-dcsg/start.sh b/platform/dcsg/docker-gbsyncd-dcsg/start.sh
new file mode 100755
index 000000000..e59a2322b
--- /dev/null
+++ b/platform/dcsg/docker-gbsyncd-dcsg/start.sh
@@ -0,0 +1,21 @@
+#!/usr/bin/env bash
+
+HWSKU_DIR=/usr/share/sonic/hwsku
+
+mkdir -p /etc/sai.d/
+
+# Create/Copy the pai.profile to /etc/sai.d/pai.profile
+if [ -f $HWSKU_DIR/pai.profile.j2 ]; then
+    sonic-cfggen -d -t $HWSKU_DIR/pai.profile.j2 > /etc/sai.d/pai.profile
+else
+    if [ -f $HWSKU_DIR/pai.profile ]; then
+        cp $HWSKU_DIR/pai.profile /etc/sai.d/pai.profile
+    fi
+fi
+
+# Create/Copy the gearbox configs to /etc/sai.d
+if [[ x"$sonic_asic_platform" == x"broadcom" ]]; then
+    if [ -d $HWSKU_DIR/gearbox ]; then
+        cp $HWSKU_DIR/gearbox/*.bcm /etc/sai.d/.
+    fi
+fi
diff --git a/platform/dcsg/docker-gbsyncd-dcsg/supervisord.conf b/platform/dcsg/docker-gbsyncd-dcsg/supervisord.conf
new file mode 100644
index 000000000..ea1237877
--- /dev/null
+++ b/platform/dcsg/docker-gbsyncd-dcsg/supervisord.conf
@@ -0,0 +1,56 @@
+[supervisord]
+logfile_maxbytes=1MB
+logfile_backups=2
+nodaemon=true
+
+[eventlistener:dependent-startup]
+command=python3 -m supervisord_dependent_startup
+autostart=true
+autorestart=unexpected
+startretries=0
+exitcodes=0,3
+events=PROCESS_STATE
+buffer_size=1024
+
+[eventlistener:supervisor-proc-exit-listener]
+command=/usr/bin/supervisor-proc-exit-listener --container-name gbsyncd
+events=PROCESS_STATE_EXITED,PROCESS_STATE_RUNNING
+autostart=true
+autorestart=unexpected
+buffer_size=1024
+
+[program:rsyslogd]
+command=/usr/sbin/rsyslogd -n -iNONE
+priority=1
+autostart=false
+autorestart=unexpected
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+dependent_startup=true
+
+[program:start]
+command=/usr/bin/start.sh
+priority=2
+autostart=false
+autorestart=false
+startsecs=0
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+dependent_startup=true
+dependent_startup_wait_for=rsyslogd:running
+
+[program:gbsyncdmgrd]
+command=/usr/bin/gbsyncdmgrd
+priority=3
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+dependent_startup=true
+dependent_startup_wait_for=start:exited
diff --git a/platform/dcsg/docker-ptf-sai.dep b/platform/dcsg/docker-ptf-sai.dep
new file mode 100644
index 000000000..9c9bc7339
--- /dev/null
+++ b/platform/dcsg/docker-ptf-sai.dep
@@ -0,0 +1,8 @@
+DPATH       := $($(DOCKER_PTF_SAI)_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/dcsg/docker-ptf-sai.mk platform/dcsg/docker-ptf-sai.dep
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+DEP_FILES   += $(shell git ls-files $(DPATH))
+
+$(DOCKER_PTF_SAI)_CACHE_MODE  := GIT_CONTENT_SHA
+$(DOCKER_PTF_SAI)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(DOCKER_PTF_SAI)_DEP_FILES   := $(DEP_FILES)
diff --git a/platform/dcsg/docker-ptf-sai.mk b/platform/dcsg/docker-ptf-sai.mk
new file mode 100644
index 000000000..17fce00c1
--- /dev/null
+++ b/platform/dcsg/docker-ptf-sai.mk
@@ -0,0 +1,9 @@
+# docker image for docker-ptf-sai
+
+DOCKER_PTF_SAI = docker-ptf-sai.gz
+DOCKER_PTF_BASE = docker-ptf.gz
+$(DOCKER_PTF_SAI)_PATH = $(DOCKERS_PATH)/docker-ptf-sai
+$(DOCKER_PTF_SAI)_DEPENDS += $(LIBTHRIFT_0_14_1) $(PYTHON3_THRIFT_0_14_1)
+$(DOCKER_PTF_SAI)_LOAD_DOCKERS += $(DOCKER_PTF_BASE)
+SONIC_DOCKER_IMAGES += $(DOCKER_PTF_SAI)
+SONIC_BUSTER_DOCKERS += $(DOCKER_PTF_SAI)
diff --git a/platform/dcsg/docker-ptf.dep b/platform/dcsg/docker-ptf.dep
new file mode 100644
index 000000000..f9f506685
--- /dev/null
+++ b/platform/dcsg/docker-ptf.dep
@@ -0,0 +1,10 @@
+
+DPATH       := $($(DOCKER_PTF)_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/dcsg/docker-ptf.mk platform/dcsg/docker-ptf.dep
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+DEP_FILES   += $(shell git ls-files $(DPATH))
+
+$(DOCKER_PTF)_CACHE_MODE  := GIT_CONTENT_SHA
+$(DOCKER_PTF)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(DOCKER_PTF)_DEP_FILES   := $(DEP_FILES)
+
diff --git a/platform/dcsg/docker-ptf.mk b/platform/dcsg/docker-ptf.mk
new file mode 100644
index 000000000..1c66f8b88
--- /dev/null
+++ b/platform/dcsg/docker-ptf.mk
@@ -0,0 +1,12 @@
+# docker image for docker-ptf
+
+DOCKER_PTF = docker-ptf.gz
+$(DOCKER_PTF)_PYTHON_WHEELS += $(PTF_PY3)
+$(DOCKER_PTF)_PATH = $(DOCKERS_PATH)/docker-ptf
+ifeq ($(SONIC_PTF_ENV_PY_VER), mixed)
+$(DOCKER_PTF)_DEPENDS += $(LIBTHRIFT) $(PYTHON_THRIFT) $(PTF) $(PYTHON_SAITHRIFT)
+else
+$(DOCKER_PTF)_DEPENDS += $(LIBTHRIFT_0_14_1) $(PYTHON3_THRIFT_0_14_1) $(PYTHON_SAITHRIFT)
+endif
+SONIC_DOCKER_IMAGES += $(DOCKER_PTF)
+SONIC_BUSTER_DOCKERS += $(DOCKER_PTF)
diff --git a/platform/dcsg/docker-sonic-dcsg.dep b/platform/dcsg/docker-sonic-dcsg.dep
new file mode 100644
index 000000000..ad5f66209
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg.dep
@@ -0,0 +1,10 @@
+#DPKG FRK
+DPATH       := $($(DOCKER_SONIC_DCSG)_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/dcsg/docker-sonic-dcsg.mk platform/dcsg/docker-sonic-dcsg.dep
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+DEP_FILES   += $(shell git ls-files $(DPATH))
+
+$(DOCKER_SONIC_DCSG)_CACHE_MODE  := GIT_CONTENT_SHA 
+$(DOCKER_SONIC_DCSG)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(DOCKER_SONIC_DCSG)_DEP_FILES   := $(DEP_FILES)
+
diff --git a/platform/dcsg/docker-sonic-dcsg.mk b/platform/dcsg/docker-sonic-dcsg.mk
new file mode 100644
index 000000000..551445bc2
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg.mk
@@ -0,0 +1,52 @@
+# docker image for virtual switch based sonic docker image
+
+DOCKER_SONIC_DCSG = docker-sonic-dcsg.gz
+$(DOCKER_SONIC_DCSG)_PATH = $(PLATFORM_PATH)/docker-sonic-dcsg
+$(DOCKER_SONIC_DCSG)_DEPENDS += $(SYNCD_DCSG) \
+                              $(PYTHON3_SWSSCOMMON) \
+                              $(LIBTEAMDCTL) \
+                              $(LIBTEAM_UTILS) \
+                              $(SONIC_DEVICE_DATA) \
+                              $(LIBYANG) \
+                              $(LIBYANG_CPP) \
+                              $(LIBYANG_PY3) \
+                              $(SONIC_UTILITIES_DATA) \
+                              $(SONIC_HOST_SERVICES_DATA)
+
+$(DOCKER_SONIC_DCSG)_PYTHON_WHEELS += $(SONIC_PY_COMMON_PY3) \
+                                    $(SONIC_PLATFORM_COMMON_PY3) \
+                                    $(SONIC_YANG_MODELS_PY3) \
+                                    $(SONIC_YANG_MGMT_PY3) \
+                                    $(SONIC_UTILITIES_PY3) \
+                                    $(SONIC_HOST_SERVICES_PY3)
+
+ifeq ($(INSTALL_DEBUG_TOOLS), y)
+$(DOCKER_SONIC_DCSG)_DEPENDS += $(LIBSWSSCOMMON_DBG) \
+                              $(LIBSAIREDIS_DBG) \
+                              $(LIBSAIDCSG_DBG) \
+                              $(SYNCD_DCSG_DBG)
+endif
+
+ifeq ($(SONIC_ROUTING_STACK), frr)
+$(DOCKER_SONIC_DCSG)_DEPENDS += $(FRR)
+else
+$(DOCKER_SONIC_DCSG)_DEPENDS += $(GOBGP)
+endif
+
+ifeq ($(INCLUDE_FIPS), y)
+$(DOCKER_SONIC_DCSG)_DEPENDS += $(FIPS_KRB5_ALL)
+endif
+
+$(DOCKER_SONIC_DCSG)_FILES += $(CONFIGDB_LOAD_SCRIPT) \
+                            $(ARP_UPDATE_SCRIPT) \
+                            $(ARP_UPDATE_VARS_TEMPLATE) \
+                            $(BUFFERS_CONFIG_TEMPLATE) \
+                            $(QOS_CONFIG_TEMPLATE) \
+                            $(SONIC_VERSION) \
+                            $(UPDATE_CHASSISDB_CONFIG_SCRIPT) \
+                            $(COPP_CONFIG_TEMPLATE)
+
+$(DOCKER_SONIC_DCSG)_LOAD_DOCKERS += $(DOCKER_SWSS_LAYER_BOOKWORM)
+SONIC_DOCKER_IMAGES += $(DOCKER_SONIC_DCSG)
+
+SONIC_BOOKWORM_DOCKERS += $(DOCKER_SONIC_DCSG)
diff --git a/platform/dcsg/docker-sonic-dcsg/50-default.conf b/platform/dcsg/docker-sonic-dcsg/50-default.conf
new file mode 100644
index 000000000..d672d83af
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/50-default.conf
@@ -0,0 +1,68 @@
+#  Default rules for rsyslog.
+#
+#			For more information see rsyslog.conf(5) and /etc/rsyslog.conf
+
+#
+# First some standard log files.  Log by facility.
+#
+auth,authpriv.*			/var/log/auth.log
+*.*;auth,authpriv.none		-/var/log/syslog
+#cron.*				/var/log/cron.log
+#daemon.*			-/var/log/daemon.log
+kern.*				-/var/log/kern.log
+#lpr.*				-/var/log/lpr.log
+mail.*				-/var/log/mail.log
+#user.*				-/var/log/user.log
+
+#
+# Logging for the mail system.  Split it up so that
+# it is easy to write scripts to parse these files.
+#
+#mail.info			-/var/log/mail.info
+#mail.warn			-/var/log/mail.warn
+mail.err			/var/log/mail.err
+
+#
+# Logging for INN news system.
+#
+news.crit			/var/log/news/news.crit
+news.err			/var/log/news/news.err
+news.notice			-/var/log/news/news.notice
+
+#
+# Some "catch-all" log files.
+#
+#*.=debug;\
+#	auth,authpriv.none;\
+#	news.none;mail.none	-/var/log/debug
+#*.=info;*.=notice;*.=warn;\
+#	auth,authpriv.none;\
+#	cron,daemon.none;\
+#	mail,news.none		-/var/log/messages
+
+#
+# Emergencies are sent to everybody logged in.
+#
+*.emerg                                :omusrmsg:*
+
+#
+# I like to have messages displayed on the console, but only on a virtual
+# console I usually leave idle.
+#
+#daemon,mail.*;\
+#	news.=crit;news.=err;news.=notice;\
+#	*.=debug;*.=info;\
+#	*.=notice;*.=warn	/dev/tty8
+
+# The named pipe /dev/xconsole is for the `xconsole' utility.  To use it,
+# you must invoke `xconsole' with the `-file' option:
+# 
+#    $ xconsole -file /dev/xconsole [...]
+#
+# NOTE: adjust the list below, or you'll go crazy if you have a reasonably
+#      busy site..
+#
+daemon.*;mail.*;\
+	news.err;\
+	*.=debug;*.=info;\
+	*.=notice;*.=warn	|/dev/xconsole
diff --git a/platform/dcsg/docker-sonic-dcsg/Dockerfile.j2 b/platform/dcsg/docker-sonic-dcsg/Dockerfile.j2
new file mode 100644
index 000000000..0f1c59ccf
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/Dockerfile.j2
@@ -0,0 +1,172 @@
+{% from "dockers/dockerfile-macros.j2" import install_debian_packages, install_python_wheels, copy_files %}
+FROM docker-swss-layer-bookworm-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}
+
+ARG docker_container_name
+
+COPY ["etc/rsyslog.conf", "/etc/rsyslog.conf"]
+RUN [ -f /etc/rsyslog.conf ] && sed -ri "s/%syslogtag%/$docker_container_name#%syslogtag%/;" /etc/rsyslog.conf
+
+## Make apt-get non-interactive
+ENV DEBIAN_FRONTEND=noninteractive
+
+RUN apt-get update && apt-get install -y gnupg
+
+RUN apt-get install -y net-tools \
+                       iproute2 \
+                       arping \
+                       ndisc6 \
+                       ethtool \
+                       tcpdump \
+                       ifupdown \
+                       bridge-utils \
+                       libjudydebian1 \
+                       openssh-client \
+                       openssh-server \
+                       libc-ares2 \
+                       bash-completion \
+                       logrotate \
+                       apt-utils \
+                       psmisc \
+                       python3-scapy \
+                       conntrack \
+                       iptables \
+                       jq \
+                       uuid-dev \
+                       # For installing Python m2crypto package
+                       # (these can be uninstalled after installation)
+                       build-essential \
+                       python3-dev \
+                       libssl-dev \
+                       swig \
+                       # For using Python m2crypto package
+                       openssl \
+                       # For installing dependent Python packages of sonic-host-services
+                       # (these can be uninstalled after installation)
+                       libcairo2-dev \
+                       libdbus-1-dev \
+                       libgirepository1.0-dev \
+                       libsystemd-dev \
+                       pkg-config \
+                       # For installing dependent Python packages of sonic-host-services
+                       # these packages are needed at runtime
+                       gir1.2-glib-2.0 \
+                       libdbus-1-3 \
+                       libgirepository-1.0-1 \
+                       {%- if ENABLE_ASAN == "y" %}
+                       libasan6 \
+                       {%- endif %}
+                       dbus \
+                       redis-server \
+                       # For libkrb5-dev
+                       comerr-dev \
+                       libgssrpc4 \
+                       libkdb5-10 \
+                       libprotobuf-c-dev \
+                       protobuf-c-compiler
+
+# For sonic-config-engine Python 3 package
+# Install pyangbind here, outside sonic-config-engine dependencies, as pyangbind causes enum34 to be installed.
+# Then immediately uninstall enum34, as enum34 should not be installed for Python >= 3.4, as it causes a
+# conflict with the new 'enum' module in the standard library
+# https://github.com/robshakir/pyangbind/issues/232
+RUN pip3 install pyangbind==0.8.1
+RUN pip3 uninstall -y enum34
+
+# Dependencies of restore_neighbors.py
+RUN pip3 install \
+         pyroute2==0.7.2 \
+         netifaces==0.11.0
+
+{% if docker_sonic_dcsg_debs.strip() -%}
+# Copy built Debian packages
+{{ copy_files("debs/", docker_sonic_dcsg_debs.split(' '), "/debs/") }}
+
+# Install built Debian packages and implicitly install their dependencies
+{{ install_debian_packages(docker_sonic_dcsg_debs.split(' ')) }}
+{%- endif %}
+
+RUN apt-get install -y libzmq3-dev
+
+{% if docker_sonic_dcsg_pydebs.strip() -%}
+# Copy built Debian packages
+{{ copy_files("python-debs/", docker_sonic_dcsg_pydebs.split(' '), "/debs/") }}
+
+# Install built Debian packages and implicitly install their dependencies
+{{ install_debian_packages(docker_sonic_dcsg_pydebs.split(' ')) }}
+{%- endif %}
+
+{% if docker_sonic_dcsg_whls.strip() %}
+# Copy locally-built Python wheel dependencies
+{{ copy_files("python-wheels/", docker_sonic_dcsg_whls.split(' '), "/python-wheels/") }}
+
+# Install locally-built Python wheel dependencies
+{{ install_python_wheels(docker_sonic_dcsg_whls.split(' ')) }}
+{% endif %}
+
+# Clean up
+RUN apt-get purge -y build-essential libssl-dev swig
+RUN apt-get purge -y python3-dev
+RUN apt-get purge -y libcairo2-dev libdbus-1-dev libgirepository1.0-dev libsystemd-dev pkg-config
+RUN apt-get clean -y
+RUN apt-get autoclean -y
+RUN apt-get autoremove -y
+RUN rm -rf /debs ~/.cache
+
+RUN sed -ri 's/^# save ""$/save ""/g;                    \
+             s/^daemonize yes$/daemonize no/;            \
+             s/^logfile .*$/logfile ""/;                 \
+             s/^# syslog-enabled no$/syslog-enabled no/; \
+             s/^# unixsocket/unixsocket/;                \
+             s/redis-server.sock/redis.sock/g;           \
+             s/^client-output-buffer-limit pubsub [0-9]+mb [0-9]+mb [0-9]+/client-output-buffer-limit pubsub 0 0 0/; \
+             s/^notify-keyspace-events ""$/notify-keyspace-events AKE/; \
+             s/^databases [0-9]+$/databases 100/ \
+            ' /etc/redis/redis.conf
+
+COPY ["50-default.conf", "/etc/rsyslog.d/"]
+COPY ["start.sh", "orchagent.sh", "files/update_chassisdb_config", "/usr/bin/"]
+COPY ["supervisord.conf.j2", "/usr/share/sonic/templates/"]
+COPY ["files/configdb-load.sh", "/usr/bin/"]
+COPY ["files/arp_update", "/usr/bin/"]
+COPY ["files/buffers_config.j2", "files/qos_config.j2", "files/arp_update_vars.j2", "files/copp_cfg.j2", "/usr/share/sonic/templates/"]
+COPY ["files/sonic_version.yml", "/etc/sonic/"]
+COPY ["port_breakout_config_db.json", "/etc/sonic/"]
+COPY ["database_config.json", "/etc/default/sonic-db/"]
+COPY ["hostname.j2", "/usr/share/sonic/templates/"]
+COPY ["init_cfg.json.j2", "/usr/share/sonic/templates/"]
+COPY ["default_chassis_cfg.json", "/etc/default/sonic-db/"]
+COPY ["asic_table.json", "/etc/sonic/"]
+COPY ["zero_profiles.json", "/etc/sonic"]
+COPY ["buffermgrd.sh", "/usr/bin/"]
+
+COPY ["platform.json", "/usr/share/sonic/device/x86_64-kvm_x86_64-r0/"]
+COPY ["platform-dpu-2p.json", "/usr/share/sonic/device/x86_64-kvm_x86_64-r0/"]
+COPY ["hwsku.json", "/usr/share/sonic/device/x86_64-kvm_x86_64-r0/Force10-S6000/"]
+COPY ["hwsku.json", "/usr/share/sonic/device/x86_64-kvm_x86_64-r0/brcm_gearbox_dcsg/"]
+COPY ["hwsku.json", "/usr/share/sonic/device/x86_64-kvm_x86_64-r0/Mellanox-SN2700/"]
+
+RUN mkdir -p /etc/supervisor/conf.d/
+RUN sonic-cfggen -a "{\"ENABLE_ASAN\":\"{{ENABLE_ASAN}}\"}" -t /usr/share/sonic/templates/supervisord.conf.j2 > /etc/supervisor/conf.d/supervisord.conf
+RUN rm -f /usr/share/sonic/templates/supervisord.conf.j2
+
+{%- if ENABLE_ASAN == "y" %}
+RUN mkdir -p /var/log/asan
+{%- endif %}
+
+RUN echo "docker-sonic-dcsg" > /etc/hostname
+RUN mkdir -p /etc/quagga
+RUN touch /etc/quagga/zebra.conf
+
+# disable integrated vtysh config
+RUN rm /etc/frr/frr.conf
+
+COPY ["frr/zebra.conf", "/etc/frr/"]
+
+# Create /var/warmboot/teamd folder for teammgrd
+RUN mkdir -p /var/warmboot/teamd
+
+# Set PLATFORM and HWSKU environment variables
+ENV PLATFORM=x86_64-kvm_x86_64-r0
+ENV HWSKU=Force10-S6000
+
+ENTRYPOINT ["/usr/local/bin/supervisord"]
diff --git a/platform/dcsg/docker-sonic-dcsg/asic_table.json b/platform/dcsg/docker-sonic-dcsg/asic_table.json
new file mode 100644
index 000000000..badb54115
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/asic_table.json
@@ -0,0 +1,11 @@
+[
+    {
+        "ASIC_TABLE:DCSG-ASIC": {
+            "cell_size": "128",
+            "pipeline_latency": "18",
+            "mac_phy_delay": "0.8",
+            "peer_response_time": "3.8"
+        },
+        "OP": "SET"
+    }
+]
diff --git a/platform/dcsg/docker-sonic-dcsg/buffermgrd.sh b/platform/dcsg/docker-sonic-dcsg/buffermgrd.sh
new file mode 100755
index 000000000..d9b8483b1
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/buffermgrd.sh
@@ -0,0 +1,17 @@
+#!/usr/bin/env bash
+
+BUFFER_CALCULATION_MODE=$(redis-cli -n 4 hget "DEVICE_METADATA|localhost" buffer_model)
+export ASIC_VENDOR=dcsg
+
+if [ "$BUFFER_CALCULATION_MODE" == "dynamic" ]; then
+    BUFFERMGRD_ARGS="-a /etc/sonic/asic_table.json"
+
+    if [ -f /etc/sonic/zero_profiles.json ]; then
+        BUFFERMGRD_ZERO_PROFILE_ARGS=" -z /etc/sonic/zero_profiles.json"
+    fi
+else
+    # Should we use the fallback MAC in case it is not found in Device.Metadata
+    BUFFERMGRD_ARGS="-l /usr/share/sonic/hwsku/pg_profile_lookup.ini"
+fi
+
+exec /usr/bin/buffermgrd ${BUFFERMGRD_ARGS} ${BUFFERMGRD_ZERO_PROFILE_ARGS}
diff --git a/platform/dcsg/docker-sonic-dcsg/database_config.json b/platform/dcsg/docker-sonic-dcsg/database_config.json
new file mode 100644
index 000000000..04cb3d3aa
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/database_config.json
@@ -0,0 +1,83 @@
+{
+    "INSTANCES": {
+        "redis":{
+            "hostname" : "127.0.0.1",
+            "port" : 6379,
+            "unix_socket_path" : "/var/run/redis/redis.sock"
+        },
+
+        "redis_chassis":{
+            "hostname" : "redis_chassis.server",
+            "port": 6380,
+            "unix_socket_path": "/var/run/redis/redis_chassis.sock"
+        }
+    },
+    "DATABASES" : {
+        "APPL_DB" : {
+            "id" : 0,
+            "separator": ":",
+            "instance" : "redis"
+        },
+        "ASIC_DB" : {
+            "id" : 1,
+            "separator": ":",
+            "instance" : "redis"
+        },
+        "COUNTERS_DB" : {
+            "id" : 2,
+            "separator": ":",
+            "instance" : "redis"
+        },
+        "CONFIG_DB" : {
+            "id" : 4,
+            "separator": "|",
+            "instance" : "redis"
+        },
+        "PFC_WD_DB" : {
+            "id" : 5,
+            "separator": ":",
+            "instance" : "redis"
+        },
+        "FLEX_COUNTER_DB" : {
+            "id" : 5,
+            "separator": ":",
+            "instance" : "redis"
+        },
+        "STATE_DB" : {
+            "id" : 6,
+            "separator": "|",
+            "instance" : "redis"
+        },
+        "SNMP_OVERLAY_DB" : {
+            "id" : 7,
+            "separator": "|",
+            "instance" : "redis"
+        },
+        "GB_ASIC_DB" : {
+            "id" : 9,
+            "separator": ":",
+            "instance" : "redis"
+        },
+        "GB_COUNTERS_DB" : {
+            "id" : 10,
+            "separator": ":",
+            "instance" : "redis"
+        },
+        "GB_FLEX_COUNTER_DB" : {
+            "id" : 11,
+            "separator": ":",
+            "instance" : "redis"
+        },
+        "CHASSIS_APP_DB" : {
+            "id" : 12,
+            "separator": "|",
+            "instance" : "redis_chassis"
+        },
+        "APPL_STATE_DB" : {
+            "id" : 14,
+            "separator": ":",
+            "instance" : "redis"
+        }
+    },
+    "VERSION" : "1.0"
+}
diff --git a/platform/dcsg/docker-sonic-dcsg/default_chassis_cfg.json b/platform/dcsg/docker-sonic-dcsg/default_chassis_cfg.json
new file mode 100644
index 000000000..673a4791f
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/default_chassis_cfg.json
@@ -0,0 +1,7 @@
+{
+    "DEVICE_METADATA": {
+        "localhost": {
+            "chassis_db_address" : "10.8.1.200"
+        }
+    }
+}
diff --git a/platform/dcsg/docker-sonic-dcsg/etc/rsyslog.conf b/platform/dcsg/docker-sonic-dcsg/etc/rsyslog.conf
new file mode 100644
index 000000000..ef249229a
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/etc/rsyslog.conf
@@ -0,0 +1,76 @@
+#
+#  /etc/rsyslog.conf    Configuration file for rsyslog.
+#
+#                       For more information see
+#                       /usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
+
+
+#################
+#### MODULES ####
+#################
+
+$ModLoad imuxsock # provides support for local system logging
+
+#
+# Set a rate limit on messages from the container
+#
+$SystemLogRateLimitInterval 300
+$SystemLogRateLimitBurst 20000
+
+#$ModLoad imklog  # provides kernel logging support
+#$ModLoad immark  # provides --MARK-- message capability
+
+# provides UDP syslog reception
+#$ModLoad imudp
+#$UDPServerRun 514
+
+# provides TCP syslog reception
+#$ModLoad imtcp
+#$InputTCPServerRun 514
+
+
+###########################
+#### GLOBAL DIRECTIVES ####
+###########################
+
+# Set remote syslog server
+template (name="ForwardFormatInContainer" type="string" string="<%PRI%>%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg%")
+*.* action(type="omfwd" target="127.0.0.1" port="514" protocol="udp" Template="ForwardFormatInContainer")
+
+#
+# Use traditional timestamp format.
+# To enable high precision timestamps, comment out the following line.
+#
+#$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
+
+# Define a custom template
+$template SONiCFileFormat,"%TIMESTAMP%.%timestamp:::date-subseconds% %HOSTNAME% %syslogseverity-text:::uppercase% %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"
+$ActionFileDefaultTemplate SONiCFileFormat
+
+#
+# Set the default permissions for all log files.
+#
+$FileOwner root
+$FileGroup adm
+$FileCreateMode 0640
+$DirCreateMode 0755
+$Umask 0022
+
+#
+# Where to place spool and state files
+#
+$WorkDirectory /var/spool/rsyslog
+
+#
+# Include all config files in /etc/rsyslog.d/
+#
+$IncludeConfig /etc/rsyslog.d/*.conf
+
+#
+# Suppress duplicate messages and report "message repeated n times"
+#
+$RepeatedMsgReduction on
+
+###############
+#### RULES ####
+###############
diff --git a/platform/dcsg/docker-sonic-dcsg/frr/zebra.conf b/platform/dcsg/docker-sonic-dcsg/frr/zebra.conf
new file mode 100644
index 000000000..695d339cd
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/frr/zebra.conf
@@ -0,0 +1,5 @@
+no fpm use-next-hop-groups
+
+fpm address 127.0.0.1
+zebra nexthop-group keep 1
+
diff --git a/platform/dcsg/docker-sonic-dcsg/hostname.j2 b/platform/dcsg/docker-sonic-dcsg/hostname.j2
new file mode 100644
index 000000000..91d7cbaae
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/hostname.j2
@@ -0,0 +1,3 @@
+{% if DEVICE_METADATA.localhost.chassis_db_address %}
+{{ DEVICE_METADATA.localhost.chassis_db_address }} redis_chassis.server
+{% endif %}
diff --git a/platform/dcsg/docker-sonic-dcsg/hwsku.json b/platform/dcsg/docker-sonic-dcsg/hwsku.json
new file mode 100644
index 000000000..ed121868c
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/hwsku.json
@@ -0,0 +1,100 @@
+{
+    "interfaces": {
+        "Ethernet0": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet4": {
+            "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet8": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet12": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet16": {
+            "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet20": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet24": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet28": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet32": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet36": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet40": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet44": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet48": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet52": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet56": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet60": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet64": {
+            "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet68": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet72": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet76": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet80": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet84": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet88": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet92": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet96": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet100": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet104": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet108": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet112": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet116": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet120": {
+             "default_brkout_mode": "1x100G[40G]"
+        },
+        "Ethernet124": {
+             "default_brkout_mode": "1x100G[40G]"
+        }
+    }
+}
diff --git a/platform/dcsg/docker-sonic-dcsg/init_cfg.json.j2 b/platform/dcsg/docker-sonic-dcsg/init_cfg.json.j2
new file mode 100644
index 000000000..6f1eb65aa
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/init_cfg.json.j2
@@ -0,0 +1,21 @@
+{
+    "DEVICE_METADATA": {
+        "localhost": {
+            "mac": "{{ system_mac }}",
+            "switch_type": "{{ switch_type }}",
+            "buffer_model": "traditional"
+        }
+    },
+{% if switch_type != "dpu" %}
+{% set features = ({"swss": "enabled", "bgp": "enabled", "teamd": "enabled", "nat": "enabled", "database": "enabled", "lldp": "enabled", "dhcp_relay": "enabled", "macsec": "enabled"}) %}
+{% else %}
+{% set features = ({"swss": "enabled", "bgp": "enabled", "teamd": "disabled", "nat": "disabled", "database": "enabled", "lldp": "enabled", "dhcp_relay": "disabled", "macsec": "disabled"}) %}
+{% endif %}
+    "FEATURE": {
+{% for feature, state in features.items() %}
+        "{{ feature }}": {
+            "state": "{{ state }}"
+        }{% if not loop.last %},{% endif %}
+{% endfor %}
+    }
+}
diff --git a/platform/dcsg/docker-sonic-dcsg/orchagent.sh b/platform/dcsg/docker-sonic-dcsg/orchagent.sh
new file mode 100755
index 000000000..6ecd04210
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/orchagent.sh
@@ -0,0 +1,58 @@
+#!/usr/bin/env bash
+
+#This is required since we have platform based checks in orchagent
+
+if [ "$HWSKU" == "Mellanox-SN2700" ]; then
+    export platform="mellanox"
+else
+    export platform=dcsg
+fi
+
+# Force orchagent to run with the given ASIC.
+if [ "$ASIC_TYPE" == "broadcom-dnx" ]; then
+    export platform="broadcom"
+    export sub_platform="broadcom-dnx"
+fi
+
+# Allow test to override PfcDlrInitEnable for DCSG switch so that
+# we can test PfcWdAclHandler, instead of PfcWdDlrHandler.
+if [ "$PFC_DLR_INIT_ENABLE" == "1" ]; then
+    export pfcDlrInitEnable="1"
+elif [ "$PFC_DLR_INIT_ENABLE" == "0" ]; then
+    export pfcDlrInitEnable="0"
+fi
+
+SWSS_VARS_FILE=/usr/share/sonic/templates/swss_vars.j2
+
+# Retrieve SWSS vars from sonic-cfggen
+SWSS_VARS=$(sonic-cfggen -d -y /etc/sonic/sonic_version.yml -t $SWSS_VARS_FILE) || exit 1
+
+MAC_ADDRESS=$(echo $SWSS_VARS | jq -r '.mac')
+if [ "$MAC_ADDRESS" == "None" ] || [ -z "$MAC_ADDRESS" ]; then
+    MAC_ADDRESS=$(ip link show eth0 | grep ether | awk '{print $2}')
+    logger "Mac address not found in Device Metadata, Falling back to eth0"
+fi
+
+# Create a folder for SwSS record files
+mkdir -p /var/log/swss
+ORCHAGENT_ARGS="-d /var/log/swss "
+
+# Set orchagent pop batch size to 8192
+ORCHAGENT_ARGS+="-b 8192 "
+
+# Set synchronous mode if it is enabled in CONFIG_DB
+SYNC_MODE=$(echo $SWSS_VARS | jq -r '.synchronous_mode')
+if [ "$SYNC_MODE" == "enable" ]; then
+    ORCHAGENT_ARGS+="-s "
+fi
+
+# Enable ring buffer
+ORCHDAEMON_RING_ENABLED=`sonic-db-cli CONFIG_DB hget "DEVICE_METADATA|localhost" "ring_thread_enabled"`
+if [[ x"${ORCHDAEMON_RING_ENABLED}" == x"true" ]]; then
+    ORCHAGENT_ARGS+="-R "
+fi
+
+# Set mac address
+ORCHAGENT_ARGS+="-m $MAC_ADDRESS"
+
+exec /usr/bin/orchagent ${ORCHAGENT_ARGS}
diff --git a/platform/dcsg/docker-sonic-dcsg/platform-dpu-2p.json b/platform/dcsg/docker-sonic-dcsg/platform-dpu-2p.json
new file mode 100644
index 000000000..718582b1a
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/platform-dpu-2p.json
@@ -0,0 +1,23 @@
+{
+    "interfaces": {
+        "Ethernet0": {
+            "index": "1,1,1,1",
+            "lanes": "0,1,2,3",
+            "breakout_modes": {
+                "1x100G": ["etp1"],
+                "1x100G[50G,40G,25G,10G]": ["etp1"],
+                "2x50G[25G,10G]": ["etp1a", "etp1b"],
+                "4x10G[25G]": ["etp1a", "etp1b", "etp1c", "etp1d"]
+            }
+        },
+        "Ethernet4": {
+            "index": "2,2,2,2",
+            "lanes": "4,5,6,7",
+            "breakout_modes": {
+                "1x100G": ["etp2"],
+                "1x100G[50G,40G,25G,10G]": ["etp2"],
+                "2x50G[25G,10G]": ["etp2a", "etp2b"]
+            }
+        }
+    }
+}
diff --git a/platform/dcsg/docker-sonic-dcsg/platform.json b/platform/dcsg/docker-sonic-dcsg/platform.json
new file mode 100644
index 000000000..1d14ff3ca
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/platform.json
@@ -0,0 +1,352 @@
+{
+    "interfaces": {
+        "Ethernet0": {
+            "index": "0,0,0,0",
+            "lanes": "25,26,27,28",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/0"],
+                "2x50G": ["fortyGigE0/0", "fortyGigE0/2"],
+                "4x25G[10G]": ["fortyGigE0/0", "fortyGigE0/1", "fortyGigE0/2", "fortyGigE0/3"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/0", "fortyGigE0/1", "fortyGigE0/2"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/0", "fortyGigE0/2", "fortyGigE0/3"]
+            }
+        },
+       "Ethernet4": {
+            "index": "1,1,1,1",
+            "lanes": "29,30,31,32",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/4"],
+                "2x50G": ["fortyGigE0/4", "fortyGigE0/6"],
+                "4x25G[10G]": ["fortyGigE0/4", "fortyGigE0/5", "fortyGigE0/6", "fortyGigE0/7"]
+            }
+        },
+        "Ethernet8": {
+            "index": "2,2,2,2",
+            "lanes": "33,34,35,36",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/8"],
+                "2x50G": ["fortyGigE0/8", "fortyGigE0/10"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/8", "fortyGigE0/9", "fortyGigE0/10"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/8", "fortyGigE0/10", "fortyGigE0/11"]
+            }
+        },
+        "Ethernet12": {
+            "index": "3,3,3,3",
+            "lanes": "37,38,39,40",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/12"],
+                "2x50G": ["fortyGigE0/12", "fortyGigE0/14"],
+                "4x25G[10G]": ["fortyGigE0/12", "fortyGigE0/13", "fortyGigE0/14", "fortyGigE0/15"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/12", "fortyGigE0/13", "fortyGigE0/14"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/12", "fortyGigE0/14", "fortyGigE0/15"]
+            }
+        },
+        "Ethernet16": {
+            "index": "4,4,4,4",
+            "lanes": "45,46,47,48",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/16"],
+                "2x50G": ["fortyGigE0/16", "fortyGigE0/18"],
+                "4x25G[10G]": ["fortyGigE0/16", "fortyGigE0/17", "fortyGigE0/18", "fortyGigE0/19"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/16", "fortyGigE0/17", "fortyGigE0/18"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/16", "fortyGigE0/18", "fortyGigE0/19"]
+            }
+        },
+        "Ethernet20": {
+            "index": "5,5,5,5",
+            "lanes": "41,42,43,44",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/20"],
+                "2x50G": ["fortyGigE0/20", "fortyGigE0/22"],
+                "4x25G[10G]": ["fortyGigE0/20", "fortyGigE0/21", "fortyGigE0/22", "fortyGigE0/23"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/20", "fortyGigE0/21", "fortyGigE0/22"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/20", "fortyGigE0/22", "fortyGigE0/23"]
+            }
+        },
+        "Ethernet24": {
+            "index": "6,6,6,6",
+            "lanes": "1,2,3,4",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/24"],
+                "4x25G[10G]": ["fortyGigE0/24", "fortyGigE0/25", "fortyGigE0/26", "fortyGigE0/27"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/24", "fortyGigE0/25", "fortyGigE0/26"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/24", "fortyGigE0/26", "fortyGigE0/27"]
+            }
+        },
+        "Ethernet28": {
+            "index": "7,7,7,7",
+            "lanes": "5,6,7,8",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/28"],
+                "2x50G": ["fortyGigE0/28", "fortyGigE0/30"],
+                "4x25G[10G]": ["fortyGigE0/28", "fortyGigE0/29", "fortyGigE0/30", "fortyGigE0/31"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/28", "fortyGigE0/29", "fortyGigE0/30"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/28", "fortyGigE0/30", "fortyGigE0/31"]
+            }
+        },
+        "Ethernet32": {
+            "index": "8,8,8,8",
+            "lanes": "13,14,15,16",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/32"],
+                "2x50G": ["fortyGigE0/32", "fortyGigE0/34"],
+                "4x25G[10G]": ["fortyGigE0/32", "fortyGigE0/33", "fortyGigE0/34", "fortyGigE0/35"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/32", "fortyGigE0/33", "fortyGigE0/34"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/32", "fortyGigE0/34", "fortyGigE0/35"]
+            }
+        },
+        "Ethernet36": {
+            "index": "9,9,9,9",
+            "lanes": "9,10,11,12",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/36"],
+                "2x50G": ["fortyGigE0/36", "fortyGigE0/38"],
+                "4x25G[10G]": ["fortyGigE0/36", "fortyGigE0/37", "fortyGigE0/38", "fortyGigE0/39"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/36", "fortyGigE0/37", "fortyGigE0/38"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/36", "fortyGigE0/38", "fortyGigE0/39"]
+            }
+        },
+        "Ethernet40": {
+            "index": "10,10,10,10",
+            "lanes": "17,18,19,20",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/40"],
+                "2x50G": ["fortyGigE0/40", "fortyGigE0/42"],
+                "4x25G[10G]": ["fortyGigE0/40", "fortyGigE0/41", "fortyGigE0/42", "fortyGigE0/43"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/40", "fortyGigE0/41", "fortyGigE0/42"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/40", "fortyGigE0/42", "fortyGigE0/43"]
+            }
+        },
+        "Ethernet44": {
+            "index": "11,11,11,11",
+            "lanes": "21,22,23,24",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/44"],
+                "2x50G": ["fortyGigE0/44", "fortyGigE0/46"],
+                "4x25G[10G]": ["fortyGigE0/44", "fortyGigE0/45", "fortyGigE0/46", "fortyGigE0/47"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/44", "fortyGigE0/45", "fortyGigE0/46"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/44", "fortyGigE0/46", "fortyGigE0/47"]
+            }
+        },
+        "Ethernet48": {
+            "index": "12,12,12,12",
+            "lanes": "53,54,55,56",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/48"],
+                "2x50G": ["fortyGigE0/48", "fortyGigE0/50"],
+                "4x25G[10G]": ["fortyGigE0/48", "fortyGigE0/49", "fortyGigE0/50", "fortyGigE0/51"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/48", "fortyGigE0/49", "fortyGigE0/50"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/48", "fortyGigE0/50", "fortyGigE0/51"]
+            }
+        },
+        "Ethernet52": {
+            "index": "13,13,13,13",
+            "lanes": "49,50,51,52",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/52"],
+                "2x50G": ["fortyGigE0/52", "fortyGigE0/54"],
+                "4x25G[10G]": ["fortyGigE0/52", "fortyGigE0/53", "fortyGigE0/54", "fortyGigE0/55"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/52", "fortyGigE0/53", "fortyGigE0/54"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/52", "fortyGigE0/54", "fortyGigE0/55"]
+            }
+        },
+        "Ethernet56": {
+            "index": "14,14,14,14",
+            "lanes": "57,58,59,60",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/56"],
+                "2x50G": ["fortyGigE0/56", "fortyGigE0/58"],
+                "4x25G[10G]": ["fortyGigE0/56", "fortyGigE0/57", "fortyGigE0/58", "fortyGigE0/59"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/56", "fortyGigE0/57", "fortyGigE0/58"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/56", "fortyGigE0/58", "fortyGigE0/59"]
+            }
+        },
+        "Ethernet60": {
+            "index": "15,15,15,15",
+            "lanes": "61,62,63,64",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/60"],
+                "2x50G": ["fortyGigE0/60", "fortyGigE0/62"],
+                "4x25G[10G]": ["fortyGigE0/60", "fortyGigE0/61", "fortyGigE0/62", "fortyGigE0/63"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/60", "fortyGigE0/61", "fortyGigE0/62"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/60", "fortyGigE0/62", "fortyGigE0/63"]
+            }
+        },
+        "Ethernet64": {
+            "index": "16,16,16,16",
+            "lanes": "69,70,71,72",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/64"],
+                "2x50G": ["fortyGigE0/64", "fortyGigE0/65"],
+                "4x25G[10G]": ["fortyGigE0/64", "fortyGigE0/65", "fortyGigE0/66", "fortyGigE0/67"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/64", "fortyGigE0/65", "fortyGigE0/66"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/64", "fortyGigE0/66", "fortyGigE0/67"]
+            }
+        },
+        "Ethernet68": {
+            "index": "17,17,17,17",
+            "lanes": "65,66,67,68",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/68"],
+                "2x50G": ["fortyGigE0/68", "fortyGigE0/70"],
+                "4x25G[10G]": ["fortyGigE0/68", "fortyGigE0/69", "fortyGigE0/70", "fortyGigE0/71"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/68", "fortyGigE0/69", "fortyGigE0/70"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/68", "fortyGigE0/70", "fortyGigE0/71"]
+            }
+        },
+        "Ethernet72": {
+            "index": "18,18,18,18",
+            "lanes": "73,74,75,76",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/72"],
+                "2x50G": ["fortyGigE0/72", "fortyGigE0/74"],
+                "4x25G[10G]": ["fortyGigE0/72", "fortyGigE0/73", "fortyGigE0/74", "fortyGigE0/75"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/72", "fortyGigE0/73", "fortyGigE0/74"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/72", "fortyGigE0/74", "fortyGigE0/75"]
+            }
+        },
+        "Ethernet76": {
+            "index": "19,19,19,19",
+            "lanes": "77,78,79,80",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/76"],
+                "2x50G": ["fortyGigE0/76", "fortyGigE0/78"],
+                "4x25G[10G]": ["fortyGigE0/76", "fortyGigE0/77", "fortyGigE0/78", "fortyGigE0/79"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/76", "fortyGigE0/77", "fortyGigE0/78"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/76", "fortyGigE0/78", "fortyGigE0/79"]
+            }
+        },
+        "Ethernet80": {
+            "index": "20,20,20,20",
+            "lanes": "109,110,111,112",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/80"],
+                "2x50G": ["fortyGigE0/80", "fortyGigE0/82"],
+                "4x25G[10G]": ["fortyGigE0/80", "fortyGigE0/81", "fortyGigE0/82", "fortyGigE0/83"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/80", "fortyGigE0/81", "fortyGigE0/82"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/80", "fortyGigE0/82", "fortyGigE0/83"]
+            }
+        },
+        "Ethernet84": {
+            "index": "21,21,21,21",
+            "lanes": "105,106,107,108",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/84"],
+                "2x50G": ["fortyGigE0/84", "fortyGigE0/86"],
+                "4x25G[10G]": ["fortyGigE0/84", "fortyGigE0/85", "fortyGigE0/86", "fortyGigE0/87"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/84", "fortyGigE0/85", "fortyGigE0/86"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/84", "fortyGigE0/86", "fortyGigE0/87"]
+            }
+        },
+        "Ethernet88": {
+            "index": "22,22,22,22",
+            "lanes": "113,114,115,116",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/88"],
+                "2x50G": ["fortyGigE0/88", "fortyGigE0/90"],
+                "4x25G[10G]": ["fortyGigE0/88", "fortyGigE0/89", "fortyGigE0/90", "fortyGigE0/91"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/88", "fortyGigE0/89", "fortyGigE0/90"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/88", "fortyGigE0/90", "fortyGigE0/91"]
+            }
+        },
+        "Ethernet92": {
+            "index": "23,23,23,23",
+            "lanes": "117,118,119,120",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/92"],
+                "2x50G": ["fortyGigE0/92", "fortyGigE0/94"],
+                "4x25G[10G]": ["fortyGigE0/92", "fortyGigE0/93", "fortyGigE0/94", "fortyGigE0/95"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/92", "fortyGigE0/93", "fortyGigE0/94"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/92", "fortyGigE0/94", "fortyGigE0/95"]
+            }
+        },
+        "Ethernet96": {
+            "index": "24,24,24,24",
+            "lanes": "125,126,127,128",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/96"],
+                "2x50G": ["fortyGigE0/96", "fortyGigE0/98"],
+                "4x25G[10G]": ["fortyGigE0/96", "fortyGigE0/97", "fortyGigE0/98", "fortyGigE0/99"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/96", "fortyGigE0/97", "fortyGigE0/98"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/96", "fortyGigE0/98", "fortyGigE0/99"]
+            }
+        },
+        "Ethernet100": {
+            "index": "25,25,25,25",
+            "lanes": "121,122,123,124",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/100"],
+                "2x50G": ["fortyGigE0/100", "fortyGigE0/102"],
+                "4x25G[10G]": ["fortyGigE0/100", "fortyGigE0/101", "fortyGigE0/102", "fortyGigE0/103"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/100", "fortyGigE0/101", "fortyGigE0/102"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/100", "fortyGigE0/102", "fortyGigE0/103"]
+            }
+        },
+        "Ethernet104": {
+            "index": "26,26,26,26",
+            "lanes": "81,82,83,84",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/104"],
+                "2x50G": ["fortyGigE0/104", "fortyGigE0/106"],
+                "4x25G[10G]": ["fortyGigE0/104", "fortyGigE0/105", "fortyGigE0/106", "fortyGigE0/107"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/104", "fortyGigE0/105", "fortyGigE0/106"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/104", "fortyGigE0/106", "fortyGigE0/107"]
+            }
+        },
+        "Ethernet108": {
+            "index": "27,27,27,27",
+            "lanes": "85,86,87,88",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/108"],
+                "2x50G": ["fortyGigE0/108", "fortyGigE0/110"],
+                "4x25G[10G]": ["fortyGigE0/108", "fortyGigE0/109", "fortyGigE0/110", "fortyGigE0/111"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/108", "fortyGigE0/109", "fortyGigE0/110"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/108", "fortyGigE0/110", "fortyGigE0/111"]
+            }
+        },
+        "Ethernet112": {
+            "index": "28,28,28,28",
+            "lanes": "93,94,95,96",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/112"],
+                "2x50G": ["fortyGigE0/112", "fortyGigE0/114"],
+                "4x25G[10G]": ["fortyGigE0/112", "fortyGigE0/113", "fortyGigE0/114", "fortyGigE0/115"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/112", "fortyGigE0/113", "fortyGigE0/114"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/112", "fortyGigE0/114", "fortyGigE0/115"]
+            }
+        },
+        "Ethernet116": {
+            "index": "29,29,29,29",
+            "lanes": "89,90,91,92",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/116"],
+                "2x50G": ["fortyGigE0/116", "fortyGigE0/118"],
+                "4x25G[10G]": ["fortyGigE0/116", "fortyGigE0/117", "fortyGigE0/118", "fortyGigE0/119"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/116", "fortyGigE0/117", "fortyGigE0/118"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/116", "fortyGigE0/118", "fortyGigE0/119"]
+            }
+        },
+        "Ethernet120": {
+            "index": "30,30,30,30",
+            "lanes": "101,102,103,104",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/120"],
+                "2x50G": ["fortyGigE0/120", "fortyGigE0/122"],
+                "4x25G[10G]": ["fortyGigE0/120", "fortyGigE0/121", "fortyGigE0/122", "fortyGigE0/123"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/120", "fortyGigE0/121", "fortyGigE0/122"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/120", "fortyGigE0/122", "fortyGigE0/123"]
+            }
+        },
+        "Ethernet124": {
+            "index": "31,31,31,31",
+            "lanes": "97,98,99,100",
+            "breakout_modes": {
+                "1x100G[40G]": ["fortyGigE0/124"],
+                "2x50G": ["fortyGigE0/124", "fortyGigE0/126"],
+                "4x25G[10G]": ["fortyGigE0/124", "fortyGigE0/125", "fortyGigE0/126", "fortyGigE0/127"],
+                "2x25G(2)+1x50G(2)": ["fortyGigE0/124", "fortyGigE0/125", "fortyGigE0/126"],
+                "1x50G(2)+2x25G(2)": ["fortyGigE0/124", "fortyGigE0/126", "fortyGigE0/127"]
+            }
+        }
+    }
+}
diff --git a/platform/dcsg/docker-sonic-dcsg/port_breakout_config_db.json b/platform/dcsg/docker-sonic-dcsg/port_breakout_config_db.json
new file mode 100644
index 000000000..16b40e14f
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/port_breakout_config_db.json
@@ -0,0 +1,61 @@
+{
+    "ACL_TABLE": {
+        "DPB_ACL_TBL_1": {
+            "policy_desc": "ACL table to test DPB/ACL dependency",
+            "ports": [
+                "Ethernet0",
+                "Ethernet1",
+                "Ethernet2",
+                "Ethernet3",
+                "Ethernet4",
+                "Ethernet5"
+            ],
+            "type": "L3"
+        },
+        "DPB_ACL_TBL_2": {
+            "policy_desc": "ACL table to test DPB/ACL dependency",
+            "ports": [
+                "Ethernet0",
+                "Ethernet1",
+                "Ethernet2",
+                "Ethernet3",
+                "Ethernet6",
+                "Ethernet7"
+            ],
+            "type": "L3"
+        }
+    },
+    "INTERFACE": {
+        "Ethernet8": {},
+        "Ethernet8|10.0.0.8/31": {
+            "family": "IPv4",
+            "scope": "global"
+        }
+    },
+    "VLAN_MEMBER": {
+        "Vlan100|Ethernet0": {
+            "tagging_mode": "untagged"
+        },
+        "Vlan100|Ethernet1": {
+            "tagging_mode": "untagged"
+        },
+        "Vlan100|Ethernet2": {
+            "tagging_mode": "untagged"
+        },
+        "Vlan100|Ethernet3": {
+            "tagging_mode": "untagged"
+        },
+        "Vlan100|Ethernet4": {
+            "tagging_mode": "untagged"
+        },
+        "Vlan100|Ethernet5": {
+            "tagging_mode": "untagged"
+        },
+        "Vlan101|Ethernet6": {
+            "tagging_mode": "tagged"
+        },
+        "Vlan101|Ethernet7": {
+            "tagging_mode": "tagged"
+        }
+    }
+}
diff --git a/platform/dcsg/docker-sonic-dcsg/sonic-dev.gpg.key b/platform/dcsg/docker-sonic-dcsg/sonic-dev.gpg.key
new file mode 100644
index 000000000..fb9a37901
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/sonic-dev.gpg.key
@@ -0,0 +1,30 @@
+-----BEGIN PGP PUBLIC KEY BLOCK-----
+Version: GnuPG v1
+
+mQENBFQ1bTIBCAC7oGfkv/ck0XsLuG8cdcSB2ISqxFAcBvH9BitEtxmpW2uhykKk
+xY4rVD/4Uys1s3PF1/64QfPR+hYcewueOwz0ZAcLyFXXk4McICXaPq3NrLiWYKKX
+UZLnrPzcrGZoW/kHDDp4OmBiDmT1PGvZlpuimwkMCusUzIr7Cbbp2dIy8MERL5tA
+LcgLu3KL6clJ+aTW2jgepI1D7sTepOeGd7eRSb5njKg2M7k/93v/7MipZxiVtyXH
+B74YiK6jSbst5JpuYsLa/Dqryvx7Xq3n53oif892pv3euTduo1fYw8Hgh/OOYdeT
+c9WCj03KA1jCSFURjdrug0kR8BPlfjqtRLXFABEBAAG0JE1TIE9wZW4gVGVjaCA8
+aW50ZXJvcEBtaWNyb3NvZnQuY29tPokBOAQTAQIAIgUCVDVtMgIbAwYLCQgHAwIG
+FQgCCQoLBBYCAwECHgECF4AACgkQsCxG30F6CJO1uAf/cmL68bM8YgF/61hkaY56
+LqrppUTJH/w4fKq47Pf6KfgSLvxfNU6soi2KHYRjIvTRx3tV4vUM5n2plaQg2s8V
+/Epg4FeIRTk75YwiHAzLhLnp5cdUaTvC4j4mwxoB6j9Ty+fXJwQ0MvpDhIZb9vM4
+GXw/fEQHCT4f3gx4nReeqE+FB2wVHleX9+Lpodu98JyJTKJRBRHYLqy6S+/lyp2W
+aBlsI1LOqBcx1uRK24U7duIpbYwIyrx0cafSruqR2GjVdu+imkhHyUn52VbzYhq1
+af0rqYiZ1VOamVOG0By8+hVyNa1MLc1K2uWGs0o5fDe9F5/swbvLHVXI+M50Vs+m
+J7kBDQRUNW0yAQgAu7DkTVj0ZQC4F7bFivAwrdby8gCakTXOl1kcK622hjRJ8nam
+aZeW+eADfLRsTmdUmXgZu1YWS5Gn2ZVngC8SGPUBT071+oRETCz4uNB7IimB9QfP
+++orI6o2vmnVVsq5wWCbEdNU+TCVv1zjrYev5lwckkKpjHt6o8MNoX2DFuQymSyR
+eZKaqhdKmcji4Ke7OIYqwgPjch3wxzE1b5gNOR/iwxWyjjOffZPLr/VhIfIJRs86
+dSXrwjHtEh810SKDLghHM0VAdY34nyC5ZZ61yhts5HtQDFK+9mNpH1mkc4gDBlgG
+266pVvknumK6lPNm/osF/cpjWmEw24ypcQIvOQARAQABiQEfBBgBAgAJBQJUNW0y
+AhsMAAoJELAsRt9BegiTMBUH/0sZ6gZy7mCTSAYT+NSXLFtGC2zNUVL80SWvfgYm
+k9XPVI22MrefZfQ6M01RylyxtWXjRM8UoN8SDKWPpXumzJf831f/7om5zwutaG7b
+tjDPYqRKJSbAIFZu2mN+uLrNQ2SV6XK7FoV0dtcrEX9S7RICb6i19D+70+Oh/qgU
+R04H1jqS29XBzqAlIzdBoA+sYAwbOIJsSL3YyNQcUv3B5+5yR/bo/L8pnUJt6iuL
+nWW+mi7r8gWPHDSrcdYq1TmmlOM7CwZPgWRZzkQPSeZz52Tt7IP47eyGJ09U4PIf
+FtMH1ElL2UgHoA/F9Q88e7LkztaTqE59uXWbIYyuSMJVvRU=
+=sb3d
+-----END PGP PUBLIC KEY BLOCK-----
diff --git a/platform/dcsg/docker-sonic-dcsg/start.sh b/platform/dcsg/docker-sonic-dcsg/start.sh
new file mode 100755
index 000000000..0d3d99cad
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/start.sh
@@ -0,0 +1,187 @@
+#!/bin/bash -e
+
+# Generate configuration
+
+# NOTE: 'PLATFORM' and 'HWSKU' environment variables are set
+# in the Dockerfile so that they persist for the life of the container
+
+ln -sf /usr/share/sonic/device/$PLATFORM /usr/share/sonic/platform
+ln -sf /usr/share/sonic/device/$PLATFORM/$HWSKU /usr/share/sonic/hwsku
+
+SWITCH_TYPE=switch
+PLATFORM_CONF=platform.json
+if [[ $HWSKU == "DPU-2P" ]]; then
+    SWITCH_TYPE=dpu
+    PLATFORM_CONF=platform-dpu-2p.json
+fi
+
+pushd /usr/share/sonic/hwsku
+
+# filter available front panel ports in lanemap.ini
+[ -f lanemap.ini.orig ] || cp lanemap.ini lanemap.ini.orig
+for p in $(ip link show | grep -oE "eth[0-9]+" | grep -v eth0); do
+    grep ^$p: lanemap.ini.orig
+done > lanemap.ini
+
+# filter available sonic front panel ports in port_config.ini
+[ -f port_config.ini.orig ] || cp port_config.ini port_config.ini.orig
+grep ^# port_config.ini.orig > port_config.ini
+for lanes in $(awk -F ':' '{print $2}' lanemap.ini); do
+    grep -E "\s$lanes\s" port_config.ini.orig
+done >> port_config.ini
+
+popd
+
+[ -d /etc/sonic ] || mkdir -p /etc/sonic
+
+# Note: libswsscommon requires a dabase_config file in /var/run/redis/sonic-db/
+# Prepare this file before any dependent application, such as sonic-cfggen
+mkdir -p /var/run/redis/sonic-db
+cp /etc/default/sonic-db/database_config.json /var/run/redis/sonic-db/
+
+SYSTEM_MAC_ADDRESS=$(ip link show eth0 | grep ether | awk '{print $2}')
+sonic-cfggen -t /usr/share/sonic/templates/init_cfg.json.j2 -a "{\"system_mac\": \"$SYSTEM_MAC_ADDRESS\", \"switch_type\": \"$SWITCH_TYPE\"}" > /etc/sonic/init_cfg.json
+
+if [[ -f /usr/share/sonic/virtual_chassis/default_config.json ]]; then
+    sonic-cfggen -j /etc/sonic/init_cfg.json -j /usr/share/sonic/virtual_chassis/default_config.json --print-data > /tmp/init_cfg.json
+    mv /tmp/init_cfg.json /etc/sonic/init_cfg.json
+fi
+
+if [ -f /etc/sonic/config_db.json ]; then
+    sonic-cfggen -j /etc/sonic/init_cfg.json -j /etc/sonic/config_db.json --print-data > /tmp/config_db.json
+    mv /tmp/config_db.json /etc/sonic/config_db.json
+else
+    # generate and merge buffers configuration into config file
+    if [ -f /usr/share/sonic/hwsku/buffers.json.j2 ]; then
+        sonic-cfggen -k $HWSKU -p /usr/share/sonic/device/$PLATFORM/$PLATFORM_CONF -t /usr/share/sonic/hwsku/buffers.json.j2 > /tmp/buffers.json
+        buffers_cmd="-j /tmp/buffers.json"
+    fi
+    if [ -f /usr/share/sonic/hwsku/qos.json.j2 ]; then
+        sonic-cfggen -j /etc/sonic/init_cfg.json -t /usr/share/sonic/hwsku/qos.json.j2 > /tmp/qos.json
+        qos_cmd="-j /tmp/qos.json"
+    fi
+
+    sonic-cfggen -p /usr/share/sonic/device/$PLATFORM/$PLATFORM_CONF -k $HWSKU --print-data > /tmp/ports.json
+    # change admin_status from up to down; Test cases dependent
+    sed -i "s/up/down/g" /tmp/ports.json
+    sonic-cfggen -j /etc/sonic/init_cfg.json $buffers_cmd $qos_cmd -j /tmp/ports.json --print-data > /etc/sonic/config_db.json
+fi
+
+sonic-cfggen -t /usr/share/sonic/templates/copp_cfg.j2 > /etc/sonic/copp_cfg.json
+
+if [ "$HWSKU" == "Mellanox-SN2700" ]; then
+    cp /usr/share/sonic/hwsku/sai_mlnx.profile /usr/share/sonic/hwsku/sai.profile
+elif [ "$HWSKU" == "DPU-2P" ]; then
+    cp /usr/share/sonic/hwsku/sai_dpu_2p.profile /usr/share/sonic/hwsku/sai.profile
+fi
+
+mkdir -p /etc/swss/config.d/
+
+rm -f /var/run/rsyslogd.pid
+
+supervisorctl start rsyslogd
+
+supervisord_cfg="/etc/supervisor/conf.d/supervisord.conf"
+chassisdb_cfg_file="/usr/share/sonic/virtual_chassis/default_config.json"
+chassisdb_cfg_file_default="/etc/default/sonic-db/default_chassis_cfg.json"
+host_template="/usr/share/sonic/templates/hostname.j2"
+db_cfg_file="/var/run/redis/sonic-db/database_config.json"
+db_cfg_file_tmp="/var/run/redis/sonic-db/database_config.json.tmp"
+
+if [ -r "$chassisdb_cfg_file" ]; then
+   echo $(sonic-cfggen -j $chassisdb_cfg_file -t $host_template) >> /etc/hosts
+else
+   chassisdb_cfg_file="$chassisdb_cfg_file_default"
+   echo "10.8.1.200 redis_chassis.server" >> /etc/hosts
+fi
+
+supervisorctl start redis-server
+
+start_chassis_db=`sonic-cfggen -v DEVICE_METADATA.localhost.start_chassis_db -y $chassisdb_cfg_file`
+if [[ "$HOSTNAME" == *"supervisor"* ]] || [ "$start_chassis_db" == "1" ]; then
+   supervisorctl start redis-chassis
+fi
+
+conn_chassis_db=`sonic-cfggen -v DEVICE_METADATA.localhost.connect_to_chassis_db -y $chassisdb_cfg_file`
+if [ "$start_chassis_db" != "1" ] && [ "$conn_chassis_db" != "1" ]; then
+   cp $db_cfg_file $db_cfg_file_tmp
+   update_chassisdb_config -j $db_cfg_file_tmp -d
+   cp $db_cfg_file_tmp $db_cfg_file
+fi
+
+if [ "$conn_chassis_db" == "1" ]; then
+   if [ -f /usr/share/sonic/virtual_chassis/coreportindexmap.ini ]; then
+      cp /usr/share/sonic/virtual_chassis/coreportindexmap.ini /usr/share/sonic/hwsku/
+
+      pushd /usr/share/sonic/hwsku
+
+      # filter available front panel ports in coreportindexmap.ini
+      [ -f coreportindexmap.ini.orig ] || cp coreportindexmap.ini coreportindexmap.ini.orig
+      for p in $(ip link show | grep -oE "eth[0-9]+" | grep -v eth0); do
+          grep ^$p: coreportindexmap.ini.orig
+      done > coreportindexmap.ini
+
+      popd
+   fi
+fi
+
+/usr/bin/configdb-load.sh
+
+if [ "$HWSKU" = "brcm_gearbox_dcsg" ]; then
+    supervisorctl start gbsyncd
+    supervisorctl start gearsyncd
+fi
+
+supervisorctl start syncd
+
+supervisorctl start portsyncd
+
+supervisorctl start orchagent
+
+supervisorctl start coppmgrd
+
+supervisorctl start neighsyncd
+
+supervisorctl start fdbsyncd
+
+supervisorctl start teamsyncd
+
+supervisorctl start fpmsyncd
+
+supervisorctl start teammgrd
+
+supervisorctl start vrfmgrd
+
+supervisorctl start portmgrd
+
+supervisorctl start intfmgrd
+
+supervisorctl start vlanmgrd
+
+supervisorctl start zebra
+
+supervisorctl start mgmtd
+
+supervisorctl start staticd
+
+supervisorctl start buffermgrd
+
+supervisorctl start nbrmgrd
+
+supervisorctl start vxlanmgrd
+
+supervisorctl start sflowmgrd
+
+supervisorctl start natmgrd
+
+supervisorctl start natsyncd
+
+supervisorctl start tunnelmgrd
+
+supervisorctl start fabricmgrd
+
+# Start arp_update when VLAN exists
+VLAN=`sonic-cfggen -d -v 'VLAN.keys() | join(" ") if VLAN'`
+if [ "$VLAN" != "" ]; then
+    supervisorctl start arp_update
+fi
diff --git a/platform/dcsg/docker-sonic-dcsg/supervisord.conf.j2 b/platform/dcsg/docker-sonic-dcsg/supervisord.conf.j2
new file mode 100644
index 000000000..a394d29d4
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/supervisord.conf.j2
@@ -0,0 +1,407 @@
+{% set asan_extra_options = ':print_suppressions=0' %}
+[supervisord]
+logfile_maxbytes=1MB
+logfile_backups=2
+nodaemon=true
+
+[program:start.sh]
+command=/usr/bin/start.sh
+priority=1
+autostart=true
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:rsyslogd]
+command=/usr/sbin/rsyslogd -n
+priority=2
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:redis-server]
+command=/usr/bin/redis-server /etc/redis/redis.conf
+priority=3
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:redis-chassis]
+command=/bin/bash -c "{ [[ -s /var/lib/redis_chassis/dump.rdb ]] || rm -f /var/lib/redis_chassis/dump.rdb; } && mkdir -p /var/lib/redis_chassis && exec /usr/bin/redis-server /etc/redis/redis.conf --bind redis_chassis.server --port 6380 --protected-mode no --unixsocket /var/run/redis/redis_chassis.sock --pidfile /var/run/redis/redis_chassis.pid --dir /var/lib/redis_chassis"
+priority=3
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:syncd]
+command=/usr/bin/syncd_start.sh
+priority=4
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/syncd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:gbsyncd]
+command=/usr/bin/syncd -s -p /usr/share/sonic/hwsku/pai.profile -x /usr/share/sonic/hwsku/context_config.json -g 1
+priority=4
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:gearsyncd]
+command=/usr/bin/gearsyncd -p /usr/share/sonic/hwsku/gearbox_config.json
+startsecs=0
+priority=5
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:portsyncd]
+command=/usr/bin/portsyncd
+priority=5
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/portsyncd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:orchagent]
+command=/usr/bin/orchagent.sh
+priority=6
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/orchagent-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:coppmgrd]
+command=/usr/bin/coppmgrd
+priority=7
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/coppmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:neighsyncd]
+command=/usr/bin/neighsyncd
+priority=8
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/neighsyncd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:teamsyncd]
+command=/usr/bin/teamsyncd
+priority=9
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/teamsyncd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:vlanmgrd]
+command=/usr/bin/vlanmgrd
+priority=10
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/vlanmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:intfmgrd]
+command=/usr/bin/intfmgrd
+priority=11
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/intfmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:portmgrd]
+command=/usr/bin/portmgrd
+priority=12
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/portmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:teammgrd]
+command=/usr/bin/teammgrd
+priority=12
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/teammgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:mgmtd]
+command=/usr/lib/frr/mgmtd -A 127.0.0.1
+priority=13
+autostart=false
+autorestart=false
+stdout_logfile=syslog
+stderr_logfile=syslog
+
+[program:zebra]
+command=/usr/lib/frr/zebra -A 127.0.0.1 -s 90000000 -M dplane_fpm_sonic --asic-offload=notify_on_offload
+priority=13
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:bgpd]
+command=/usr/lib/frr/bgpd -A 127.0.0.1
+priority=14
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:staticd]
+command=/usr/lib/frr/staticd -A 127.0.0.1
+priority=14
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:fpmsyncd]
+command=/usr/bin/fpmsyncd
+priority=15
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/fpmsyncd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:pathd]
+command=/usr/lib/frr/pathd -A 127.0.0.1
+priority=14
+autostart=false
+autorestart=false
+stdout_logfile=syslog
+stderr_logfile=syslog
+
+[program:arp_update]
+command=/usr/bin/arp_update
+priority=16
+autostart=false
+autorestart=unexpected
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:buffermgrd]
+command=/usr/bin/buffermgrd.sh
+priority=17
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/buffermgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:vrfmgrd]
+command=/usr/bin/vrfmgrd
+priority=18
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/vrfmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:restore_neighbors]
+command=/usr/bin/restore_neighbors.py
+priority=19
+autostart=false
+autorestart=false
+startsecs=0
+startretries=0
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+
+[program:nbrmgrd]
+command=/usr/bin/nbrmgrd
+priority=20
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/nbrmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:vxlanmgrd]
+command=/usr/bin/vxlanmgrd
+priority=21
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/vxlanmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:sflowmgrd]
+command=/usr/bin/sflowmgrd
+priority=22
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/sflowmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:natmgrd]
+command=/usr/bin/natmgrd
+priority=23
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/natmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:natsyncd]
+command=/usr/bin/natsyncd
+priority=24
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/natsyncd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:fdbsyncd]
+command=/usr/bin/fdbsyncd
+priority=25
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/fdbsyncd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:tunnelmgrd]
+command=/usr/bin/tunnelmgrd
+priority=26
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/tunnelmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
+
+[program:fabricmgrd]
+command=/usr/bin/fabricmgrd
+priority=27
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+{% if ENABLE_ASAN == "y" %}
+environment=ASAN_OPTIONS="log_path=/var/log/asan/fabricmgrd-asan.log{{ asan_extra_options }}"
+{% endif %}
diff --git a/platform/dcsg/docker-sonic-dcsg/zero_profiles.json b/platform/dcsg/docker-sonic-dcsg/zero_profiles.json
new file mode 100644
index 000000000..7648fec56
--- /dev/null
+++ b/platform/dcsg/docker-sonic-dcsg/zero_profiles.json
@@ -0,0 +1,57 @@
+[
+    {
+        "BUFFER_POOL_TABLE:ingress_zero_pool": {
+            "mode": "static",
+            "type": "ingress",
+            "size": "0"
+        },
+        "OP": "SET"
+    },
+    {
+        "BUFFER_PROFILE_TABLE:ingress_lossy_pg_zero_profile" : {
+            "pool":"ingress_zero_pool",
+            "size":"0",
+            "static_th":"0"
+        },
+        "OP": "SET"
+    },
+    {
+        "BUFFER_PROFILE_TABLE:ingress_lossy_zero_profile" : {
+            "pool":"ingress_lossless_pool",
+            "size":"0",
+            "dynamic_th":"-8"
+        },
+        "OP": "SET"
+    },
+    {
+        "BUFFER_PROFILE_TABLE:ingress_lossless_zero_profile" : {
+            "pool":"ingress_lossless_pool",
+            "size":"0",
+            "dynamic_th":"-8"
+        },
+        "OP": "SET"
+    },
+    {
+        "BUFFER_PROFILE_TABLE:egress_lossy_zero_profile" : {
+            "pool":"egress_lossy_pool",
+            "size":"0",
+            "dynamic_th":"-8"
+        },
+        "OP": "SET"
+    },
+    {
+        "BUFFER_PROFILE_TABLE:egress_lossless_zero_profile" : {
+            "pool":"egress_lossless_pool",
+            "size":"0",
+            "static_th":"0"
+        },
+        "OP": "SET"
+    },
+    {
+        "control_fields" : {
+            "pgs_to_apply_zero_profile":"0",
+            "ingress_zero_profile":"ingress_lossy_pg_zero_profile"
+        },
+        "OP": "SET"
+    }
+]
diff --git a/platform/dcsg/docker-syncd-dcsg.dep b/platform/dcsg/docker-syncd-dcsg.dep
new file mode 100644
index 000000000..d3433dc64
--- /dev/null
+++ b/platform/dcsg/docker-syncd-dcsg.dep
@@ -0,0 +1,11 @@
+#DPKG FRK
+DPATH       := $($(DOCKER_SYNCD_BASE)_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/dcsg/docker-syncd-dcsg.mk platform/dcsg/docker-syncd-dcsg.dep   
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+DEP_FILES   += $(shell git ls-files $(DPATH))
+
+$(DOCKER_SYNCD_BASE)_CACHE_MODE  := GIT_CONTENT_SHA 
+$(DOCKER_SYNCD_BASE)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(DOCKER_SYNCD_BASE)_DEP_FILES   := $(DEP_FILES)
+
+$(eval $(call add_dbg_docker,$(DOCKER_SYNCD_BASE),$(DOCKER_SYNCD_BASE_DBG)))
diff --git a/platform/dcsg/docker-syncd-dcsg.mk b/platform/dcsg/docker-syncd-dcsg.mk
new file mode 100644
index 000000000..6b14db3ca
--- /dev/null
+++ b/platform/dcsg/docker-syncd-dcsg.mk
@@ -0,0 +1,19 @@
+# docker image for dcsg syncd
+
+DOCKER_SYNCD_PLATFORM_CODE = dcsg
+include $(PLATFORM_PATH)/../template/docker-syncd-bookworm.mk
+
+$(DOCKER_SYNCD_BASE)_DEPENDS += $(SYNCD_DCSG) \
+                              $(LIBNL3_DEV) \
+                              $(LIBNL3)
+
+$(DOCKER_SYNCD_BASE)_DBG_DEPENDS += $(SYNCD_DCSG_DBG) \
+                                $(LIBSWSSCOMMON_DBG) \
+                                $(LIBSAIMETADATA_DBG) \
+                                $(LIBSAIREDIS_DBG) \
+                                $(LIBSAIDCSG_DBG)
+
+$(DOCKER_SYNCD_BASE)_VERSION = 1.0.0
+$(DOCKER_SYNCD_BASE)_PACKAGE_NAME = syncd
+
+$(DOCKER_SYNCD_BASE)_RUN_OPT += -v /host/warmboot:/var/warmboot
diff --git a/platform/dcsg/docker-syncd-dcsg/Dockerfile.j2 b/platform/dcsg/docker-syncd-dcsg/Dockerfile.j2
new file mode 100644
index 000000000..218292138
--- /dev/null
+++ b/platform/dcsg/docker-syncd-dcsg/Dockerfile.j2
@@ -0,0 +1,38 @@
+{% from "dockers/dockerfile-macros.j2" import install_debian_packages, install_python_wheels, copy_files %}
+FROM docker-config-engine-bookworm-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}
+
+ARG docker_container_name
+
+## Make apt-get non-interactive
+ENV DEBIAN_FRONTEND=noninteractive
+
+RUN apt-get update
+
+RUN apt-get install -f -y iproute2 libcap2-bin
+
+# For DASH engine
+
+COPY debs/libnl-3-dev_{{ LIBNL3_VERSION_SONIC }}_{{ CONFIGURED_ARCH }}.deb debs/libnl-route-3-dev_{{ LIBNL3_VERSION_SONIC }}_{{ CONFIGURED_ARCH }}.deb debs/
+RUN dpkg -i debs/libnl-3-dev_{{ LIBNL3_VERSION_SONIC }}_{{ CONFIGURED_ARCH }}.deb debs/libnl-route-3-dev_{{ LIBNL3_VERSION_SONIC }}_{{ CONFIGURED_ARCH }}.deb
+
+RUN apt-get install -f -y libabsl20220623 libc-ares2 python3-six libboost-thread1.74.0 libboost-dev libboost-system-dev libboost-thread-dev libboost-filesystem1.74.0 libboost-program-options1.74.0 libboost-thread1.74.0 libnanomsg5 libpcap0.8 libthrift-0.17.0 libboost-dev libboost-filesystem-dev libboost-program-options-dev libgmp-dev libnanomsg-dev libpcap-dev libtool pkg-config libthrift-dev python3-thrift thrift-compiler libboost-iostreams1.74.0 libgc1 cpp libboost-dev libboost-all-dev libboost-graph-dev libboost-iostreams-dev libfl-dev libgc-dev libgmp-dev libbpf-dev tcpdump libelf-dev llvm clang python3-pyroute2 python3-ply python3-scapy python3-setuptools python3-thrift libthrift-0.17.0 libgrpc++1.51 libgrpc29 libprotobuf32 libboost-dev libboost-system-dev libboost-thread-dev libprotoc-dev protobuf-compiler python3-protobuf libgrpc++-dev libgrpc-dev protobuf-compiler-grpc python3-grpcio 
+
+{% if docker_syncd_dcsg_debs.strip() -%}
+# Copy built Debian packages
+{{ copy_files("debs/", docker_syncd_dcsg_debs.split(' '), "/debs/") }}
+
+# Install built Debian packages and implicitly install their dependencies
+{{ install_debian_packages(docker_syncd_dcsg_debs.split(' ')) }}
+{%- endif %}
+
+COPY ["start.sh", "/usr/bin/"]
+
+COPY ["supervisord.conf", "/etc/supervisor/conf.d/"]
+COPY ["files/supervisor-proc-exit-listener", "/usr/bin"]
+COPY ["critical_processes", "/etc/supervisor/"]
+
+## Clean up
+RUN apt-get clean -y; apt-get autoclean -y; apt-get autoremove -y
+RUN rm -rf /debs
+
+ENTRYPOINT ["/usr/local/bin/supervisord"]
diff --git a/platform/dcsg/docker-syncd-dcsg/critical_processes b/platform/dcsg/docker-syncd-dcsg/critical_processes
new file mode 100644
index 000000000..bdd6903c5
--- /dev/null
+++ b/platform/dcsg/docker-syncd-dcsg/critical_processes
@@ -0,0 +1 @@
+program:syncd
diff --git a/platform/dcsg/docker-syncd-dcsg/start.sh b/platform/dcsg/docker-syncd-dcsg/start.sh
new file mode 100755
index 000000000..40178f13e
--- /dev/null
+++ b/platform/dcsg/docker-syncd-dcsg/start.sh
@@ -0,0 +1,14 @@
+#!/usr/bin/env bash
+
+HWSKU_DIR=/usr/share/sonic/hwsku
+
+mkdir -p /etc/sai.d/
+
+# Create/Copy the sai.profile to /etc/sai.d/sai.profile
+if [ -f $HWSKU_DIR/sai.profile.j2 ]; then
+    sonic-cfggen -d -t $HWSKU_DIR/sai.profile.j2 > /etc/sai.d/sai.profile
+else
+    if [ -f $HWSKU_DIR/sai.profile ]; then
+        cp $HWSKU_DIR/sai.profile /etc/sai.d/sai.profile
+    fi
+fi
diff --git a/platform/dcsg/docker-syncd-dcsg/supervisord.conf b/platform/dcsg/docker-syncd-dcsg/supervisord.conf
new file mode 100644
index 000000000..1bcf82989
--- /dev/null
+++ b/platform/dcsg/docker-syncd-dcsg/supervisord.conf
@@ -0,0 +1,56 @@
+[supervisord]
+logfile_maxbytes=1MB
+logfile_backups=2
+nodaemon=true
+
+[eventlistener:dependent-startup]
+command=python3 -m supervisord_dependent_startup
+autostart=true
+autorestart=unexpected
+startretries=0
+exitcodes=0,3
+events=PROCESS_STATE
+buffer_size=1024
+
+[eventlistener:supervisor-proc-exit-listener]
+command=/usr/bin/supervisor-proc-exit-listener --container-name syncd
+events=PROCESS_STATE_EXITED,PROCESS_STATE_RUNNING
+autostart=true
+autorestart=unexpected
+buffer_size=1024
+
+[program:rsyslogd]
+command=/usr/sbin/rsyslogd -n -iNONE
+priority=1
+autostart=false
+autorestart=unexpected
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+dependent_startup=true
+
+[program:start]
+command=/usr/bin/start.sh
+priority=2
+autostart=false
+autorestart=false
+startsecs=0
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+dependent_startup=true
+dependent_startup_wait_for=rsyslogd:running
+
+[program:syncd]
+command=/usr/bin/syncd_start.sh
+priority=3
+autostart=false
+autorestart=false
+stdout_logfile=NONE
+stdout_syslog=true
+stderr_logfile=NONE
+stderr_syslog=true
+dependent_startup=true
+dependent_startup_wait_for=start:exited
diff --git a/platform/dcsg/gbsyncd-dcsg.mk b/platform/dcsg/gbsyncd-dcsg.mk
new file mode 100644
index 000000000..2c0f2f60d
--- /dev/null
+++ b/platform/dcsg/gbsyncd-dcsg.mk
@@ -0,0 +1,14 @@
+# docker image for dcsg gbsyncd
+
+DOCKER_GBSYNCD_PLATFORM_CODE = dcsg
+include $(PLATFORM_PATH)/../template/docker-gbsyncd-base.mk
+
+$(DOCKER_GBSYNCD_BASE)_DEPENDS += $(SYNCD_DCSG)
+
+$(DOCKER_GBSYNCD_BASE)_DBG_DEPENDS += $(SYNCD_DCSG_DBG) \
+                                $(LIBSWSSCOMMON_DBG) \
+                                $(LIBSAIMETADATA_DBG) \
+                                $(LIBSAIREDIS_DBG) \
+                                $(LIBSAIDCSG_DBG)
+
+$(DOCKER_GBSYNCD_BASE)_RUN_OPT += -v /host/warmboot:/var/warmboot
diff --git a/platform/dcsg/kvm-image.dep b/platform/dcsg/kvm-image.dep
new file mode 100644
index 000000000..05c083a51
--- /dev/null
+++ b/platform/dcsg/kvm-image.dep
@@ -0,0 +1,2 @@
+#DPKG FRK
+$(SONIC_KVM_IMAGE)_CACHE_MODE  := none
diff --git a/platform/dcsg/kvm-image.mk b/platform/dcsg/kvm-image.mk
new file mode 100644
index 000000000..26eb3b433
--- /dev/null
+++ b/platform/dcsg/kvm-image.mk
@@ -0,0 +1,15 @@
+# sonic kvm image
+
+SONIC_KVM_IMAGE = sonic-dcsg.img.gz
+$(SONIC_KVM_IMAGE)_INSTALLS += $(SYSTEMD_SONIC_GENERATOR)
+$(SONIC_KVM_IMAGE)_LAZY_INSTALLS += $(DCSG_PLATFORM_MODULE)
+$(SONIC_KVM_IMAGE)_MACHINE = dcsg
+$(SONIC_KVM_IMAGE)_IMAGE_TYPE = kvm
+ifeq ($(INSTALL_DEBUG_TOOLS),y)
+$(SONIC_KVM_IMAGE)_DOCKERS += $(SONIC_INSTALL_DOCKER_DBG_IMAGES)
+$(SONIC_KVM_IMAGE)_DOCKERS += $(filter-out $(patsubst %-$(DBG_IMAGE_MARK).gz,%.gz, $(SONIC_INSTALL_DOCKER_DBG_IMAGES)), $(SONIC_INSTALL_DOCKER_IMAGES))
+else
+$(SONIC_KVM_IMAGE)_DOCKERS = $(SONIC_INSTALL_DOCKER_IMAGES)
+endif
+$(SONIC_KVM_IMAGE)_FILES = $(ONIE_RECOVERY_IMAGE) $(ONIE_RECOVERY_KVM_4ASIC_IMAGE) $(ONIE_RECOVERY_KVM_6ASIC_IMAGE)
+SONIC_INSTALLERS += $(SONIC_KVM_IMAGE)
diff --git a/platform/dcsg/libsaithrift-dev.dep b/platform/dcsg/libsaithrift-dev.dep
new file mode 100644
index 000000000..ed69b297e
--- /dev/null
+++ b/platform/dcsg/libsaithrift-dev.dep
@@ -0,0 +1,13 @@
+#DPKG FRK
+SPATH       := $($(LIBSAITHRIFT_DEV)_SRC_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/broadcom/libsaithrift-dev.mk platform/broadcom/libsaithrift-dev.dep
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+SMDEP_PATHS := $(SPATH)  $(SPATH)/test/ptf  $(SPATH)/test/saithrift/ctypesgen
+$(foreach path, $(SMDEP_PATHS), $(eval $(path) :=$(filter-out $(SMDEP_PATHS),$(addprefix $(path)/, $(shell cd $(path) &&  git ls-files | grep -Ev " " )))))
+
+$(LIBSAITHRIFT_DEV)_CACHE_MODE  := GIT_CONTENT_SHA
+$(LIBSAITHRIFT_DEV)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(LIBSAITHRIFT_DEV)_DEP_FILES   := $(DEP_FILES)
+$(LIBSAITHRIFT_DEV)_SMDEP_FILES := $(foreach path, $(SMDEP_PATHS), $($(path)))
+$(LIBSAITHRIFT_DEV)_SMDEP_PATHS := $(SMDEP_PATHS)
+
diff --git a/platform/dcsg/libsaithrift-dev.mk b/platform/dcsg/libsaithrift-dev.mk
new file mode 100644
index 000000000..f063bed06
--- /dev/null
+++ b/platform/dcsg/libsaithrift-dev.mk
@@ -0,0 +1,22 @@
+# libsaithrift-dev package
+
+SAI_VER = 0.9.4
+
+LIBSAITHRIFT_DEV = libsaithrift-dev_$(SAI_VER)_$(CONFIGURED_ARCH).deb
+$(LIBSAITHRIFT_DEV)_SRC_PATH = $(SRC_PATH)/sonic-sairedis/SAI
+$(LIBSAITHRIFT_DEV)_DEPENDS += $(LIBTHRIFT) $(LIBTHRIFT_DEV) $(PYTHON_THRIFT) $(THRIFT_COMPILER) \
+	$(LIBSAIDCSG) $(LIBSAIDCSG_DEV) $(LIBSAIMETADATA) $(LIBSAIMETADATA_DEV)
+$(LIBSAITHRIFT_DEV)_RDEPENDS += $(LIBTHRIFT) $(LIBSAIDCSG) $(LIBSAIMETADATA)
+$(LIBSAITHRIFT_DEV)_BUILD_ENV = platform=dcsg
+SONIC_DPKG_DEBS += $(LIBSAITHRIFT_DEV)
+
+PYTHON_SAITHRIFT = python-saithrift_$(SAI_VER)_$(CONFIGURED_ARCH).deb
+$(eval $(call add_extra_package,$(LIBSAITHRIFT_DEV),$(PYTHON_SAITHRIFT)))
+
+SAISERVER = saiserver_$(SAI_VER)_$(CONFIGURED_ARCH).deb
+$(SAISERVER)_RDEPENDS += $(LIBTHRIFT) $(LIBSAIDCSG)
+$(eval $(call add_extra_package,$(LIBSAITHRIFT_DEV),$(SAISERVER)))
+
+SAISERVER_DBG = saiserver-dbg_$(SAI_VER)_$(CONFIGURED_ARCH).deb
+$(SAISERVER_DBG)_RDEPENDS += $(SAISERVER)
+$(eval $(call add_extra_package,$(LIBSAITHRIFT_DEV),$(SAISERVER_DBG)))
diff --git a/platform/dcsg/one-image.dep b/platform/dcsg/one-image.dep
new file mode 100644
index 000000000..c5399d808
--- /dev/null
+++ b/platform/dcsg/one-image.dep
@@ -0,0 +1,2 @@
+#DPKG FRK
+$(SONIC_ONE_IMAGE)_CACHE_MODE  := none
diff --git a/platform/dcsg/one-image.mk b/platform/dcsg/one-image.mk
new file mode 100644
index 000000000..3f903583c
--- /dev/null
+++ b/platform/dcsg/one-image.mk
@@ -0,0 +1,14 @@
+# sonic dcsg one image installer
+
+SONIC_ONE_IMAGE = sonic-dcsg.bin
+$(SONIC_ONE_IMAGE)_MACHINE = dcsg
+$(SONIC_ONE_IMAGE)_IMAGE_TYPE = onie
+$(SONIC_ONE_IMAGE)_INSTALLS += $(SYSTEMD_SONIC_GENERATOR)
+$(SONIC_ONE_IMAGE)_LAZY_INSTALLS += $(DCSG_PLATFORM_MODULE)
+ifeq ($(INSTALL_DEBUG_TOOLS),y)
+$(SONIC_ONE_IMAGE)_DOCKERS += $(SONIC_INSTALL_DOCKER_DBG_IMAGES)
+$(SONIC_ONE_IMAGE)_DOCKERS += $(filter-out $(patsubst %-$(DBG_IMAGE_MARK).gz,%.gz, $(SONIC_INSTALL_DOCKER_DBG_IMAGES)), $(SONIC_INSTALL_DOCKER_IMAGES))
+else
+$(SONIC_ONE_IMAGE)_DOCKERS = $(SONIC_INSTALL_DOCKER_IMAGES)
+endif
+SONIC_INSTALLERS += $(SONIC_ONE_IMAGE)
diff --git a/platform/dcsg/onie.dep b/platform/dcsg/onie.dep
new file mode 100644
index 000000000..36de83ce8
--- /dev/null
+++ b/platform/dcsg/onie.dep
@@ -0,0 +1,2 @@
+#DPKG FRK
+$(ONIE_RECOVERY_IMAGE)_CACHE_MODE  := none
diff --git a/platform/dcsg/onie.mk b/platform/dcsg/onie.mk
new file mode 100644
index 000000000..9d4f843b0
--- /dev/null
+++ b/platform/dcsg/onie.mk
@@ -0,0 +1,10 @@
+ONIE_RECOVERY_IMAGE = onie-recovery-x86_64-kvm_x86_64-r0.iso
+$(ONIE_RECOVERY_IMAGE)_URL = "https://sonicstorage.blob.core.windows.net/public/onie/onie-recovery-x86_64-kvm_x86_64-r0.iso"
+
+ONIE_RECOVERY_KVM_4ASIC_IMAGE = onie-recovery-x86_64-kvm_x86_64_4_asic-r0.iso
+$(ONIE_RECOVERY_KVM_4ASIC_IMAGE)_URL = "https://sonicstorage.blob.core.windows.net/public/onie/onie-recovery-x86_64-kvm_x86_64_4_asic-r0.iso"
+
+ONIE_RECOVERY_KVM_6ASIC_IMAGE = onie-recovery-x86_64-kvm_x86_64_6_asic-r0.iso
+$(ONIE_RECOVERY_KVM_6ASIC_IMAGE)_URL = "https://sonicstorage.blob.core.windows.net/public/onie/onie-recovery-x86_64-kvm_x86_64_6_asic-r0.iso"
+
+SONIC_ONLINE_FILES += $(ONIE_RECOVERY_IMAGE) $(ONIE_RECOVERY_KVM_4ASIC_IMAGE) $(ONIE_RECOVERY_KVM_6ASIC_IMAGE)
diff --git a/platform/dcsg/platform-modules-dcsg.mk b/platform/dcsg/platform-modules-dcsg.mk
new file mode 100644
index 000000000..2298f8c72
--- /dev/null
+++ b/platform/dcsg/platform-modules-dcsg.mk
@@ -0,0 +1,11 @@
+# DCSG Platform modules
+
+DCSG_PLATFORM_MODULE_VERSION = 1.0
+
+export DCSG_PLATFORM_MODULE_VERSION
+
+DCSG_PLATFORM_MODULE = sonic-platform-dcsg_$(DCSG_PLATFORM_MODULE_VERSION)_amd64.deb
+$(DCSG_PLATFORM_MODULE)_SRC_PATH = $(PLATFORM_PATH)/sonic-platform-modules-dcsg
+$(DCSG_PLATFORM_MODULE)_DEPENDS =
+$(DCSG_PLATFORM_MODULE)_PLATFORM = x86_64-kvm_x86_64-r0
+SONIC_DPKG_DEBS += $(DCSG_PLATFORM_MODULE)
diff --git a/platform/dcsg/platform.conf b/platform/dcsg/platform.conf
new file mode 100644
index 000000000..e69de29bb
diff --git a/platform/dcsg/raw-image.dep b/platform/dcsg/raw-image.dep
new file mode 100644
index 000000000..500ba2a70
--- /dev/null
+++ b/platform/dcsg/raw-image.dep
@@ -0,0 +1,2 @@
+#DPKG FRK
+$(SONIC_RAW_IMAGE)_CACHE_MODE  := none
diff --git a/platform/dcsg/raw-image.mk b/platform/dcsg/raw-image.mk
new file mode 100644
index 000000000..dbb4b4e72
--- /dev/null
+++ b/platform/dcsg/raw-image.mk
@@ -0,0 +1,8 @@
+# sonic dcsg raw image installer
+
+SONIC_RAW_IMAGE = sonic-dcsg.raw
+$(SONIC_RAW_IMAGE)_MACHINE = dcsg
+$(SONIC_RAW_IMAGE)_IMAGE_TYPE = raw
+$(SONIC_RAW_IMAGE)_INSTALLS += $(SYSTEMD_SONIC_GENERATOR)
+$(SONIC_RAW_IMAGE)_DOCKERS += $(SONIC_INSTALL_DOCKER_IMAGES)
+SONIC_INSTALLERS += $(SONIC_RAW_IMAGE)
diff --git a/platform/dcsg/rules.dep b/platform/dcsg/rules.dep
new file mode 100644
index 000000000..dc5c850e8
--- /dev/null
+++ b/platform/dcsg/rules.dep
@@ -0,0 +1,13 @@
+include $(PLATFORM_PATH)/syncd-dcsg.dep
+include $(PLATFORM_PATH)/sonic-version.dep
+include $(PLATFORM_PATH)/docker-sonic-dcsg.dep
+include $(PLATFORM_PATH)/docker-syncd-dcsg.dep
+include $(PLATFORM_PATH)/docker-gbsyncd-dcsg.dep
+include $(PLATFORM_PATH)/docker-ptf.dep
+include $(PLATFORM_PATH)/docker-ptf-sai.dep
+include $(PLATFORM_PATH)/libsaithrift-dev.dep
+include $(PLATFORM_PATH)/one-image.dep
+include $(PLATFORM_PATH)/onie.dep
+include $(PLATFORM_PATH)/kvm-image.dep
+
+include $(PLATFORM_PATH)/docker-dash-engine.dep
diff --git a/platform/dcsg/rules.mk b/platform/dcsg/rules.mk
new file mode 100644
index 000000000..6f0c081f5
--- /dev/null
+++ b/platform/dcsg/rules.mk
@@ -0,0 +1,16 @@
+include $(PLATFORM_PATH)/syncd-dcsg.mk
+include $(PLATFORM_PATH)/sonic-version.mk
+include $(PLATFORM_PATH)/docker-sonic-dcsg.mk
+include $(PLATFORM_PATH)/docker-syncd-dcsg.mk
+include $(PLATFORM_PATH)/docker-gbsyncd-dcsg.mk
+include $(PLATFORM_PATH)/docker-ptf.mk
+include $(PLATFORM_PATH)/docker-ptf-sai.mk
+include $(PLATFORM_PATH)/libsaithrift-dev.mk
+include $(PLATFORM_PATH)/platform-modules-dcsg.mk
+include $(PLATFORM_PATH)/one-image.mk
+include $(PLATFORM_PATH)/onie.mk
+include $(PLATFORM_PATH)/kvm-image.mk
+include $(PLATFORM_PATH)/raw-image.mk
+include $(PLATFORM_PATH)/docker-dash-engine.mk
+
+SONIC_ALL += $(SONIC_ONE_IMAGE) $(SONIC_KVM_IMAGE) $(DOCKER_SONIC_DCSG) $(SONIC_RAW_IMAGE)
diff --git a/platform/dcsg/sonic-gns3a.sh b/platform/dcsg/sonic-gns3a.sh
new file mode 100644
index 000000000..27bbdfe51
--- /dev/null
+++ b/platform/dcsg/sonic-gns3a.sh
@@ -0,0 +1,82 @@
+#!/bin/bash
+
+# This script creates a .gns3a SONiC appliance file
+IMGFILE="sonic-dcsg.img"
+RELEASE="latest"
+
+usage() {
+    echo "`basename $0` [ -r <ReleaseNumber> ] -b <SONiC DCSG image: sonic-dcsg.img>"
+    echo "e.g.: `basename $0` -r 1.1 -b <store_path>/sonic-dcsg.img"
+    exit 0
+}
+
+while getopts "r:b:h" arg; do
+  case $arg in
+    h)
+	usage
+	;;
+    r)
+	RELEASE=$OPTARG
+	;;
+    b)
+	IMGFILE=$OPTARG
+	;;
+  esac
+done
+
+if [ ! -e ${IMGFILE} ]; then
+    echo "ERROR: ${IMGFILE} not found"
+    exit 2
+fi
+
+
+MD5SUMIMGFILE=`md5sum  ${IMGFILE} | cut -f 1 -d " "`
+LENIMGFILE=`stat -c %s ${IMGFILE}`
+GNS3APPNAME="SONiC-${RELEASE}.gns3a"
+NAMEIMGFILE=`basename $IMGFILE`
+
+echo "
+{
+    \"name\": \"SONiC\",
+    \"category\": \"router\",
+    \"description\": \"SONiC Virtual Switch/Router\",
+    \"vendor_name\": \"SONiC\",
+    \"vendor_url\": \"https://sonic-net.github.io/SONiC/\",
+    \"product_name\": \"SONiC\",
+    \"product_url\": \"https://sonic-net.github.io/SONiC/\",
+    \"registry_version\": 3,
+    \"status\": \"experimental\",
+    \"maintainer\": \"SONiC\",
+    \"maintainer_email\": \"sonicproject@googlegroups.com\",
+    \"usage\": \"Supports SONiC release: ${RELEASE}\",
+    \"first_port_name\": \"eth0\",
+    \"qemu\": {
+        \"adapter_type\": \"e1000\",
+        \"adapters\": 10,
+        \"ram\": 2048,
+        \"hda_disk_interface\": \"virtio\",
+        \"arch\": \"x86_64\",
+        \"console_type\": \"telnet\",
+        \"boot_priority\": \"d\",
+        \"kvm\": \"require\"
+    },
+    \"images\": [
+        {
+            \"filename\": \"${NAMEIMGFILE}\",
+            \"version\": \"${RELEASE}\",
+            \"md5sum\": \"${MD5SUMIMGFILE}\",
+            \"filesize\": ${LENIMGFILE}
+        }
+    ],
+    \"versions\": [
+        {
+            \"name\": \"${RELEASE}\",
+            \"images\": {
+                \"hda_disk_image\": \"${NAMEIMGFILE}\"
+            }
+        }
+    ]
+}
+
+" > ${GNS3APPNAME}
+
diff --git a/platform/dcsg/sonic-platform-modules-dcsg/debian/changelog b/platform/dcsg/sonic-platform-modules-dcsg/debian/changelog
new file mode 100755
index 000000000..3338455a0
--- /dev/null
+++ b/platform/dcsg/sonic-platform-modules-dcsg/debian/changelog
@@ -0,0 +1,11 @@
+sonic-platform-dcsg (1.0) UNRELEASED; urgency=low
+
+  * Initial release of the sonic-platform-dcsg package.
+  * This package provides platform-specific modules for SONiC on virtualized
+    DCSG platforms.
+  * Included modules:
+    - Chassis module
+  * This package is part of the initial release of SONiC for DCSG platforms.
+
+ -- Deepak Singhal <deepsinghal@microsoft.com>  Fri, 26 Feb 2024 12:00:00 +0000
+
diff --git a/platform/dcsg/sonic-platform-modules-dcsg/debian/compat b/platform/dcsg/sonic-platform-modules-dcsg/debian/compat
new file mode 100644
index 000000000..f599e28b8
--- /dev/null
+++ b/platform/dcsg/sonic-platform-modules-dcsg/debian/compat
@@ -0,0 +1 @@
+10
diff --git a/platform/dcsg/sonic-platform-modules-dcsg/debian/control b/platform/dcsg/sonic-platform-modules-dcsg/debian/control
new file mode 100755
index 000000000..743f2276c
--- /dev/null
+++ b/platform/dcsg/sonic-platform-modules-dcsg/debian/control
@@ -0,0 +1,10 @@
+Source: sonic-platform-dcsg
+Section: main
+Priority: extra
+Maintainer: Deepak Singhal <deepsinghal@microsoft.com>
+Build-Depends: debhelper (>= 9), bzip2
+Standards-Version: 3.9.3
+
+Package: sonic-platform-dcsg
+Architecture: amd64
+Description: Sonic DCSG platform Module
diff --git a/platform/dcsg/sonic-platform-modules-dcsg/debian/rules b/platform/dcsg/sonic-platform-modules-dcsg/debian/rules
new file mode 100755
index 000000000..a5d98133d
--- /dev/null
+++ b/platform/dcsg/sonic-platform-modules-dcsg/debian/rules
@@ -0,0 +1,58 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Sample debian/rules that uses debhelper.
+# As a special exception, when this file is copied by dh-make into a
+# dh-make output file, you may use that output file without restriction.
+
+include /usr/share/dpkg/pkg-info.mk
+
+# Uncomment this to turn on verbose mode.
+export DH_VERBOSE=1
+
+PYTHON        ?= python3
+PACKAGE_PRE_NAME := sonic-platform-dcsg
+SRC_DIR:= $(shell pwd)
+
+%:
+	dh $@ --with python3 --buildsystem=pybuild
+
+clean:
+	dh_testdir
+	dh_testroot
+	dh_clean
+
+build:
+	# Nothing to do
+
+
+binary: binary-arch binary-indep
+	# Nothing to do
+
+binary-arch:
+	# Nothing to do
+
+binary-indep:
+# temporary commented out
+#	dh_testdir
+	dh_installdirs
+
+	# Custom package commands
+	$(PYTHON) setup.py install --root=$(SRC_DIR)/debian/$(PACKAGE_PRE_NAME) --install-layout=deb;
+
+	# Resuming debhelper scripts
+	dh_testroot
+	dh_install
+	dh_installchangelogs
+	dh_installdocs
+	dh_systemd_enable
+	dh_installinit
+	dh_systemd_start
+	dh_link
+	dh_fixperms
+	dh_compress
+	dh_strip
+	dh_installdeb
+	dh_gencontrol
+	dh_md5sums
+	dh_builddeb
+.PHONY: build binary binary-arch binary-indep clean
diff --git a/platform/dcsg/sonic-platform-modules-dcsg/setup.py b/platform/dcsg/sonic-platform-modules-dcsg/setup.py
new file mode 100755
index 000000000..c36df0f7f
--- /dev/null
+++ b/platform/dcsg/sonic-platform-modules-dcsg/setup.py
@@ -0,0 +1,15 @@
+#!/usr/bin/env python
+
+import os
+import sys
+from setuptools import setup
+os.listdir
+
+setup(
+    name='sonic_platform',
+    version='1.0',
+    description='Module to initialize DCSG platforms',
+
+    packages=['sonic_platform'],
+    package_dir={'sonic_platform': 'sonic_platform'}
+)
diff --git a/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/__init__.py b/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/__init__.py
new file mode 100644
index 000000000..290d8cd1a
--- /dev/null
+++ b/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/__init__.py
@@ -0,0 +1,2 @@
+__all__ = ["platform"]
+from sonic_platform import *
diff --git a/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/chassis.py b/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/chassis.py
new file mode 100644
index 000000000..a917f9eec
--- /dev/null
+++ b/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/chassis.py
@@ -0,0 +1,57 @@
+# Description: Module contains the definitions of SONiC platform APIs
+# which provide the chassis specific details
+#
+# Copyright (c) 2019, Nokia
+# All rights reserved.
+#
+
+try:
+    from sonic_platform_base.chassis_base import ChassisBase
+    from sonic_platform_base.module_base import ModuleBase
+    import os
+    import json
+    import threading
+
+except ImportError as e:
+    raise ImportError(str(e) + "- required module not found")
+
+
+class Chassis(ChassisBase):
+    """
+    DCSG Platform-specific Chassis class
+    """
+    def __init__(self):
+        ChassisBase.__init__(self)
+        self.metadata_file = '/etc/sonic/dcsg_chassis_metadata.json'
+        self.metadata = self._read_metadata()
+
+    def _read_metadata(self):
+        metadata = {}
+        if os.path.exists(self.metadata_file):
+            with open(self.metadata_file, 'r') as f:
+                metadata = json.load(f)
+        else:
+            raise FileNotFoundError("Metadata file {} not found".format(self.metadata_file))
+        return metadata
+
+    def get_supervisor_slot(self):
+        if 'sup_slot_num' not in self.metadata:
+            raise KeyError("sup_slot_num not found in Metadata file {}".format(self.metadata_file))
+        return self.metadata['sup_slot_num']
+
+    def get_linecard_slot(self):
+        if 'lc_slot_num' not in self.metadata:
+            raise KeyError("lc_slot_num not found in Metadata file {}".format(self.metadata_file))
+        return self.metadata['lc_slot_num']
+
+    def get_my_slot(self):
+        if 'is_supervisor' not in self.metadata or 'is_linecard' not in self.metadata:
+            raise KeyError("is_supervisor or is_linecard not found in metadata file {}".format(self.metadata_file))
+
+        if self.metadata['is_supervisor']:
+            return self.get_supervisor_slot()
+        elif self.metadata['is_linecard']:
+            return self.get_linecard_slot()
+        else:
+            raise ValueError("Invalid configuration: Neither supervisor nor line card")
+
diff --git a/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/platform.py b/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/platform.py
new file mode 100644
index 000000000..d8b2b378a
--- /dev/null
+++ b/platform/dcsg/sonic-platform-modules-dcsg/sonic_platform/platform.py
@@ -0,0 +1,40 @@
+# Name: platform.py, version: 1.0
+#
+# Description: Module contains the definitions of SONiC platform APIs
+# which provide the platform specific details
+#
+# Copyright (c) 2019, Nokia
+# All rights reserved.
+#
+
+try:
+    from sonic_platform_base.platform_base import PlatformBase
+except ImportError as e:
+    raise ImportError("%s - required module not found" % e)
+
+platformDict = {'platform': 'dcsg'}
+
+
+class Platform(PlatformBase):
+    def __init__(self):
+        self.platform = self.getPlatform()
+        try:
+            from sonic_platform.chassis import Chassis
+        except ImportError as e:
+            raise ImportError("%s - required module not found" % e)
+        self.chassis = Chassis()
+
+    def getPlatformDict(self):
+        global platformDict
+        if platformDict:
+            return platformDict
+
+    def readPlatformName(self):
+        return self.getPlatformDict().get('platform')
+
+    def getPlatform(self):
+        platformCls = self.readPlatformName()
+        return platformCls
+
+    def get_chassis(self):
+        return self.chassis
diff --git a/platform/dcsg/sonic-version.dep b/platform/dcsg/sonic-version.dep
new file mode 100644
index 000000000..1398415bd
--- /dev/null
+++ b/platform/dcsg/sonic-version.dep
@@ -0,0 +1,2 @@
+#DPKG FRK
+$(SONIC_VERSION)_CACHE_MODE  := none
diff --git a/platform/dcsg/sonic-version.mk b/platform/dcsg/sonic-version.mk
new file mode 100644
index 000000000..82409abd1
--- /dev/null
+++ b/platform/dcsg/sonic-version.mk
@@ -0,0 +1,15 @@
+# sonic version yml file
+
+sonic_version=$(SONIC_GET_VERSION)
+sonic_asic_platform=$(CONFIGURED_PLATFORM)
+sonic_os_version=$(SONIC_OS_VERSION)
+
+export sonic_version
+export sonic_asic_platform
+export sonic_os_version
+
+SONIC_VERSION = sonic_version.yml
+$(SONIC_VERSION)_SRC_PATH = $(PLATFORM_PATH)/sonic-version
+SONIC_MAKE_FILES += $(SONIC_VERSION)
+
+SONIC_PHONY_TARGETS += $(addprefix $(FILES_PATH)/, $(SONIC_VERSION))
diff --git a/platform/dcsg/sonic-version/Makefile b/platform/dcsg/sonic-version/Makefile
new file mode 100644
index 000000000..2b2386031
--- /dev/null
+++ b/platform/dcsg/sonic-version/Makefile
@@ -0,0 +1,10 @@
+.ONESHELL:
+SHELL = /bin/bash
+.SHELLFLAGS += -e
+
+MAIN_TARGET = sonic_version.yml
+
+$(addprefix $(DEST)/, $(MAIN_TARGET)): $(DEST)/% :
+	./build_sonic_version.sh $(MAIN_TARGET)
+
+	mv $(MAIN_TARGET) $(DEST)/
diff --git a/platform/dcsg/sonic-version/build_sonic_version.sh b/platform/dcsg/sonic-version/build_sonic_version.sh
new file mode 100755
index 000000000..2e3d5c42f
--- /dev/null
+++ b/platform/dcsg/sonic-version/build_sonic_version.sh
@@ -0,0 +1,8 @@
+export build_version="${sonic_version}"
+export asic_type="${sonic_asic_platform}"
+export commit_id="$(git rev-parse --short HEAD)"
+export branch="$(git rev-parse --abbrev-ref HEAD)"
+export build_date="$(date -u)"
+export build_number="${BUILD_NUMBER:-0}"
+export built_by="$USER@$BUILD_HOSTNAME"
+j2 sonic_version.yml.j2 > $1
diff --git a/platform/dcsg/sonic-version/sonic_version.yml.j2 b/platform/dcsg/sonic-version/sonic_version.yml.j2
new file mode 120000
index 000000000..2bbebeb22
--- /dev/null
+++ b/platform/dcsg/sonic-version/sonic_version.yml.j2
@@ -0,0 +1 @@
+../../../files/build_templates/sonic_version.yml.j2
\ No newline at end of file
diff --git a/platform/dcsg/sonic.xml b/platform/dcsg/sonic.xml
new file mode 100644
index 000000000..817463af5
--- /dev/null
+++ b/platform/dcsg/sonic.xml
@@ -0,0 +1,79 @@
+<domain type='kvm' xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'>
+  <name>sonic</name>
+  <memory unit='KiB'>2048000</memory>
+  <currentMemory unit='KiB'>2048000</currentMemory>
+  <vcpu placement='static'>1</vcpu>
+  <resource>
+    <partition>/machine</partition>
+  </resource>
+  <os>
+    <type arch='x86_64' machine='pc-i440fx-1.5'>hvm</type>
+    <boot dev='hd'/>
+  </os>
+  <features>
+    <acpi/>
+    <apic/>
+  </features>
+  <clock offset='utc'/>
+  <on_poweroff>destroy</on_poweroff>
+  <on_reboot>restart</on_reboot>
+  <on_crash>restart</on_crash>
+  <devices>
+    <emulator>/usr/bin/qemu-system-x86_64</emulator>
+    <disk type='file' device='disk'>
+      <driver name='qemu' type='qcow2' cache='writeback'/>
+      <source file='/data/sonic/sonic-buildimage/target/sonic-dcsg.img'/>
+      <target bus='virtio' dev='vda'/>
+    </disk>
+    <serial type='tcp'>
+      <source host='127.0.0.1' mode='bind' service='7000'/>
+      <target port='0'/>
+      <protocol type='telnet'/>
+    </serial>
+    <interface type='user'>
+        <model type='e1000' />
+    </interface>
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <controller type='usb' index='0'/>
+    <memballoon model='virtio'>
+      <alias name='balloon0'/>
+      <address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0'/>
+    </memballoon>
+  </devices>
+  <seclabel type='dynamic' model='apparmor' relabel='yes'/>
+  <qemu:commandline>
+   <qemu:arg value='-redir'/>
+   <qemu:arg value='tcp:3040::22'/>
+  </qemu:commandline> 
+</domain>
diff --git a/platform/dcsg/sonic_multiasic.xml b/platform/dcsg/sonic_multiasic.xml
new file mode 100644
index 000000000..5db6ee9fc
--- /dev/null
+++ b/platform/dcsg/sonic_multiasic.xml
@@ -0,0 +1,110 @@
+<domain type='kvm' xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'>
+  <name>sonic</name>
+  <memory unit='GB'>8</memory>
+  <vcpu placement='static'>8</vcpu>
+  <resource>
+    <partition>/machine</partition>
+  </resource>
+  <os>
+    <type arch='x86_64' machine='pc-i440fx-1.5'>hvm</type>
+    <boot dev='hd'/>
+  </os>
+  <features>
+    <acpi/>
+    <apic/>
+  </features>
+  <clock offset='utc'/>
+  <on_poweroff>destroy</on_poweroff>
+  <on_reboot>restart</on_reboot>
+  <on_crash>restart</on_crash>
+  <devices>
+    <emulator>/usr/bin/qemu-system-x86_64</emulator>
+    <disk type='file' device='disk'>
+      <driver name='qemu' type='qcow2' cache='writeback'/>
+      <source file='/data/sonic/sonic-buildimage/target/sonic-dcsg.img'/>
+      <target bus='virtio' dev='vda'/>
+    </disk>
+    <serial type='tcp'>
+      <source host='127.0.0.1' mode='bind' service='7000'/>
+      <target port='0'/>
+      <protocol type='telnet'/>
+    </serial>
+    <interface type='user'>
+        <model type='e1000' />
+    </interface>
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <interface type='ethernet' />
+    <controller type='usb' index='0'/>
+    <memballoon model='virtio'>
+      <alias name='balloon0'/>
+      <address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0'/>
+    </memballoon>
+  </devices>
+  <seclabel type='dynamic' model='apparmor' relabel='yes'/>
+  <qemu:commandline>
+   <qemu:arg value='-redir'/>
+   <qemu:arg value='tcp:3040::22'/>
+  </qemu:commandline> 
+</domain>
diff --git a/platform/dcsg/syncd-dcsg.dep b/platform/dcsg/syncd-dcsg.dep
new file mode 100644
index 000000000..899e630de
--- /dev/null
+++ b/platform/dcsg/syncd-dcsg.dep
@@ -0,0 +1,11 @@
+#DPKG FRK
+DPATH       := $($(SYNCD_DCSG)_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/dcsg/syncd-dcsg.mk platform/dcsg/syncd-dcsg.dep
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+DEP_FILES   += $(shell git ls-files $(DPATH))
+
+$(SYNCD_DCSG)_CACHE_MODE  := GIT_CONTENT_SHA 
+$(SYNCD_DCSG)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(SYNCD_DCSG)_DEP_FILES   := $(DEP_FILES)
+
+$(eval $(call add_dbg_docker,$(SYNCD_DCSG),$(SYNCD_DCSG_DBG)))
diff --git a/platform/dcsg/syncd-dcsg.mk b/platform/dcsg/syncd-dcsg.mk
new file mode 100644
index 000000000..06ccbb142
--- /dev/null
+++ b/platform/dcsg/syncd-dcsg.mk
@@ -0,0 +1,20 @@
+$(LIBSAIREDIS)_DEB_BUILD_PROFILES += syncd dcsg
+
+SYNCD_DCSG = syncd-dcsg_1.0.0_$(CONFIGURED_ARCH).deb
+$(SYNCD_DCSG)_RDEPENDS += $(LIBSAIREDIS) $(LIBSAIMETADATA) $(LIBSAIDCSG)
+
+ifeq ($(BLDENV),bookworm)
+  $(LIBSAIREDIS)_DEB_BUILD_PROFILES += dashsai
+  $(LIBSAIREDIS)_DEPENDS += $(DASH_SAI)
+  $(SYNCD_DCSG)_RDEPENDS += $(DASH_SAI)
+else
+  $(warning DASH_SAI cannot support this build environment $(BLDENV))
+endif
+
+
+$(eval $(call add_derived_package,$(LIBSAIREDIS),$(SYNCD_DCSG)))
+
+SYNCD_DCSG_DBG = syncd-dcsg-dbgsym_1.0.0_$(CONFIGURED_ARCH).deb
+$(SYNCD_DCSG_DBG)_DEPENDS += $(SYNCD_DCSG)
+$(SYNCD_DCSG_DBG)_RDEPENDS += $(SYNCD_DCSG)
+$(eval $(call add_derived_package,$(LIBSAIREDIS),$(SYNCD_DCSG_DBG)))
diff --git a/platform/dcsg/tests/README.md b/platform/dcsg/tests/README.md
new file mode 100644
index 000000000..29ba27db6
--- /dev/null
+++ b/platform/dcsg/tests/README.md
@@ -0,0 +1,4 @@
+Requirements:
+
+- Enable IPv6 for docker engine
+- pip install exabgp
diff --git a/platform/dcsg/tests/bgp/files/default_route/bgpd.conf b/platform/dcsg/tests/bgp/files/default_route/bgpd.conf
new file mode 100644
index 000000000..bc0dffcdb
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/default_route/bgpd.conf
@@ -0,0 +1,4 @@
+router bgp 65501
+  bgp router-id 1.1.1.1
+  no bgp ebgp-requires-policy
+  neighbor 10.10.10.1 remote-as 65502
diff --git a/platform/dcsg/tests/bgp/files/default_route/default_route.conf b/platform/dcsg/tests/bgp/files/default_route/default_route.conf
new file mode 100644
index 000000000..9f9d3cf32
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/default_route/default_route.conf
@@ -0,0 +1,17 @@
+neighbor 10.10.10.0 {
+    router-id 1.2.3.4;
+    local-address 10.10.10.1;
+    local-as 65502;
+    peer-as 65501;
+    group-updates false;
+
+    family {
+        ipv4 unicast;
+    }
+
+    static {
+        route 0.0.0.0/0 {
+            next-hop 10.10.10.1;
+        }
+    }
+}
diff --git a/platform/dcsg/tests/bgp/files/gr_livelock/bgpd.conf b/platform/dcsg/tests/bgp/files/gr_livelock/bgpd.conf
new file mode 100644
index 000000000..e52c771a1
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/gr_livelock/bgpd.conf
@@ -0,0 +1,15 @@
+router bgp 65501
+  bgp router-id 1.1.1.1
+  no bgp ebgp-requires-policy
+  bgp graceful-restart restart-time 180
+  bgp graceful-restart
+  neighbor 10.0.0.1 remote-as 65502
+  address-family ipv4
+    neighbor 10.0.0.1 activate
+    maximum-paths 514
+  exit-address-family
+  neighbor 10.0.0.3 remote-as 65503
+  address-family ipv4
+    neighbor 10.0.0.3 activate
+    maximum-paths 514
+  exit-address-family
diff --git a/platform/dcsg/tests/bgp/files/gr_livelock/exabgp1.conf b/platform/dcsg/tests/bgp/files/gr_livelock/exabgp1.conf
new file mode 100644
index 000000000..0e78bd61d
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/gr_livelock/exabgp1.conf
@@ -0,0 +1,21 @@
+neighbor 10.0.0.0 {
+    router-id 1.1.1.2;
+    local-address 10.0.0.1;
+    local-as 65502;
+    peer-as 65501;
+    group-updates false;
+
+    family{
+        ipv4 unicast;
+    }
+
+    static {
+        route 1.1.1.1/32{
+            next-hop 10.0.0.1;
+            community no-export;
+        }
+        route 2.2.2.2/32{
+            next-hop 10.0.0.1;
+        }
+    }
+}
diff --git a/platform/dcsg/tests/bgp/files/gr_livelock/exabgp1.graceful.conf b/platform/dcsg/tests/bgp/files/gr_livelock/exabgp1.graceful.conf
new file mode 100644
index 000000000..377ed024d
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/gr_livelock/exabgp1.graceful.conf
@@ -0,0 +1,26 @@
+neighbor 10.0.0.0 {
+    router-id 1.1.1.2;
+    local-address 10.0.0.1;
+    local-as 65502;
+    peer-as 65501;
+    group-updates false;
+    manual-eor true;
+
+    family{
+        ipv4 unicast;
+    }
+
+    capability {
+        graceful-restart 360;
+    }
+
+    static {
+        route 1.1.1.1/32{
+            next-hop 10.0.0.1;
+            community no-export;
+        }
+        route 2.2.2.2/32{
+            next-hop 10.0.0.1;
+        }
+    }
+}
diff --git a/platform/dcsg/tests/bgp/files/gr_livelock/exabgp2.conf b/platform/dcsg/tests/bgp/files/gr_livelock/exabgp2.conf
new file mode 100644
index 000000000..3e67c18a8
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/gr_livelock/exabgp2.conf
@@ -0,0 +1,11 @@
+neighbor 10.0.0.2 {
+    router-id 1.1.1.3;
+    local-address 10.0.0.3;
+    local-as 65503;
+    peer-as 65501;
+    group-updates false;
+
+    family {
+        ipv4 unicast;
+    }
+}
diff --git a/platform/dcsg/tests/bgp/files/invalid_nexthop/bgpd.conf b/platform/dcsg/tests/bgp/files/invalid_nexthop/bgpd.conf
new file mode 100644
index 000000000..33d235576
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/invalid_nexthop/bgpd.conf
@@ -0,0 +1,8 @@
+router bgp 65501
+  bgp router-id 1.1.1.1
+  no bgp default ipv4-unicast
+  no bgp ebgp-requires-policy
+  neighbor fc00::2 remote-as 65502
+  address-family ipv6
+    neighbor fc00::2 activate
+  exit-address-family
diff --git a/platform/dcsg/tests/bgp/files/invalid_nexthop/invalid_nexthop.conf b/platform/dcsg/tests/bgp/files/invalid_nexthop/invalid_nexthop.conf
new file mode 100644
index 000000000..60a327d71
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/invalid_nexthop/invalid_nexthop.conf
@@ -0,0 +1,19 @@
+neighbor fc00::1 {
+    router-id 1.2.3.4;
+    local-address fc00::2;
+    local-as 65502;
+    peer-as 65501;
+    group-updates false;
+
+    family {
+        ipv4 unicast;
+        ipv6 unicast;
+    }
+
+    static {
+        route 3333::0/64 {
+            next-hop 0.0.0.0;
+            next-hop fc00::2;
+        }
+    }
+}
diff --git a/platform/dcsg/tests/bgp/files/no_export/bgpd.conf b/platform/dcsg/tests/bgp/files/no_export/bgpd.conf
new file mode 100644
index 000000000..be97c1c37
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/no_export/bgpd.conf
@@ -0,0 +1,14 @@
+router bgp 65501
+  bgp router-id 1.1.1.1
+  no bgp default ipv4-unicast
+  no bgp ebgp-requires-policy
+  neighbor 10.0.0.1 remote-as 65502
+  address-family ipv4
+    neighbor 10.0.0.1 activate
+    maximum-paths 514
+  exit-address-family
+  neighbor 10.0.0.3 remote-as 65503
+  address-family ipv4
+    neighbor 10.0.0.3 activate
+    maximum-paths 514
+  exit-address-family
diff --git a/platform/dcsg/tests/bgp/files/no_export/exabgp1.conf b/platform/dcsg/tests/bgp/files/no_export/exabgp1.conf
new file mode 100644
index 000000000..0e78bd61d
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/no_export/exabgp1.conf
@@ -0,0 +1,21 @@
+neighbor 10.0.0.0 {
+    router-id 1.1.1.2;
+    local-address 10.0.0.1;
+    local-as 65502;
+    peer-as 65501;
+    group-updates false;
+
+    family{
+        ipv4 unicast;
+    }
+
+    static {
+        route 1.1.1.1/32{
+            next-hop 10.0.0.1;
+            community no-export;
+        }
+        route 2.2.2.2/32{
+            next-hop 10.0.0.1;
+        }
+    }
+}
diff --git a/platform/dcsg/tests/bgp/files/no_export/exabgp2.conf b/platform/dcsg/tests/bgp/files/no_export/exabgp2.conf
new file mode 100644
index 000000000..3e67c18a8
--- /dev/null
+++ b/platform/dcsg/tests/bgp/files/no_export/exabgp2.conf
@@ -0,0 +1,11 @@
+neighbor 10.0.0.2 {
+    router-id 1.1.1.3;
+    local-address 10.0.0.3;
+    local-as 65503;
+    peer-as 65501;
+    group-updates false;
+
+    family {
+        ipv4 unicast;
+    }
+}
diff --git a/platform/dcsg/tests/bgp/test_default_route.py b/platform/dcsg/tests/bgp/test_default_route.py
new file mode 100644
index 000000000..2cc9021ba
--- /dev/null
+++ b/platform/dcsg/tests/bgp/test_default_route.py
@@ -0,0 +1,48 @@
+from swsscommon import swsscommon
+import os
+import re
+import time
+import json
+import pytest
+
+def test_DefaultRoute(dvs, testlog):
+
+    dvs.copy_file("/etc/frr/", "bgp/files/default_route/bgpd.conf")
+    dvs.runcmd("supervisorctl start bgpd")
+    dvs.runcmd("ip addr add 10.10.10.0/31 dev Ethernet0")
+    dvs.runcmd("config interface startup Ethernet0")
+    dvs.runcmd("ip route del 0.0.0.0/0")
+    dvs.runcmd("vtysh -c \"confgure terminal\" -c \"ip route 0.0.0.0/0 via 172.17.0.1 200\"")
+
+    dvs.servers[0].runcmd("ip addr add 10.10.10.1/31 dev eth0")
+    dvs.servers[0].runcmd("ifconfig eth0 up")
+
+    time.sleep(5)
+
+    print(dvs.runcmd("supervisorctl status"))
+
+    p = dvs.servers[0].runcmd_async("exabgp -d bgp/files/default_route/default_route.conf")
+
+    time.sleep(10)
+
+    (exit_code, output) = dvs.runcmd(["redis-cli", "hgetall", "ROUTE_TABLE:0.0.0.0/0"])
+    print(exit_code, output)
+
+    # make sure 10.10.10.1 is the correct next hop for default route
+    assert "10.10.10.1" in output
+
+    # insert default route for table default
+    dvs.runcmd("ip route add default via 172.17.0.1 table default")
+
+    (exit_code, output) = dvs.runcmd(["redis-cli", "hgetall", "ROUTE_TABLE:0.0.0.0/0"])
+    print(exit_code, output)
+
+    time.sleep(10)
+    # make sure 10.10.10.1 is still the correct next hop for default route
+    assert "10.10.10.1" in output
+
+    p.terminate()
+    p = p.wait()
+
+
+
diff --git a/platform/dcsg/tests/bgp/test_gr_livelock.py b/platform/dcsg/tests/bgp/test_gr_livelock.py
new file mode 100644
index 000000000..cd72ffef3
--- /dev/null
+++ b/platform/dcsg/tests/bgp/test_gr_livelock.py
@@ -0,0 +1,142 @@
+from swsscommon import swsscommon
+import os
+import re
+import time
+import json
+import random
+
+def output(dvs, title):
+    print("=========================== %s ===========================" % title)
+    exit_cod,  sum_res =  dvs.runcmd(["vtysh", "-c", "show ip bgp sum"])
+    exit_code, all_route = dvs.runcmd(["vtysh", "-c", "show ip bgp"])
+    exit_code, neig_1           = dvs.runcmd(["vtysh", "-c", "show ip bgp neighbors 10.0.0.1"])
+    exit_code, announce_route_1 = dvs.runcmd(["vtysh", "-c", "show ip bgp neighbors 10.0.0.1 advertised-routes"])
+    exit_code, received_route_1 = dvs.runcmd(["vtysh", "-c", "show ip bgp neighbors 10.0.0.1 routes"])
+    exit_code, announce_route_3 = dvs.runcmd(["vtysh", "-c", "show ip bgp neighbors 10.0.0.3 advertised-routes"])
+    exit_code, received_route_3 = dvs.runcmd(["vtysh", "-c", "show ip bgp neighbors 10.0.0.3 routes"])
+    print("Summary:")
+    print(sum_res)
+    print("Received routes:")
+    print("10.0.0.1")
+    print(received_route_1)
+    print("10.0.0.3")
+    print(received_route_3)
+    print("Announces routes:")
+    print("10.0.0.1")
+    print(announce_route_1)
+    print("10.0.0.3")
+    print(announce_route_3)
+    print("Neighbors")
+    print("10.0.0.1")
+    print(neig_1)
+    print("======================================================")
+
+def mkdir(path):
+    if not os.path.exists(path):
+        os.makedirs(path)
+
+def remove(path):
+    if os.path.exists(path):
+        os.unlink(path)
+
+def get_target_env(idx):
+    return '/usr/local/etc/exabgp/exabgp_%d.env' % idx
+
+def prepare_exa_env(dvs, idx):
+    mkdir('/usr/local/etc')
+    mkdir('/usr/local/etc/exabgp')
+    tmp_name = '/tmp/env.%d.%d' % (random.randint(0, 10000000), os.getpid())
+    dvs.servers[idx].runcmd("exabgp --fi > %s" % tmp_name)
+    with open(tmp_name) as r_fp:
+        with open(get_target_env(idx), 'w') as w_fp:
+            for line in r_fp:
+                if line.startswith('pipename'):
+                    line = "pipename = 'exabgp.%d'\n" % idx
+                w_fp.write(line)
+    os.unlink(tmp_name)
+
+
+def run_exa(dvs, idx, cfg):
+    prepare_exa_env(dvs, idx)
+    run_dir = "/var/run/exabgp"
+    mkdir(run_dir)
+    fifo_in_path  = "%s/exabgp.%d.in"  % (run_dir, idx)
+    fifo_out_path = "%s/exabgp.%d.out" % (run_dir, idx)
+    remove(fifo_in_path)
+    remove(fifo_out_path)
+    os.mkfifo(fifo_in_path)
+    os.mkfifo(fifo_out_path)
+    os.chmod(fifo_in_path,  0o666)
+    os.chmod(fifo_out_path, 0o666)
+    print("!!! Start exabgp instance %d" % idx)
+    cmd = "exabgp -d --env %s %s" % (get_target_env(idx), cfg)
+    print("Cmd is ___ %s ___" % cmd)
+    return dvs.servers[idx].runcmd_async(cmd)
+
+def run_exacli(dvs, idx, cmd):
+    return dvs.servers[idx].runcmd('exabgpcli --env %s %s' % (get_target_env(idx), cmd))
+
+def test_gr_livelock(dvs, testlog):
+    # update exabgp to version 4.0.10
+    dvs.servers[0].runcmd("pip install 'exabgp==4.0.10' --force-reinstall ")
+    #
+    dvs.copy_file("/etc/frr/", "bgp/files/gr_livelock/bgpd.conf")
+    dvs.runcmd("supervisorctl stop bgpd")
+    time.sleep(5)
+    dvs.runcmd("supervisorctl start bgpd")
+    dvs.runcmd("ip addr add 10.0.0.0/31 dev Ethernet0")
+    dvs.runcmd("config interface startup Ethernet0")
+
+    dvs.runcmd("ip addr add 10.0.0.2/31 dev Ethernet4")
+    dvs.runcmd("config interface startup Ethernet4")
+
+    dvs.servers[0].runcmd("ip addr add 10.0.0.1/31 dev eth0")
+    dvs.servers[0].runcmd("ifconfig eth0 up")
+
+    dvs.servers[1].runcmd("ip addr add 10.0.0.3/31 dev eth0")
+    dvs.servers[1].runcmd("ifconfig eth0 up")
+
+    time.sleep(5)
+
+    # Run two bgp neighbors
+    p1 = run_exa(dvs, 0, "bgp/files/gr_livelock/exabgp1.conf")
+    p2 = run_exa(dvs, 1, "bgp/files/gr_livelock/exabgp2.conf")
+
+    time.sleep(30)
+
+    output(dvs, "First neighbor doesn't have GR enabled")
+
+    # Check that we announce routes from the 1st neigbbor to 2nd, if 1st neighbor doesn't support graceful restart
+    _, announced_routes = dvs.runcmd(["vtysh", "-c", "show ip bgp neighbors 10.0.0.3 advertised-routes"])
+    assert '2.2.2.2/32' in announced_routes
+
+    # Stop 1st neighbor
+    run_exacli(dvs, 0, 'shutdown')
+    p1 = p1.wait()
+
+    # Wait until frr thinks that 1st neighbor was shut down
+    time.sleep(300)
+
+    # Start the 1st neighbor again with graceful restart enabled
+    p1 = run_exa(dvs, 0, "bgp/files/gr_livelock/exabgp1.graceful.conf")
+
+    time.sleep(60)
+
+    output(dvs, "First neighbor has GR enalbed")
+
+    run_exacli(dvs, 0, 'announce route 1.10.0.0/24 next-hop self')
+
+    time.sleep(60)
+
+    output(dvs, "Announced a new route from the first neighbor")
+
+    # Check that we announce all routes from the 1st neighbor
+    _, announced_routes = dvs.runcmd(["vtysh", "-c", "show ip bgp neighbors 10.0.0.3 advertised-routes"])
+    assert '2.2.2.2/32'  in announced_routes
+    assert '1.10.0.0/24' in announced_routes
+
+    run_exacli(dvs, 0, 'shutdown')
+    p1 = p1.wait()
+
+    run_exacli(dvs, 1, 'shutdown')
+    p2 = p2.wait()
diff --git a/platform/dcsg/tests/bgp/test_invalid_nexthop.py b/platform/dcsg/tests/bgp/test_invalid_nexthop.py
new file mode 100644
index 000000000..3e8acd94e
--- /dev/null
+++ b/platform/dcsg/tests/bgp/test_invalid_nexthop.py
@@ -0,0 +1,33 @@
+from swsscommon import swsscommon
+import os
+import re
+import time
+import json
+import pytest
+
+def test_InvalidNexthop(dvs, testlog):
+
+    dvs.copy_file("/etc/frr/", "bgp/files/invalid_nexthop/bgpd.conf")
+    dvs.runcmd("supervisorctl start bgpd")
+    dvs.runcmd("ip addr add fc00::1/126 dev Ethernet0")
+    dvs.runcmd("config interface startup Ethernet0")
+
+    dvs.servers[0].runcmd("ip addr add fc00::2/126 dev eth0")
+    dvs.servers[0].runcmd("ifconfig eth0 up")
+
+    time.sleep(5)
+
+    print(dvs.runcmd("supervisorctl status"))
+
+    p = dvs.servers[0].runcmd_async("exabgp -d bgp/files/invalid_nexthop/invalid_nexthop.conf")
+
+    time.sleep(10)
+
+    (exit_code, output) = dvs.runcmd(["vtysh", "-c", "show bgp ipv6"])
+
+    p.terminate()
+    p = p.wait()
+
+    print(exit_code, output)
+
+    assert "3333::/64" in output
diff --git a/platform/dcsg/tests/bgp/test_no_export.py b/platform/dcsg/tests/bgp/test_no_export.py
new file mode 100644
index 000000000..b2c7c5e7c
--- /dev/null
+++ b/platform/dcsg/tests/bgp/test_no_export.py
@@ -0,0 +1,44 @@
+from swsscommon import swsscommon
+import os
+import re
+import time
+import json
+
+def test_bounce(dvs, testlog):
+    dvs.copy_file("/etc/frr/", "bgp/files/no_export/bgpd.conf")
+    dvs.runcmd("supervisorctl start bgpd")
+    dvs.runcmd("ip addr add 10.0.0.0/31 dev Ethernet0")
+    dvs.runcmd("config interface startup Ethernet0")
+
+    dvs.runcmd("ip addr add 10.0.0.2/31 dev Ethernet4")
+    dvs.runcmd("config interface startup Ethernet4")
+
+    dvs.servers[0].runcmd("ip addr add 10.0.0.1/31 dev eth0")
+    dvs.servers[0].runcmd("ifconfig eth0 up")
+
+    dvs.servers[1].runcmd("ip addr add 10.0.0.3/31 dev eth0")
+    dvs.servers[1].runcmd("ifconfig eth0 up")
+
+    time.sleep(5)
+
+    p1 = dvs.servers[0].runcmd_async("exabgp -d bgp/files/no_export/exabgp1.conf")
+    p2 = dvs.servers[1].runcmd_async("exabgp -d bgp/files/no_export/exabgp2.conf")
+
+    time.sleep(60)
+
+    (exit_code, sum_res) =  dvs.runcmd(["vtysh", "-c", "show ip bgp sum"])
+    (exit_code, all_route) = dvs.runcmd(["vtysh", "-c", "show ip bgp"])
+    (exit_code, announce_route) = dvs.runcmd(["vtysh", "-c", "show ip bgp neighbors 10.0.0.3 advertised-routes"])
+
+    p1.terminate()
+    p1 = p1.wait()
+
+    p2.terminate()
+    p2 = p2.wait()
+
+    print(sum_res)
+    print(announce_route)
+    assert "1.1.1.1/32" in all_route
+    assert "1.1.1.1/32" not in announce_route
+    assert "2.2.2.2/32" in all_route
+    assert "2.2.2.2/32" in announce_route
diff --git a/platform/dcsg/tests/breakout/sample_output/sample_new_port_config.json b/platform/dcsg/tests/breakout/sample_output/sample_new_port_config.json
new file mode 100644
index 000000000..2d4cb86a1
--- /dev/null
+++ b/platform/dcsg/tests/breakout/sample_output/sample_new_port_config.json
@@ -0,0 +1,252 @@
+{
+    "Ethernet0_2x50G": {
+	    "Ethernet2": {
+	        "alias": "fortyGigE0/2",
+	        "lanes": "27,28",
+	        "speed": "50000",
+	        "index": "0",
+	        "subport": "2"
+	    },
+	    "Ethernet0": {
+	        "alias": "fortyGigE0/0",
+	        "lanes": "25,26",
+	        "speed": "50000",
+	        "index": "0",
+	        "subport": "1"
+	    }
+    },
+    "Ethernet12_1x50G_2x25G": {
+            "Ethernet12": {
+                "alias": "fortyGigE0/12",
+                "lanes": "37,38",
+                "speed": "50000",
+                "index": "3",
+                "subport": "1"
+            },
+            "Ethernet14": {
+                "alias": "fortyGigE0/14",
+                "lanes": "39",
+                "speed": "25000",
+                "index": "3",
+                "subport": "2"
+            },
+	    "Ethernet15": {
+                "alias": "fortyGigE0/15",
+                "lanes": "40",
+                "speed": "25000",
+                "index": "3",
+                "subport": "3"
+            }
+    },
+    "Ethernet0_2x50G": {
+            "Ethernet2": {
+                "alias": "fortyGigE0/2",
+                "lanes": "27,28",
+                "speed": "50000",
+                "index": "0",
+                "subport": "2"
+            },
+            "Ethernet0": {
+                "alias": "fortyGigE0/0",
+                "lanes": "25,26",
+                "speed": "50000",
+                "index": "0",
+                "subport": "1"
+            }
+    },
+    "Ethernet0_1x100G": {
+	    "Ethernet0": {
+	        "alias": "fortyGigE0/0",
+	        "lanes": "25,26,27,28",
+	        "speed": "100000",
+	        "index": "0",
+	        "subport": "1"
+	    }
+    },
+    "Ethernet0_4x25G":	{
+	    "Ethernet2": {
+	        "alias": "fortyGigE0/2",
+	        "lanes": "27",
+	        "speed": "25000",
+	        "index": "0",
+	        "subport": "3"
+	    },
+	    "Ethernet3": {
+	        "alias": "fortyGigE0/3",
+	        "lanes": "28",
+	        "speed": "25000",
+	        "index": "0",
+	        "subport": "4"
+	    },
+	    "Ethernet0": {
+	        "alias": "fortyGigE0/0",
+	        "lanes": "25",
+	        "speed": "25000",
+	        "index": "0",
+	        "subport": "1"
+	    },
+	    "Ethernet1": {
+	        "alias": "fortyGigE0/1",
+	        "lanes": "26",
+	        "speed": "25000",
+	        "index": "0",
+	        "subport": "2"
+	    }
+    },
+    "Ethernet0_2x25G_1x50G": {
+	    "Ethernet2": {
+	        "alias": "fortyGigE0/2",
+	        "lanes": "27,28",
+	        "speed": "50000",
+	        "index": "0",
+	        "subport": "3"
+	    },
+	    "Ethernet0": {
+	        "alias": "fortyGigE0/0",
+	        "lanes": "25",
+	        "speed": "25000",
+	        "index": "0",
+	        "subport": "1"
+	    },
+	    "Ethernet1": {
+	        "alias": "fortyGigE0/1",
+	        "lanes": "26",
+	        "speed": "25000",
+	        "index": "0",
+	        "subport": "2"
+	    }
+    },
+    "Ethernet0_1x50G_2x25G": {
+	    "Ethernet2": {
+	        "alias": "fortyGigE0/2",
+	        "lanes": "27",
+	        "speed": "25000",
+	        "index": "0",
+	        "subport": "2"
+	    },
+	    "Ethernet3": {
+	        "alias": "fortyGigE0/3",
+	        "lanes": "28",
+	        "speed": "25000",
+	        "index": "0",
+	        "subport": "3"
+	    },
+	    "Ethernet0": {
+	        "alias": "fortyGigE0/0",
+	        "lanes": "25,26",
+	        "speed": "50000",
+	        "index": "0",
+	        "subport": "1"
+		}
+    },
+    "Ethernet4_4x25G": {
+	"Ethernet6": {
+		"alias": "fortyGigE0/6",
+		"lanes": "31",
+		"speed": "25000",
+		"index": "1",
+		"subport": "3"
+	},
+	"Ethernet7": {
+		"alias": "fortyGigE0/7",
+		"lanes": "32",
+		"speed": "25000",
+		"index": "1",
+		"subport": "4"
+	},
+	"Ethernet4": {
+		"alias": "fortyGigE0/4",
+		"lanes": "29",
+		"speed": "25000",
+		"index": "1",
+		"subport": "1"
+	},
+	"Ethernet5": {
+		"alias": "fortyGigE0/5",
+		"lanes": "30",
+		"speed": "25000",
+		"index": "1",
+		"subport": "2"
+	}
+    },
+    "Ethernet4_2x50G": {
+        "Ethernet6": {
+		"alias": "fortyGigE0/6",
+		"lanes": "31,32",
+		"speed": "50000",
+		"index": "1",
+		"subport": "2"
+	},
+	"Ethernet4": {
+		"alias": "fortyGigE0/4",
+		"lanes": "29,30",
+		"speed": "50000",
+		"index": "1",
+		"subport": "1"
+	}
+    },
+    "Ethernet8_2x50G": {
+	    "Ethernet8": {
+	        "alias": "fortyGigE0/8",
+	        "lanes": "33,34",
+	        "speed": "50000",
+	        "index": "2",
+	        "subport": "1"
+	    },
+	    "Ethernet10": {
+	        "alias": "fortyGigE0/10",
+	        "lanes": "35,36",
+	        "speed": "50000",
+	        "index": "2",
+	        "subport": "2"
+	    }
+    },
+    "Ethernet8_1x50G_2x25G": {
+	    "Ethernet10": {
+	        "alias": "fortyGigE0/10",
+	        "lanes": "35",
+	        "speed": "25000",
+	        "index": "2",
+	        "subport": "1"
+	    },
+	    "Ethernet11": {
+	        "alias": "fortyGigE0/11",
+	        "lanes": "36",
+	        "speed": "25000",
+	        "index": "2",
+	        "subport": "2"
+	    }
+    },
+    "Ethernet8_2x25G_1x50G": {
+	    "Ethernet8": {
+	        "alias": "fortyGigE0/8",
+	        "lanes": "33",
+	        "speed": "25000",
+	        "index": "2",
+	        "subport": "1"
+	    },
+	    "Ethernet9": {
+	        "alias": "fortyGigE0/9",
+	        "lanes": "34",
+	        "speed": "25000",
+	        "index": "2",
+	        "subport": "2"
+	    },
+	    "Ethernet10": {
+	        "alias": "fortyGigE0/10",
+	        "lanes": "35,36",
+	        "speed": "50000",
+	        "index": "2",
+	        "subport": "3"
+	    }
+    },
+    "Ethernet8_1x100G": {
+	    "Ethernet8": {
+	        "alias": "fortyGigE0/8",
+	        "lanes": "33,34,35,36",
+	        "speed": "100000",
+	        "index": "2",
+	        "subport": "0"
+	    }
+    }
+}
diff --git a/platform/dcsg/tests/breakout/test_breakout_cli.py b/platform/dcsg/tests/breakout/test_breakout_cli.py
new file mode 100755
index 000000000..5a41aae5c
--- /dev/null
+++ b/platform/dcsg/tests/breakout/test_breakout_cli.py
@@ -0,0 +1,168 @@
+from swsscommon import swsscommon
+import time
+import os
+import json
+import ast
+import pytest
+import collections
+
+@pytest.mark.usefixtures('dpb_setup_fixture')
+class TestBreakoutCli(object):
+    def setup_db(self, dvs):
+        self.cdb = swsscommon.DBConnector(4, dvs.redis_sock, 0)
+
+    def read_Json(self, dvs):
+        test_dir = os.path.dirname(os.path.realpath(__file__))
+        sample_output_file = os.path.join(test_dir, 'sample_output', 'sample_new_port_config.json')
+        with open(sample_output_file, 'rb') as fh:
+            fh_data = json.load(fh)
+
+        if not fh_data:
+            return False
+        expected = ast.literal_eval(json.dumps(fh_data))
+        return expected
+
+    def breakout(self, dvs, interface, brkout_mode):
+        (exitcode, result) = dvs.runcmd("config interface breakout {} {} -y".format(interface, brkout_mode))
+
+        if result.strip("\n")[0] == "[ERROR] Breakout feature is not available without platform.json file" :
+            pytest.skip("**** This test is not needed ****")
+        root_dir = os.path.dirname('/')
+        (exitcode, output_dict) = dvs.runcmd("jq '.' new_port_config.json")
+        if output_dict is None:
+            raise Exception("Breakout output cant be None")
+
+        output_dict = ast.literal_eval(output_dict.strip())
+        return output_dict
+
+    # Check Initial Brakout Mode
+    def test_InitialBreakoutMode(self, dvs, testlog):
+        self.setup_db(dvs)
+
+        output_dict = {}
+        brkoutTbl = swsscommon.Table(self.cdb, "BREAKOUT_CFG")
+        brkout_entries = brkoutTbl.getKeys()
+        assert len(brkout_entries) == 32
+
+        for key in brkout_entries:
+            (status, fvs) = brkoutTbl.get(key)
+            assert status
+
+            brkout_mode = fvs[0][1]
+            output_dict[key] = brkout_mode
+        output = collections.OrderedDict(sorted(output_dict.items(), key=lambda t: t[0]))
+        expected_dict = \
+                {'Ethernet8': '1x100G[40G]', 'Ethernet0': '1x100G[40G]', 'Ethernet4': '1x100G[40G]', \
+                'Ethernet108': '1x100G[40G]', 'Ethernet100': '1x100G[40G]', 'Ethernet104': '1x100G[40G]', \
+                'Ethernet68': '1x100G[40G]', 'Ethernet96': '1x100G[40G]', 'Ethernet124': '1x100G[40G]', \
+                'Ethernet92': '1x100G[40G]', 'Ethernet120': '1x100G[40G]', 'Ethernet52': '1x100G[40G]', \
+                'Ethernet56': '1x100G[40G]', 'Ethernet76': '1x100G[40G]', 'Ethernet72': '1x100G[40G]', \
+                'Ethernet32': '1x100G[40G]', 'Ethernet16': '1x100G[40G]', 'Ethernet36': '1x100G[40G]', \
+                'Ethernet12': '1x100G[40G]', 'Ethernet28': '1x100G[40G]', 'Ethernet88': '1x100G[40G]', \
+                'Ethernet116': '1x100G[40G]', 'Ethernet80': '1x100G[40G]', 'Ethernet112': '1x100G[40G]', \
+                'Ethernet84': '1x100G[40G]', 'Ethernet48': '1x100G[40G]', 'Ethernet44': '1x100G[40G]', \
+                'Ethernet40': '1x100G[40G]', 'Ethernet64': '1x100G[40G]', 'Ethernet60': '1x100G[40G]', \
+                'Ethernet20': '1x100G[40G]', 'Ethernet24': '1x100G[40G]'}
+        expected = collections.OrderedDict(sorted(expected_dict.items(), key=lambda t: t[0]))
+        assert output == expected
+
+    # Breakout Cli Test Mode
+    def test_breakout_modes(self, dvs):
+        expected = self.read_Json(dvs)
+        assert expected
+
+        print("**** Breakout Cli test Starts ****")
+        output_dict = self.breakout(dvs, 'Ethernet0', '2x50G')
+        expected_dict = expected["Ethernet0_2x50G"]
+        assert output_dict == expected_dict, "output: {} != expected: {}".format(output_dict, expected_dict)
+        print("**** 1X100G --> 2x50G passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet4', '4x25G[10G]')
+        expected_dict = expected["Ethernet4_4x25G"]
+        assert output_dict == expected_dict, "output: {} != expected: {}".format(output_dict, expected_dict)
+        print("**** 1X100G --> 4x25G[10G] passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet8', '2x25G(2)+1x50G(2)')
+        expected_dict = expected["Ethernet8_2x25G_1x50G"]
+        assert output_dict == expected_dict, "output: {} != expected: {}".format(output_dict, expected_dict)
+        print("**** 1X100G --> 2x25G(2)+1x50G(2) passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet12', '1x50G(2)+2x25G(2)')
+        expected_dict = expected["Ethernet12_1x50G_2x25G"]
+        assert output_dict == expected_dict, "output: {} != expected: {}".format(output_dict, expected_dict)
+        print("**** 1X100G --> 1x50G(2)+2x25G(2) passed ****")
+
+        # TODOFIX: remove comments once #4442 PR got merged and
+        # yang model for DEVICE_METADATA becomes available.
+        # As below test cases are dependent on DEVICE_METADATA to go
+        # from a non-default breakout mode to a different breakout mode.
+        """
+        output_dict = self.breakout(dvs, 'Ethernet0', '1x100G[40G]')
+        expected_dict = expected["Ethernet0_1x100G"]
+        assert output_dict == expected_dict
+        print("**** 2x50G --> 1x100G[40G] passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet0', '4x25G[10G]')
+        expected_dict = expected["Ethernet0_4x25G"]
+        assert output_dict == expected_dict
+        print("**** 1X100G --> 4x25G[10G] passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet0', '1x100G[40G]')
+        expected_dict = expected["Ethernet0_1x100G"]
+        assert output_dict == expected_dict
+        print("**** 4x25G[10G] --> 1x100G[40G] passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet4', '2x50G')
+        print("**** 1X100G --> 2x50G mode change ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet4', '4x25G[10G]')
+        expected_dict = expected["Ethernet4_4x25G"]
+        assert output_dict == expected_dict
+        print("**** 2X50G --> 4x25G[10G] passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet4', '2x50G')
+        expected_dict = expected["Ethernet4_2x50G"]
+        assert output_dict == expected_dict
+        print("**** 4x25G[10G] --> 2X50G passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet4', '1x100G[40G]')
+        print("**** 2x50G  -- > 1X100G mode change ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet0', '2x25G(2)+1x50G(2)')
+        expected_dict = expected["Ethernet0_2x25G_1x50G"]
+        assert output_dict == expected_dict
+        print("**** 1x100G[40G] --> 2x25G(2)+1x50G(2) passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet0', '1x100G[40G]')
+        expected_dict = expected["Ethernet0_1x100G"]
+        assert output_dict == expected_dict
+        print("**** 2x25G(2)+1x50G(2) --> 1x100G[40G] passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet0', '1x50G(2)+2x25G(2)')
+        expected_dict = expected["Ethernet0_1x50G_2x25G"]
+        assert output_dict == expected_dict
+        print("**** 1x100G[40G] --> 1x50G(2)+2x25G(2)  passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet0', '1x100G[40G]')
+        expected_dict = expected["Ethernet0_1x100G"]
+        assert output_dict == expected_dict
+        print("**** 1x50G(2)+2x25G(2) --> 1x100G[40G] passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet8', '2x50G')
+        print("**** 1x100G[40G] --> 2x50G  mode change ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet8', '1x50G(2)+2x25G(2)')
+        expected_dict = expected["Ethernet8_1x50G_2x25G"]
+        assert output_dict == expected_dict
+        print("**** 2x50G --> 2x25G(2)+1x50G(2)  passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet8', '2x25G(2)+1x50G(2)')
+        expected_dict = expected["Ethernet8_2x25G_1x50G"]
+        assert output_dict == expected_dict
+        print("**** 1x50G(2)+2x25G(2) --> 2x25G(2)+1x50G(2)  passed ****")
+
+        output_dict = self.breakout(dvs, 'Ethernet8', '1x100G[40G]')
+        expected_dict = expected["Ethernet8_1x100G"]
+        assert output_dict == expected_dict
+        print("**** 2x25G(2)+1x50G(2)  --> 1x100G[40G]  passed ****")
+        """
diff --git a/platform/dcsg/tests/conftest.py b/platform/dcsg/tests/conftest.py
new file mode 120000
index 000000000..9fef6363d
--- /dev/null
+++ b/platform/dcsg/tests/conftest.py
@@ -0,0 +1 @@
+../../../src/sonic-swss/tests/conftest.py
\ No newline at end of file
diff --git a/platform/dcsg/tests/dvslib b/platform/dcsg/tests/dvslib
new file mode 120000
index 000000000..4bab298a1
--- /dev/null
+++ b/platform/dcsg/tests/dvslib
@@ -0,0 +1 @@
+../../../src/sonic-swss/tests/dvslib
\ No newline at end of file
diff --git a/platform/dcsg/tests/teamd/test_portchannel.py b/platform/dcsg/tests/teamd/test_portchannel.py
new file mode 100644
index 000000000..0632bf874
--- /dev/null
+++ b/platform/dcsg/tests/teamd/test_portchannel.py
@@ -0,0 +1,37 @@
+from swsscommon import swsscommon
+import time
+import re
+import json
+
+def test_PortChannel(dvs, testlog):
+    appldb = swsscommon.DBConnector(0, dvs.redis_sock, 0)
+    statdb = swsscommon.DBConnector(6, dvs.redis_sock, 0)
+
+    # create the lag
+    dvs.runcmd("config portchannel add PortChannel0001")
+    time.sleep(1)
+
+    # test lag table in appl db
+    tbl = swsscommon.Table(appldb, "LAG_TABLE")
+    (status, fvs) = tbl.get("PortChannel0001")
+    assert status == True
+
+    # test lag table in state db
+    tbl = swsscommon.Table(statdb, "LAG_TABLE")
+    (status, fvs) = tbl.get("PortChannel0001")
+    assert status == True
+
+    # create the lag member
+    dvs.runcmd("config portchannel member add PortChannel0001 Ethernet112")
+    time.sleep(1)
+
+    # test lag member table in appl db
+    tbl = swsscommon.Table(appldb, "LAG_MEMBER_TABLE")
+    (status, fvs) = tbl.get("PortChannel0001:Ethernet112")
+    assert status == True
+
+    # remove the lag member
+    dvs.runcmd("config portchannel member del PortChannel0001 Ethernet112")
+
+    # remove the lag
+    dvs.runcmd("config portchannel del PortChannel0001")
diff --git a/rules/sairedis.mk b/rules/sairedis.mk
index 1dae3b6bb..1fb294af0 100644
--- a/rules/sairedis.mk
+++ b/rules/sairedis.mk
@@ -22,6 +22,13 @@ LIBSAIVS_DEV = libsaivs-dev_$(LIBSAIREDIS_VERSION)_$(CONFIGURED_ARCH).deb
 $(eval $(call add_derived_package,$(LIBSAIREDIS),$(LIBSAIVS_DEV)))
 $(LIBSAIVS_DEV)_DEPENDS += $(LIBSAIVS)
 
+LIBSAIDCSG = libsaidcsg_$(LIBSAIREDIS_VERSION)_$(CONFIGURED_ARCH).deb
+$(eval $(call add_derived_package,$(LIBSAIREDIS),$(LIBSAIDCSG)))
+
+LIBSAIDCSG_DEV = libsaidcsg-dev_$(LIBSAIREDIS_VERSION)_$(CONFIGURED_ARCH).deb
+$(eval $(call add_derived_package,$(LIBSAIREDIS),$(LIBSAIDCSG_DEV)))
+$(LIBSAIDCSG_DEV)_DEPENDS += $(LIBSAIDCSG)
+
 LIBSAIMETADATA = libsaimetadata_$(LIBSAIREDIS_VERSION)_$(CONFIGURED_ARCH).deb
 $(eval $(call add_derived_package,$(LIBSAIREDIS),$(LIBSAIMETADATA)))
 
@@ -39,6 +46,11 @@ $(LIBSAIVS_DBG)_DEPENDS += $(LIBSAIVS)
 $(LIBSAIVS_DBG)_RDEPENDS += $(LIBSAIVS)
 $(eval $(call add_derived_package,$(LIBSAIREDIS),$(LIBSAIVS_DBG)))
 
+LIBSAIDCSG_DBG = libsaidcsg-dbgsym_$(LIBSAIREDIS_VERSION)_$(CONFIGURED_ARCH).deb
+$(LIBSAIDCSG_DBG)_DEPENDS += $(LIBSAIDCSG)
+$(LIBSAIDCSG_DBG)_RDEPENDS += $(LIBSAIDCSG)
+$(eval $(call add_derived_package,$(LIBSAIREDIS),$(LIBSAIDCSG_DBG)))
+
 LIBSAIMETADATA_DBG = libsaimetadata-dbgsym_$(LIBSAIREDIS_VERSION)_$(CONFIGURED_ARCH).deb
 $(LIBSAIMETADATA_DBG)_DEPENDS += $(LIBSAIMETADATA)
 $(LIBSAIMETADATA_DBG)_RDEPENDS += $(LIBSAIMETADATA)
diff --git a/rules/syncd.dep b/rules/syncd.dep
index a9a72d4f2..6fb3d4753 100644
--- a/rules/syncd.dep
+++ b/rules/syncd.dep
@@ -1,5 +1,6 @@
 
 ifneq ($(CONFIGURED_PLATFORM),vs)
+ifneq ($(CONFIGURED_PLATFORM),dcsg)
 
 #DPKG FRK
 SPATH       := $($(SYNCD)_SRC_PATH)
@@ -18,3 +19,4 @@ $(SYNCD)_SMDEP_FILES := $(foreach path, $(SMDEP_PATHS), $($(path)))
 $(SYNCD)_SMDEP_PATHS := $(SMDEP_PATHS)
 
 endif
+endif
diff --git a/rules/syncd.mk b/rules/syncd.mk
index cbed33fbf..2c99ff7b8 100644
--- a/rules/syncd.mk
+++ b/rules/syncd.mk
@@ -1,6 +1,7 @@
 # only used for non-vs platforms
 
 ifneq ($(CONFIGURED_PLATFORM),vs)
+ifneq ($(CONFIGURED_PLATFORM),dcsg)
 
 SYNCD = syncd_1.0.0_$(CONFIGURED_ARCH).deb
 $(SYNCD)_RDEPENDS += $(LIBSAIREDIS) $(LIBSAIMETADATA)
@@ -38,3 +39,4 @@ ifeq ($(ENABLE_PY2_MODULES), n)
 endif
 
 endif
+endif
diff --git a/slave.mk b/slave.mk
index 8f3864c42..4e0cd7fda 100644
--- a/slave.mk
+++ b/slave.mk
@@ -479,6 +479,7 @@ $(info "LEGACY_SONIC_MGMT_DOCKER"        : "$(LEGACY_SONIC_MGMT_DOCKER)")
 $(info "INCLUDE_EXTERNAL_PATCHES"        : "$(INCLUDE_EXTERNAL_PATCHES)")
 $(info "PTF_ENV_PY_VER"                  : "$(PTF_ENV_PY_VER)")
 $(info "ENABLE_MULTIDB"                  : "$(ENABLE_MULTIDB)")
+$(info "SONIC_INSTALLERS"                : "$(SONIC_INSTALLERS)")
 $(info )
 else
 $(info SONiC Build System for $(CONFIGURED_PLATFORM):$(CONFIGURED_ARCH))
diff --git a/src/p4lang/Makefile b/src/p4lang/Makefile
index a896001ba..3e774197b 100644
--- a/src/p4lang/Makefile
+++ b/src/p4lang/Makefile
@@ -8,6 +8,7 @@ $(addprefix $(DEST)/, $(P4LANG_TARGET)): $(DEST)/% :
 # 	# Remove any stale files
 	rm -rf p4lang-pi-$(P4LANG_PI_VERSION)
 	dget -u p4lang-pi_$(P4LANG_PI_VERSION_FULL).dsc http://download.opensuse.org/repositories/home:/p4lang/Debian_11/p4lang-pi_$(P4LANG_PI_VERSION_FULL).dsc
+	echo "override_dh_auto_test:" >> p4lang-pi-$(P4LANG_PI_VERSION)/debian/rules
 	pushd p4lang-pi-$(P4LANG_PI_VERSION)
 ifeq ($(CROSS_BUILD_ENVIRON), y)
 	dpkg-buildpackage -us -uc -b -a$(CONFIGURED_ARCH) -Pcross,nocheck -j$(SONIC_CONFIG_MAKE_JOBS) --admindir $(SONIC_DPKG_ADMINDIR)
@@ -23,6 +24,7 @@ $(addprefix $(DEST)/, $(P4LANG_BMV2_TARGET)): $(DEST)/% :
 # 	# Remove any stale files
 	rm -rf p4lang-bmv2-$(P4LANG_BMV2_VERSION)
 	dget -u p4lang-bmv2_$(P4LANG_BMV2_VERSION_FULL).dsc http://download.opensuse.org/repositories/home:/p4lang/Debian_11/p4lang-bmv2_$(P4LANG_BMV2_VERSION_FULL).dsc
+	echo "override_dh_auto_test:" >> p4lang-bmv2-$(P4LANG_BMV2_VERSION)/debian/rules
 	pushd p4lang-bmv2-$(P4LANG_BMV2_VERSION)
 ifeq ($(CROSS_BUILD_ENVIRON), y)
 	dpkg-buildpackage -us -uc -b -a$(CONFIGURED_ARCH) -Pcross,nocheck -j$(SONIC_CONFIG_MAKE_JOBS) --admindir $(SONIC_DPKG_ADMINDIR)
diff --git a/src/sonic-bmp b/src/sonic-bmp
--- a/src/sonic-bmp
+++ b/src/sonic-bmp
@@ -1 +1 @@
-Subproject commit 1971625cb2fa5a754af72f2d42e5731a173c2378
+Subproject commit 1971625cb2fa5a754af72f2d42e5731a173c2378-dirty
diff --git a/src/sonic-sairedis b/src/sonic-sairedis
--- a/src/sonic-sairedis
+++ b/src/sonic-sairedis
@@ -1 +1 @@
-Subproject commit 77d82e823a6bee0ddbd694500cc677953665013a
+Subproject commit 77d82e823a6bee0ddbd694500cc677953665013a-dirty
